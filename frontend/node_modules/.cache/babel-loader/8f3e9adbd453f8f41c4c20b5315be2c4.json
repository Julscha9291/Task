{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Task.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nconst Task = ({\n  show,\n  onClose,\n  createTask,\n  editTask,\n  taskToEdit\n}) => {\n  const navigate = useNavigate();\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n  const [users, setUsers] = useState([]);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  useEffect(() => {\n    // Fetch users from the API\n    fetch('http://localhost:8000/api/users/').then(response => response.json()).then(data => setUsers(data)).catch(error => console.error('Error fetching users:', error));\n  }, []);\n  const getRandomColor = () => {\n    const colors = ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8'];\n    const availableColors = colors.filter(color => !usedColors[color]);\n    if (availableColors.length === 0) {\n      return '#6c757d';\n    }\n    const randomIndex = Math.floor(Math.random() * availableColors.length);\n    return availableColors[randomIndex];\n  };\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category);\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n      setSelectedContacts(taskToEdit.contacts || []);\n    }\n  }, [taskToEdit]);\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = users.find(contact => contact.id === selectedContactId);\n    if (selectedContact && !selectedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = selectedContact.color;\n      setAssignedContacts([...assignedContacts, {\n        ...selectedContact,\n        color\n      }]);\n      setUsedColors({\n        ...usedColors,\n        [color]: true\n      });\n      setSelectedContacts([...selectedContacts, selectedContact]);\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const {\n        color\n      } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({\n        ...usedColors,\n        [color]: false\n      });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setSelectedContacts([]);\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const errors = {\n      title: !title.trim(),\n      description: !description.trim(),\n      category: !category.trim()\n    };\n    if (Object.values(errors).some(error => error)) {\n      setFormErrors(errors);\n      return;\n    }\n    const newTask = {\n      title,\n      description,\n      category,\n      due_date: dueDate ? dueDate.toISOString() : null,\n      priority: selectedPriority,\n      subtasks,\n      contacts: assignedContacts.map(contact => contact.id)\n    };\n    try {\n      if (taskToEdit) {\n        await editTask(taskToEdit.id, newTask);\n      } else {\n        await createTask(newTask);\n      }\n      handleClearAll();\n      navigate('/'); // Redirect to the homepage or another page after creating/editing the task\n    } catch (error) {\n      console.error('Error creating/editing task:', error);\n    }\n  };\n  if (!show) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `modal ${show ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"modal-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, taskToEdit ? 'Edit Task' : 'Create Task'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    className: `form-control ${formErrors.title ? 'is-invalid' : ''}`,\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), formErrors.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 38\n    }\n  }, \"Title is required.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    className: `form-control ${formErrors.description ? 'is-invalid' : ''}`,\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), formErrors.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 44\n    }\n  }, \"Description is required.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    className: `form-control ${formErrors.category ? 'is-invalid' : ''}`,\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }, \"Select a category\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, category.name))), formErrors.category && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  }, \"Category is required.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dueDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n    id: \"dueDate\",\n    className: \"form-control\",\n    selected: dueDate,\n    onChange: date => setDueDate(date),\n    dateFormat: \"yyyy-MM-dd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"priority\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }, \"Priority\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"priority\",\n    className: \"form-control\",\n    value: selectedPriority,\n    onChange: e => handleSelectPriority(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, \"Select priority\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"low\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"high\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, \"High\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"urgent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, \"Urgent\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, \"Add Subtask\"))), subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: subtask.text,\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"assignedContacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"Assign Contacts\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"assignedContacts\",\n    className: \"form-control\",\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  }, \"Select a contact\"), users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.id,\n    value: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 21\n    }\n  }, user.first_name, \" \", user.last_name))), assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n    key: contact.id,\n    className: \"badge badge-primary mr-2\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, contact.first_name.charAt(0), contact.last_name.charAt(0), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close ml-1\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 21\n    }\n  }, \"\\xD7\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }\n  }, taskToEdit ? 'Save Changes' : 'Create Task')))))));\n};\nexport default Task;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","useNavigate","faTimes","Datetime","Task","show","onClose","createTask","editTask","taskToEdit","navigate","categories","id","name","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","formErrors","setFormErrors","users","setUsers","selectedContacts","setSelectedContacts","fetch","then","response","json","data","catch","error","console","getRandomColor","colors","availableColors","filter","color","usedColors","length","randomIndex","Math","floor","random","due_date","Date","contacts","priority","handleAddSubtask","trim","text","completed","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","find","contact","some","setUsedColors","handleRemoveAssignedContact","contactId","removedContact","updatedContacts","handleSelectPriority","handleClearAll","handleSubmit","preventDefault","errors","Object","values","newTask","toISOString","map","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","onSubmit","htmlFor","onChange","e","key","DatePicker","selected","date","dateFormat","subtask","index","readOnly","user","first_name","last_name","style","backgroundColor","charAt"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\n\nconst Task = ({ show, onClose, createTask, editTask, taskToEdit }) => {\n  const navigate = useNavigate();\n\n  const categories = [\n    { id: 'todo', name: 'To Do' },\n    { id: 'inProgress', name: 'In Progress' },\n    { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n    { id: 'done', name: 'Done' }\n  ];\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n\n  const [users, setUsers] = useState([]);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  useEffect(() => {\n    // Fetch users from the API\n    fetch('http://localhost:8000/api/users/')\n      .then(response => response.json())\n      .then(data => setUsers(data))\n      .catch(error => console.error('Error fetching users:', error));\n  }, []);\n\n  const getRandomColor = () => {\n    const colors = ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8'];\n    const availableColors = colors.filter(color => !usedColors[color]);\n    if (availableColors.length === 0) {\n      return '#6c757d';\n    }\n    const randomIndex = Math.floor(Math.random() * availableColors.length);\n    return availableColors[randomIndex];\n  };\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category);\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n      setSelectedContacts(taskToEdit.contacts || []);\n    }\n  }, [taskToEdit]);\n\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n      setSubtaskText('');\n    }\n  };\n\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = users.find(contact => contact.id === selectedContactId);\n\n    if (selectedContact && !selectedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = selectedContact.color;\n      setAssignedContacts([...assignedContacts, { ...selectedContact, color }]);\n      setUsedColors({ ...usedColors, [color]: true });\n      setSelectedContacts([...selectedContacts, selectedContact]);\n    }\n  };\n\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const { color } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({ ...usedColors, [color]: false });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setSelectedContacts([]);\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    const errors = {\n      title: !title.trim(),\n      description: !description.trim(),\n      category: !category.trim()\n    };\n\n    if (Object.values(errors).some(error => error)) {\n      setFormErrors(errors);\n      return;\n    }\n\n    const newTask = {\n      title,\n      description,\n      category,\n      due_date: dueDate ? dueDate.toISOString() : null,\n      priority: selectedPriority,\n      subtasks,\n      contacts: assignedContacts.map(contact => contact.id)\n    };\n\n    try {\n      if (taskToEdit) {\n        await editTask(taskToEdit.id, newTask);\n      } else {\n        await createTask(newTask);\n      }\n\n      handleClearAll();\n      navigate('/'); // Redirect to the homepage or another page after creating/editing the task\n    } catch (error) {\n      console.error('Error creating/editing task:', error);\n    }\n  };\n\n  if (!show) {\n    return null;\n  }\n\n  return (\n    <div className={`modal ${show ? 'show' : ''}`}>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">{taskToEdit ? 'Edit Task' : 'Create Task'}</h5>\n            <button type=\"button\" className=\"close\" onClick={onClose}>\n              <span>&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  className={`form-control ${formErrors.title ? 'is-invalid' : ''}`}\n                  value={title}\n                  onChange={e => setTitle(e.target.value)}\n                />\n                {formErrors.title && <div className=\"invalid-feedback\">Title is required.</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  id=\"description\"\n                  className={`form-control ${formErrors.description ? 'is-invalid' : ''}`}\n                  value={description}\n                  onChange={e => setDescription(e.target.value)}\n                ></textarea>\n                {formErrors.description && <div className=\"invalid-feedback\">Description is required.</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"category\">Category</label>\n                <select\n                  id=\"category\"\n                  className={`form-control ${formErrors.category ? 'is-invalid' : ''}`}\n                  value={category}\n                  onChange={e => setCategory(e.target.value)}\n                >\n                  <option value=\"\">Select a category</option>\n                  {categories.map(category => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n                </select>\n                {formErrors.category && <div className=\"invalid-feedback\">Category is required.</div>}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"dueDate\">Due Date</label>\n                <DatePicker\n                  id=\"dueDate\"\n                  className=\"form-control\"\n                  selected={dueDate}\n                  onChange={date => setDueDate(date)}\n                  dateFormat=\"yyyy-MM-dd\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"priority\">Priority</label>\n                <select\n                  id=\"priority\"\n                  className=\"form-control\"\n                  value={selectedPriority}\n                  onChange={e => handleSelectPriority(e.target.value)}\n                >\n                  <option value=\"\">Select priority</option>\n                  <option value=\"low\">Low</option>\n                  <option value=\"medium\">Medium</option>\n                  <option value=\"high\">High</option>\n                  <option value=\"urgent\">Urgent</option>\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label>Subtasks</label>\n                <div className=\"input-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={subtaskText}\n                    onChange={e => setSubtaskText(e.target.value)}\n                  />\n                  <div className=\"input-group-append\">\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddSubtask}>\n                      Add Subtask\n                    </button>\n                  </div>\n                </div>\n                {subtasks.map((subtask, index) => (\n                  <div key={index} className=\"form-group\">\n                    <input type=\"text\" className=\"form-control\" value={subtask.text} readOnly />\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"assignedContacts\">Assign Contacts</label>\n                <select\n                  id=\"assignedContacts\"\n                  className=\"form-control\"\n                  onChange={handleAssignContact}\n                >\n                  <option value=\"\">Select a contact</option>\n                  {users.map(user => (\n                    <option key={user.id} value={user.id}>\n                      {user.first_name} {user.last_name}\n                    </option>\n                  ))}\n                </select>\n                {assignedContacts.map(contact => (\n                  <div key={contact.id} className=\"badge badge-primary mr-2\" style={{ backgroundColor: contact.color }}>\n                    {contact.first_name.charAt(0)}{contact.last_name.charAt(0)}\n                    <button type=\"button\" className=\"close ml-1\" onClick={() => handleRemoveAssignedContact(contact.id)}>\n                      &times;\n                    </button>\n                  </div>\n                ))}\n              </div>\n\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" onClick={onClose}>\n                  Cancel\n                </button>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  {taskToEdit ? 'Save Changes' : 'Create Task'}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}