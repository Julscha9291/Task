{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Task.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nconst Task = ({\n  show,\n  onClose,\n  createTask,\n  editTask,\n  taskToEdit\n}) => {\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const dummyContacts = [{\n    id: 1,\n    name: 'John Doe'\n  }, {\n    id: 2,\n    name: 'Jane Smith'\n  }, {\n    id: 3,\n    name: 'Michael Johnson'\n  }, {\n    id: 4,\n    name: 'Emily Davis'\n  }, {\n    id: 5,\n    name: 'David Brown'\n  }];\n  const [usedColors, setUsedColors] = useState({});\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const getRandomColor = () => {\n    const colors = ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8'];\n    const availableColors = colors.filter(color => !usedColors[color]);\n    if (availableColors.length === 0) {\n      return '#6c757d';\n    }\n    const randomIndex = Math.floor(Math.random() * availableColors.length);\n    return availableColors[randomIndex];\n  };\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category);\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n      setSelectedContacts(taskToEdit.contacts || []);\n    }\n  }, [taskToEdit]);\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleToggleSubtask = index => {\n    const newSubtasks = subtasks.map((subtask, i) => i === index ? {\n      ...subtask,\n      completed: !subtask.completed\n    } : subtask);\n    setSubtasks(newSubtasks);\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n    if (selectedContact && !selectedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = getRandomColor();\n      setAssignedContacts([...assignedContacts, {\n        ...selectedContact,\n        color\n      }]);\n      setUsedColors({\n        ...usedColors,\n        [color]: true\n      });\n      setSelectedContacts([...selectedContacts, selectedContact]);\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const {\n        color\n      } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({\n        ...usedColors,\n        [color]: false\n      });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedContacts([]);\n    setSelectedPriority(null);\n    setUsedColors({});\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title && description && category) {\n      const taskData = {\n        title,\n        description,\n        category,\n        due_date: dueDate,\n        priority: selectedPriority,\n        subtasks: subtasks.map(subtask => ({\n          text: subtask.text,\n          completed: subtask.completed\n        })),\n        contacts: assignedContacts.map(contact => ({\n          name: contact.name\n        }))\n      };\n      if (taskToEdit) {\n        // Edit existing task\n        fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(taskData)\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        }).then(data => {\n          console.log('Updated task:', data);\n          handleClearAll();\n          onClose();\n        }).catch(error => {\n          console.error('Fetch error:', error);\n        });\n      } else {\n        // Create new task\n        fetch('http://localhost:8000/api/tasks/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(taskData)\n        }).then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        }).then(data => {\n          console.log('Created task:', data);\n          handleClearAll();\n          onClose();\n        }).catch(error => {\n          console.error('Fetch error:', error);\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `task-container ${show ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, taskToEdit ? 'Edit Task' : 'Add Task'), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Enter a title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Enter a description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"Select task category\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, category.name))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, \"Assigned to\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Select contacts to assign\"), dummyContacts.map(contact => /*#__PURE__*/React.createElement(\"option\", {\n    key: contact.id,\n    value: contact.id,\n    disabled: selectedContacts.some(c => c.id === contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, contact.name))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, contact.name.split(' ').map(part => part.charAt(0)).join('').toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }\n  }, contact.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"remove-contact\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, \"Due date\"), /*#__PURE__*/React.createElement(Datetime, {\n    value: dueDate,\n    onChange: date => setDueDate(date),\n    dateFormat: \"DD/MM/YYYY\",\n    timeFormat: false,\n    inputProps: {\n      placeholder: 'Select due date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, \"Prio\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prio-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('urgent'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, \"Urgent\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('medium'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('low'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }, \"Low\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtask-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    placeholder: \"Add new subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtask-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: subtask.completed ? 'completed' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: subtask.completed,\n    onChange: () => handleToggleSubtask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, subtask.text)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-button\",\n    onClick: handleClearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"create-button\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, taskToEdit ? 'Update Task' : 'Create Task')));\n};\nexport default Task;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faTimes","Datetime","Task","show","onClose","createTask","editTask","taskToEdit","categories","id","name","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","dummyContacts","usedColors","setUsedColors","selectedContacts","setSelectedContacts","getRandomColor","colors","availableColors","filter","color","length","randomIndex","Math","floor","random","due_date","Date","contacts","priority","handleAddSubtask","trim","text","completed","handleToggleSubtask","index","newSubtasks","map","subtask","i","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","find","contact","some","handleRemoveAssignedContact","contactId","removedContact","updatedContacts","handleSelectPriority","handleClearAll","handleSubmit","e","preventDefault","taskData","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","data","console","log","catch","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","onSubmit","type","onChange","placeholder","key","disabled","c","style","backgroundColor","split","part","charAt","join","toUpperCase","date","dateFormat","timeFormat","inputProps","checked"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\n\nconst Task = ({ show, onClose, createTask, editTask, taskToEdit }) => {\n  const categories = [\n    { id: 'todo', name: 'To Do' },\n    { id: 'inProgress', name: 'In Progress' },\n    { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n    { id: 'done', name: 'Done' }\n  ];\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n\n  const dummyContacts = [\n    { id: 1, name: 'John Doe' },\n    { id: 2, name: 'Jane Smith' },\n    { id: 3, name: 'Michael Johnson' },\n    { id: 4, name: 'Emily Davis' },\n    { id: 5, name: 'David Brown' }\n  ];\n\n  const [usedColors, setUsedColors] = useState({});\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  const getRandomColor = () => {\n    const colors = ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8'];\n    const availableColors = colors.filter(color => !usedColors[color]);\n    if (availableColors.length === 0) {\n      return '#6c757d';\n    }\n    const randomIndex = Math.floor(Math.random() * availableColors.length);\n    return availableColors[randomIndex];\n  };\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category);\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n      setSelectedContacts(taskToEdit.contacts || []);\n    }\n  }, [taskToEdit]);\n\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n      setSubtaskText('');\n    }\n  };\n\n  const handleToggleSubtask = index => {\n    const newSubtasks = subtasks.map((subtask, i) =>\n      i === index ? { ...subtask, completed: !subtask.completed } : subtask\n    );\n    setSubtasks(newSubtasks);\n  };\n\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n\n    if (selectedContact && !selectedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = getRandomColor();\n      setAssignedContacts([...assignedContacts, { ...selectedContact, color }]);\n      setUsedColors({ ...usedColors, [color]: true });\n      setSelectedContacts([...selectedContacts, selectedContact]);\n    }\n  };\n\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const { color } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({ ...usedColors, [color]: false });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedContacts([]);\n    setSelectedPriority(null);\n    setUsedColors({});\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (title && description && category) {\n      const taskData = {\n        title,\n        description,\n        category,\n        due_date: dueDate,\n        priority: selectedPriority,\n        subtasks: subtasks.map(subtask => ({\n          text: subtask.text,\n          completed: subtask.completed\n        })),\n        contacts: assignedContacts.map(contact => ({\n          name: contact.name\n        }))\n      };\n\n      if (taskToEdit) {\n        // Edit existing task\n        fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(taskData),\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          console.log('Updated task:', data);\n          handleClearAll();\n          onClose();\n        })\n        .catch((error) => {\n          console.error('Fetch error:', error);\n        });\n      } else {\n        // Create new task\n        fetch('http://localhost:8000/api/tasks/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(taskData),\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          return response.json();\n        })\n        .then(data => {\n          console.log('Created task:', data);\n          handleClearAll();\n          onClose();\n        })\n        .catch((error) => {\n          console.error('Fetch error:', error);\n        });\n      }\n    }\n  };\n\n  return (\n    <div className={`task-container ${show ? 'show' : ''}`}>\n      <div className=\"task-header\">\n        <h2>{taskToEdit ? 'Edit Task' : 'Add Task'}</h2>\n        <button className=\"close-button\" onClick={onClose}>\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n      <form className=\"task-form\" onSubmit={handleSubmit}>\n        <div className=\"form-left\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            placeholder=\"Enter a title\"\n          />\n          <label>Description</label>\n          <textarea\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            placeholder=\"Enter a description\"\n          ></textarea>\n          <label>Category</label>\n          <select\n            value={category}\n            onChange={e => setCategory(e.target.value)}\n          >\n            <option value=\"\">Select task category</option>\n            {categories.map(category => (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n          <label>Assigned to</label>\n          <select onChange={handleAssignContact}>\n            <option value=\"\">Select contacts to assign</option>\n            {dummyContacts.map(contact => (\n              <option key={contact.id} value={contact.id} disabled={selectedContacts.some(c => c.id === contact.id)}>\n                {contact.name}\n              </option>\n            ))}\n          </select>\n          <ul className=\"assigned-contacts\">\n            {assignedContacts.map(contact => (\n              <li key={contact.id}>\n                <div className=\"contact-info\">\n                  <div\n                    className=\"contact-initials\"\n                    style={{ backgroundColor: contact.color }}\n                  >\n                    {contact.name\n                      .split(' ')\n                      .map(part => part.charAt(0))\n                      .join('')\n                      .toUpperCase()}\n                  </div>\n                  <span>{contact.name}</span>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"remove-contact\"\n                  onClick={() => handleRemoveAssignedContact(contact.id)}\n                >\n                  <FontAwesomeIcon icon={faTimes} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-right\">\n          <label>Due date</label>\n          <Datetime\n            value={dueDate}\n            onChange={date => setDueDate(date)}\n            dateFormat=\"DD/MM/YYYY\"\n            timeFormat={false}\n            inputProps={{ placeholder: 'Select due date' }}\n          />\n          <label>Prio</label>\n          <div className=\"prio-buttons\">\n            <button\n              type=\"button\"\n              className={`prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('urgent')}\n            >\n              Urgent\n            </button>\n            <button\n              type=\"button\"\n              className={`prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('medium')}\n            >\n              Medium\n            </button>\n            <button\n              type=\"button\"\n              className={`prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('low')}\n            >\n              Low\n            </button>\n          </div>\n          <label>Subtasks</label>\n          <div className=\"subtask-input\">\n            <input\n              type=\"text\"\n              value={subtaskText}\n              onChange={e => setSubtaskText(e.target.value)}\n              placeholder=\"Add new subtask\"\n            />\n            <button type=\"button\" onClick={handleAddSubtask}>\n              Add\n            </button>\n          </div>\n          <ul className=\"subtask-list\">\n            {subtasks.map((subtask, index) => (\n              <li key={index} className={subtask.completed ? 'completed' : ''}>\n                <input\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() => handleToggleSubtask(index)}\n                />\n                <span>{subtask.text}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </form>\n      <div className=\"form-footer\">\n        <button type=\"button\" className=\"clear-button\" onClick={handleClearAll}>\n          Clear\n        </button>\n        <button type=\"submit\" className=\"create-button\" onClick={handleSubmit}>\n          {taskToEdit ? 'Update Task' : 'Create Task'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,uCAAuC;AAC9C,OAAO,YAAY;AAEnB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EACpE,MAAMC,UAAU,GAAG,CACjB;IAAEC,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,EAAE,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAc,CAAC,EACzC;IAAED,EAAE,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAoB,CAAC,EACrD;IAAED,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAO,CAAC,CAC7B;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC4B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAM8B,aAAa,GAAG,CACpB;IAAElB,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAW,CAAC,EAC3B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAa,CAAC,EAC7B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAkB,CAAC,EAClC;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAc,CAAC,EAC9B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAc,CAAC,CAC/B;EAED,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMmC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACtE,MAAMC,eAAe,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK,IAAI,CAACR,UAAU,CAACQ,KAAK,CAAC,CAAC;IAClE,IAAIF,eAAe,CAACG,MAAM,KAAK,CAAC,EAAE;MAChC,OAAO,SAAS;IAClB;IACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,eAAe,CAACG,MAAM,CAAC;IACtE,OAAOH,eAAe,CAACI,WAAW,CAAC;EACrC,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,EAAE;MACdK,QAAQ,CAACL,UAAU,CAACI,KAAK,CAAC;MAC1BG,cAAc,CAACP,UAAU,CAACM,WAAW,CAAC;MACtCG,WAAW,CAACT,UAAU,CAACQ,QAAQ,CAAC;MAChCG,UAAU,CAACX,UAAU,CAACmC,QAAQ,GAAG,IAAIC,IAAI,CAACpC,UAAU,CAACmC,QAAQ,CAAC,GAAG,IAAI,CAAC;MACtEpB,WAAW,CAACf,UAAU,CAACc,QAAQ,IAAI,EAAE,CAAC;MACtCG,mBAAmB,CAACjB,UAAU,CAACqC,QAAQ,IAAI,EAAE,CAAC;MAC9ClB,mBAAmB,CAACnB,UAAU,CAACsC,QAAQ,IAAI,IAAI,CAAC;MAChDd,mBAAmB,CAACxB,UAAU,CAACqC,QAAQ,IAAI,EAAE,CAAC;IAChD;EACF,CAAC,EAAE,CAACrC,UAAU,CAAC,CAAC;EAEhB,MAAMuC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI3B,WAAW,CAAC4B,IAAI,CAAC,CAAC,EAAE;MACtBzB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAE2B,IAAI,EAAE7B,WAAW;QAAE8B,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC;MACnE7B,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAM8B,mBAAmB,GAAGC,KAAK,IAAI;IACnC,MAAMC,WAAW,GAAG/B,QAAQ,CAACgC,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,KAC1CA,CAAC,KAAKJ,KAAK,GAAG;MAAE,GAAGG,OAAO;MAAEL,SAAS,EAAE,CAACK,OAAO,CAACL;IAAU,CAAC,GAAGK,OAChE,CAAC;IACDhC,WAAW,CAAC8B,WAAW,CAAC;EAC1B,CAAC;EAED,MAAMI,mBAAmB,GAAGC,KAAK,IAAI;IACnC,MAAMC,iBAAiB,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IACtD,MAAMC,eAAe,GAAGnC,aAAa,CAACoC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACvD,EAAE,KAAKiD,iBAAiB,CAAC;IAEvF,IAAII,eAAe,IAAI,CAAChC,gBAAgB,CAACmC,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACvD,EAAE,KAAKqD,eAAe,CAACrD,EAAE,CAAC,EAAE;MAC3F,MAAM2B,KAAK,GAAGJ,cAAc,CAAC,CAAC;MAC9BR,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAE;QAAE,GAAGuC,eAAe;QAAE1B;MAAM,CAAC,CAAC,CAAC;MACzEP,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAE,CAACQ,KAAK,GAAG;MAAK,CAAC,CAAC;MAC/CL,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAEgC,eAAe,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,MAAMI,2BAA2B,GAAGC,SAAS,IAAI;IAC/C,MAAMC,cAAc,GAAG7C,gBAAgB,CAACwC,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACvD,EAAE,KAAK0D,SAAS,CAAC;IACjF,IAAIC,cAAc,EAAE;MAClB,MAAM;QAAEhC;MAAM,CAAC,GAAGgC,cAAc;MAChC,MAAMC,eAAe,GAAG9C,gBAAgB,CAACY,MAAM,CAAC6B,OAAO,IAAIA,OAAO,CAACvD,EAAE,KAAK0D,SAAS,CAAC;MACpF3C,mBAAmB,CAAC6C,eAAe,CAAC;MACpCxC,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAE,CAACQ,KAAK,GAAG;MAAM,CAAC,CAAC;MAChDL,mBAAmB,CAACD,gBAAgB,CAACK,MAAM,CAAC6B,OAAO,IAAIA,OAAO,CAACvD,EAAE,KAAK0D,SAAS,CAAC,CAAC;IACnF;EACF,CAAC;EAED,MAAMG,oBAAoB,GAAGzB,QAAQ,IAAI;IACvCnB,mBAAmB,CAACmB,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAM0B,cAAc,GAAGA,CAAA,KAAM;IAC3B3D,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;IAClBE,WAAW,CAAC,EAAE,CAAC;IACfE,UAAU,CAAC,IAAI,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;IAClBE,WAAW,CAAC,EAAE,CAAC;IACfE,mBAAmB,CAAC,EAAE,CAAC;IACvBO,mBAAmB,CAAC,EAAE,CAAC;IACvBL,mBAAmB,CAAC,IAAI,CAAC;IACzBG,aAAa,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAM2C,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI/D,KAAK,IAAIE,WAAW,IAAIE,QAAQ,EAAE;MACpC,MAAM4D,QAAQ,GAAG;QACfhE,KAAK;QACLE,WAAW;QACXE,QAAQ;QACR2B,QAAQ,EAAEzB,OAAO;QACjB4B,QAAQ,EAAEpB,gBAAgB;QAC1BJ,QAAQ,EAAEA,QAAQ,CAACgC,GAAG,CAACC,OAAO,KAAK;UACjCN,IAAI,EAAEM,OAAO,CAACN,IAAI;UAClBC,SAAS,EAAEK,OAAO,CAACL;QACrB,CAAC,CAAC,CAAC;QACHL,QAAQ,EAAErB,gBAAgB,CAAC8B,GAAG,CAACW,OAAO,KAAK;UACzCtD,IAAI,EAAEsD,OAAO,CAACtD;QAChB,CAAC,CAAC;MACJ,CAAC;MAED,IAAIH,UAAU,EAAE;QACd;QACAqE,KAAK,CAAC,mCAAmCrE,UAAU,CAACE,EAAE,GAAG,EAAE;UACzDoE,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;QAC/B,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;UAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;UAC3D;UACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;UACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;UAClCjB,cAAc,CAAC,CAAC;UAChBnE,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CACDuF,KAAK,CAAEC,KAAK,IAAK;UAChBH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACtC,CAAC,CAAC;MACJ,CAAC,MAAM;QACL;QACAhB,KAAK,CAAC,kCAAkC,EAAE;UACxCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;QAC/B,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;UAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBF,QAAQ,CAACG,MAAM,EAAE,CAAC;UAC3D;UACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CACDL,IAAI,CAACM,IAAI,IAAI;UACZC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;UAClCjB,cAAc,CAAC,CAAC;UAChBnE,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CACDuF,KAAK,CAAEC,KAAK,IAAK;UAChBH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACtC,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,oBACEhG,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAE,kBAAkB3F,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;IAAA4F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrDxG,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK7F,UAAU,GAAG,WAAW,GAAG,UAAe,CAAC,eAChDX,KAAA,CAAAiG,aAAA;IAAQC,SAAS,EAAC,cAAc;IAACO,OAAO,EAAEjG,OAAQ;IAAA2F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChDxG,KAAA,CAAAiG,aAAA,CAAC9F,eAAe;IAACuG,IAAI,EAAEtG,OAAQ;IAAA+F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3B,CACL,CAAC,eACNxG,KAAA,CAAAiG,aAAA;IAAMC,SAAS,EAAC,WAAW;IAACS,QAAQ,EAAE/B,YAAa;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjDxG,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,OAAY,CAAC,eACpBxG,KAAA,CAAAiG,aAAA;IACEW,IAAI,EAAC,MAAM;IACX3C,KAAK,EAAElD,KAAM;IACb8F,QAAQ,EAAEhC,CAAC,IAAI7D,QAAQ,CAAC6D,CAAC,CAACb,MAAM,CAACC,KAAK,CAAE;IACxC6C,WAAW,EAAC,eAAe;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5B,CAAC,eACFxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,aAAkB,CAAC,eAC1BxG,KAAA,CAAAiG,aAAA;IACEhC,KAAK,EAAEhD,WAAY;IACnB4F,QAAQ,EAAEhC,CAAC,IAAI3D,cAAc,CAAC2D,CAAC,CAACb,MAAM,CAACC,KAAK,CAAE;IAC9C6C,WAAW,EAAC,qBAAqB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxB,CAAC,eACZxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBxG,KAAA,CAAAiG,aAAA;IACEhC,KAAK,EAAE9C,QAAS;IAChB0F,QAAQ,EAAEhC,CAAC,IAAIzD,WAAW,CAACyD,CAAC,CAACb,MAAM,CAACC,KAAK,CAAE;IAAAkC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE3CxG,KAAA,CAAAiG,aAAA;IAAQhC,KAAK,EAAC,EAAE;IAAAkC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sBAA4B,CAAC,EAC7C5F,UAAU,CAAC6C,GAAG,CAACtC,QAAQ,iBACtBnB,KAAA,CAAAiG,aAAA;IAAQc,GAAG,EAAE5F,QAAQ,CAACN,EAAG;IAACoD,KAAK,EAAE9C,QAAQ,CAACN,EAAG;IAAAsF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1CrF,QAAQ,CAACL,IACJ,CACT,CACK,CAAC,eACTd,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,aAAkB,CAAC,eAC1BxG,KAAA,CAAAiG,aAAA;IAAQY,QAAQ,EAAEjD,mBAAoB;IAAAuC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpCxG,KAAA,CAAAiG,aAAA;IAAQhC,KAAK,EAAC,EAAE;IAAAkC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAiC,CAAC,EAClDzE,aAAa,CAAC0B,GAAG,CAACW,OAAO,iBACxBpE,KAAA,CAAAiG,aAAA;IAAQc,GAAG,EAAE3C,OAAO,CAACvD,EAAG;IAACoD,KAAK,EAAEG,OAAO,CAACvD,EAAG;IAACmG,QAAQ,EAAE9E,gBAAgB,CAACmC,IAAI,CAAC4C,CAAC,IAAIA,CAAC,CAACpG,EAAE,KAAKuD,OAAO,CAACvD,EAAE,CAAE;IAAAsF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnGpC,OAAO,CAACtD,IACH,CACT,CACK,CAAC,eACTd,KAAA,CAAAiG,aAAA;IAAIC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9B7E,gBAAgB,CAAC8B,GAAG,CAACW,OAAO,iBAC3BpE,KAAA,CAAAiG,aAAA;IAAIc,GAAG,EAAE3C,OAAO,CAACvD,EAAG;IAAAsF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClBxG,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BxG,KAAA,CAAAiG,aAAA;IACEC,SAAS,EAAC,kBAAkB;IAC5BgB,KAAK,EAAE;MAAEC,eAAe,EAAE/C,OAAO,CAAC5B;IAAM,CAAE;IAAA2D,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEzCpC,OAAO,CAACtD,IAAI,CACVsG,KAAK,CAAC,GAAG,CAAC,CACV3D,GAAG,CAAC4D,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC3BC,IAAI,CAAC,EAAE,CAAC,CACRC,WAAW,CAAC,CACZ,CAAC,eACNxH,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAOpC,OAAO,CAACtD,IAAW,CACvB,CAAC,eACNd,KAAA,CAAAiG,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbV,SAAS,EAAC,gBAAgB;IAC1BO,OAAO,EAAEA,CAAA,KAAMnC,2BAA2B,CAACF,OAAO,CAACvD,EAAE,CAAE;IAAAsF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEvDxG,KAAA,CAAAiG,aAAA,CAAC9F,eAAe;IAACuG,IAAI,EAAEtG,OAAQ;IAAA+F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3B,CACN,CACL,CACC,CACD,CAAC,eACNxG,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBxG,KAAA,CAAAiG,aAAA,CAAC5F,QAAQ;IACP4D,KAAK,EAAE5C,OAAQ;IACfwF,QAAQ,EAAEY,IAAI,IAAInG,UAAU,CAACmG,IAAI,CAAE;IACnCC,UAAU,EAAC,YAAY;IACvBC,UAAU,EAAE,KAAM;IAClBC,UAAU,EAAE;MAAEd,WAAW,EAAE;IAAkB,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChD,CAAC,eACFxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,MAAW,CAAC,eACnBxG,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BxG,KAAA,CAAAiG,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbV,SAAS,EAAE,sBAAsBrE,gBAAgB,KAAK,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;IACnF4E,OAAO,EAAEA,CAAA,KAAM/B,oBAAoB,CAAC,QAAQ,CAAE;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/C,QAEO,CAAC,eACTxG,KAAA,CAAAiG,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbV,SAAS,EAAE,sBAAsBrE,gBAAgB,KAAK,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;IACnF4E,OAAO,EAAEA,CAAA,KAAM/B,oBAAoB,CAAC,QAAQ,CAAE;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/C,QAEO,CAAC,eACTxG,KAAA,CAAAiG,aAAA;IACEW,IAAI,EAAC,QAAQ;IACbV,SAAS,EAAE,mBAAmBrE,gBAAgB,KAAK,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;IAC7E4E,OAAO,EAAEA,CAAA,KAAM/B,oBAAoB,CAAC,KAAK,CAAE;IAAAyB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5C,KAEO,CACL,CAAC,eACNxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBxG,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BxG,KAAA,CAAAiG,aAAA;IACEW,IAAI,EAAC,MAAM;IACX3C,KAAK,EAAE1C,WAAY;IACnBsF,QAAQ,EAAEhC,CAAC,IAAIrD,cAAc,CAACqD,CAAC,CAACb,MAAM,CAACC,KAAK,CAAE;IAC9C6C,WAAW,EAAC,iBAAiB;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAAC,eACFxG,KAAA,CAAAiG,aAAA;IAAQW,IAAI,EAAC,QAAQ;IAACH,OAAO,EAAEvD,gBAAiB;IAAAiD,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAEzC,CACL,CAAC,eACNxG,KAAA,CAAAiG,aAAA;IAAIC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzB/E,QAAQ,CAACgC,GAAG,CAAC,CAACC,OAAO,EAAEH,KAAK,kBAC3BvD,KAAA,CAAAiG,aAAA;IAAIc,GAAG,EAAExD,KAAM;IAAC2C,SAAS,EAAExC,OAAO,CAACL,SAAS,GAAG,WAAW,GAAG,EAAG;IAAA8C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9DxG,KAAA,CAAAiG,aAAA;IACEW,IAAI,EAAC,UAAU;IACfiB,OAAO,EAAEnE,OAAO,CAACL,SAAU;IAC3BwD,QAAQ,EAAEA,CAAA,KAAMvD,mBAAmB,CAACC,KAAK,CAAE;IAAA4C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5C,CAAC,eACFxG,KAAA,CAAAiG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO9C,OAAO,CAACN,IAAW,CACxB,CACL,CACC,CACD,CACD,CAAC,eACPpD,KAAA,CAAAiG,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BxG,KAAA,CAAAiG,aAAA;IAAQW,IAAI,EAAC,QAAQ;IAACV,SAAS,EAAC,cAAc;IAACO,OAAO,EAAE9B,cAAe;IAAAwB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAEhE,CAAC,eACTxG,KAAA,CAAAiG,aAAA;IAAQW,IAAI,EAAC,QAAQ;IAACV,SAAS,EAAC,eAAe;IAACO,OAAO,EAAE7B,YAAa;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnE7F,UAAU,GAAG,aAAa,GAAG,aACxB,CACL,CACF,CAAC;AAEV,CAAC;AAED,eAAeL,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}