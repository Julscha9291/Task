{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Navbar.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTableList, faPenToSquare, faBell, faUser, faClipboard, faSignOutAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, IconButton, Divider, Typography, Box, useMediaQuery, Snackbar, Alert } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport './Navbar.css';\nimport { Link, useNavigate } from 'react-router-dom';\nconst Navbar = ({\n  darkMode,\n  toggleDarkMode\n}) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [color, setColor] = useState('#6c757d');\n  const [initials, setInitials] = useState('');\n  const isMobile = useMediaQuery('(max-width:1024px)');\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [newNotificationCount, setNewNotificationCount] = useState(0);\n  const [notificationDetails, setNotificationDetails] = useState([]);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const timeAgo = timestamp => {\n    const now = new Date();\n    const diff = now - new Date(timestamp);\n    const seconds = Math.floor(diff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    if (days > 1) return `${days} days ago`;\n    if (days === 1) return `1 day ago`;\n    if (hours > 1) return `${hours} hours ago`;\n    if (hours === 1) return `1 hour ago`;\n    if (minutes > 1) return `${minutes} minutes ago`;\n    if (minutes === 1) return `1 minute ago`;\n    if (seconds > 1) return `${seconds} seconds ago`;\n    return `a few seconds ago`;\n  };\n\n  // Set to track already processed task IDs to avoid duplicates\n  const processedTaskIds = useRef(new Set());\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8000/ws/notifications/');\n    ws.onopen = () => {\n      console.log(\"WebSocket is open now.\");\n    };\n    ws.onmessage = async function (event) {\n      console.log(\"Event received:\", event);\n      const data = JSON.parse(event.data);\n      console.log(\"Parsed data:\", data);\n      if (data.type === 'new_task_notification') {\n        console.log(\"Processing notification:\", data.notification);\n        const {\n          task: taskId,\n          created_at\n        } = data.notification;\n\n        // Check if the task has already been processed\n        if (!processedTaskIds.current.has(taskId)) {\n          processedTaskIds.current.add(taskId); // Mark task as processed\n\n          // Fetch Task Details\n          try {\n            const response = await fetch(`http://localhost:8000/api/tasks/${taskId}`, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            const taskDetails = await response.json();\n            console.log(\"Fetched Task Details:\", taskDetails);\n            setNotificationDetails(prevDetails => [...prevDetails, taskDetails]);\n\n            // Update notifications and increment counter\n            setNotifications(prev => [data.notification, ...prev.filter(n => n.task !== taskId)]);\n            setNewNotificationCount(prevCount => prevCount + 1);\n            setSnackbarOpen(true);\n          } catch (error) {\n            console.error('Error fetching task details:', error);\n          }\n        }\n      } else {\n        console.log(\"Unexpected message type:\", data.type);\n      }\n    };\n    ws.onclose = function (e) {\n      console.log('WebSocket closed unexpectedly');\n    };\n    ws.onerror = function (err) {\n      console.error('WebSocket encountered an error: ', err);\n    };\n    return () => {\n      ws.close();\n    };\n  }, []);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownOpen(false);\n      }\n    }\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [dropdownOpen]);\n  useEffect(() => {\n    const storedFirstName = localStorage.getItem('first_name') || '';\n    const storedLastName = localStorage.getItem('last_name') || '';\n    const storedColor = localStorage.getItem('color') || '#6c757d';\n    setFirstName(storedFirstName);\n    setLastName(storedLastName);\n    setColor(storedColor);\n    const firstInitial = storedFirstName.charAt(0).toUpperCase();\n    const lastInitial = storedLastName.charAt(0).toUpperCase();\n    setInitials(`${firstInitial}${lastInitial}`);\n  }, []);\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setSnackbarOpen(false);\n  };\n  const handleBellClick = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNewNotificationCount(0);\n  };\n  const handleGoToBoard = () => {\n    setDropdownOpen(false);\n    setNotificationDetails([]);\n    setNotifications([]);\n    navigate('/board');\n  };\n  const handleLogout = () => {\n    // Logic for logout\n    console.log(\"Logged out\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: `navbar ${darkMode ? 'dark-mode' : ''}`,\n    style: {\n      backgroundColor: '#003B46'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"navbar-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/task.png\",\n    alt: \"Task Logo\",\n    className: \"navbar-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }), \"Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-icon\",\n    onClick: handleBellClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faBell,\n    className: \"navbar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }), newNotificationCount > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"notification-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, newNotificationCount), dropdownOpen && /*#__PURE__*/React.createElement(\"div\", {\n    ref: dropdownRef,\n    className: \"notification-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: \"dropdown-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, \"Notification\"), notifications.length > 0 ? notifications.map((task, index) => {\n    const taskDetail = notificationDetails.find(detail => detail.id === task.task);\n    const notificationTime = timeAgo(task.timestamp); // Angenommen, `task.timestamp` enth√§lt den Erstellungszeitstempel\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"notification-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contact-initials-board\",\n      style: {\n        backgroundColor: color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, initials), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: \"notification-title\",\n      style: {\n        fontWeight: 'bold'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, firstName, \" \", lastName, \" assigned a new task.\"), taskDetail ? /*#__PURE__*/React.createElement(Box, {\n      className: \"notification-box\",\n      sx: {\n        marginBottom: 2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: \"notification-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, \"Title: \", taskDetail.title || 'N/A'), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      className: \"notification-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    }, \"Description: \", taskDetail.description || 'N/A'), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      style: {\n        fontStyle: 'italic',\n        fontSize: '0.75rem',\n        color: '#555'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, notificationTime)) : /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      className: \"text-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, \"Keine Aufgaben verf\\xFCgbar.\"))), index < notifications.length - 1);\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: \"no-notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, \"No new notifications\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"create-button\",\n    onClick: handleGoToBoard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }, \"View All\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logout-icon\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSignOutAlt,\n    className: \"dark-mode-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  })), isMobile && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-icon\",\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Drawer, {\n    variant: isMobile ? \"temporary\" : \"permanent\",\n    open: isMobile ? menuOpen : true,\n    onClose: toggleMenu,\n    className: isMobile ? \"mobile-drawer\" : \"drawer\",\n    classes: {\n      paper: 'drawer-paper'\n    },\n    anchor: \"left\",\n    style: {\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: 2,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    sx: {\n      mt: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, \"Welcome \", firstName, \" \", lastName, \"! \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-initials\",\n    style: {\n      backgroundColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, initials)))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, [{\n    text: 'Summary',\n    icon: faTableList,\n    link: '/'\n  }, {\n    text: 'Board',\n    icon: faClipboard,\n    link: '/board'\n  }, {\n    text: 'Add Task',\n    icon: faPenToSquare,\n    link: '/task'\n  }, {\n    text: 'Contacts',\n    icon: faUser,\n    link: '/contactList'\n  }, {\n    text: 'Impressum',\n    icon: faInfoCircle,\n    link: '/impressum'\n  }].map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: index,\n    component: Link,\n    to: item.link,\n    onClick: item.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: item.icon,\n    className: \"fa-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbarOpen,\n    autoHideDuration: 6000,\n    onClose: handleSnackbarClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleSnackbarClose,\n    severity: \"info\",\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \"New Task available\")));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faTableList","faPenToSquare","faBell","faUser","faClipboard","faSignOutAlt","faInfoCircle","Drawer","List","ListItem","ListItemIcon","ListItemText","IconButton","Divider","Typography","Box","useMediaQuery","Snackbar","Alert","MenuIcon","Link","useNavigate","Navbar","darkMode","toggleDarkMode","menuOpen","setMenuOpen","firstName","setFirstName","lastName","setLastName","color","setColor","initials","setInitials","isMobile","navigate","notifications","setNotifications","newNotificationCount","setNewNotificationCount","notificationDetails","setNotificationDetails","dropdownOpen","setDropdownOpen","snackbarOpen","setSnackbarOpen","dropdownRef","timeAgo","timestamp","now","Date","diff","seconds","Math","floor","minutes","hours","days","processedTaskIds","Set","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","notification","task","taskId","created_at","current","has","add","response","fetch","method","headers","ok","Error","taskDetails","json","prevDetails","prev","filter","n","prevCount","error","onclose","e","onerror","err","close","handleClickOutside","contains","target","document","addEventListener","removeEventListener","storedFirstName","localStorage","getItem","storedLastName","storedColor","firstInitial","charAt","toUpperCase","lastInitial","toggleMenu","handleSnackbarClose","reason","handleBellClick","handleGoToBoard","handleLogout","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","to","src","alt","onClick","icon","ref","variant","length","map","index","taskDetail","find","detail","id","notificationTime","key","fontWeight","sx","marginBottom","title","description","fontStyle","fontSize","edge","open","onClose","classes","paper","anchor","boxShadow","padding","textAlign","mt","text","link","item","button","component","primary","autoHideDuration","severity","width"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTableList, faPenToSquare, faBell, faUser, faClipboard, faSignOutAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, IconButton, Divider, Typography, Box, useMediaQuery, Snackbar, Alert } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport './Navbar.css';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Navbar = ({ darkMode, toggleDarkMode }) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [color, setColor] = useState('#6c757d');\n    const [initials, setInitials] = useState('');\n    const isMobile = useMediaQuery('(max-width:1024px)');\n    const navigate = useNavigate();\n    const [notifications, setNotifications] = useState([]);\n    const [newNotificationCount, setNewNotificationCount] = useState(0);\n    const [notificationDetails, setNotificationDetails] = useState([]);\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n    const dropdownRef = useRef(null);\n\n    const timeAgo = (timestamp) => {\n        const now = new Date();\n        const diff = now - new Date(timestamp);\n    \n        const seconds = Math.floor(diff / 1000);\n        const minutes = Math.floor(seconds / 60);\n        const hours = Math.floor(minutes / 60);\n        const days = Math.floor(hours / 24);\n    \n        if (days > 1) return `${days} days ago`;\n        if (days === 1) return `1 day ago`;\n        if (hours > 1) return `${hours} hours ago`;\n        if (hours === 1) return `1 hour ago`;\n        if (minutes > 1) return `${minutes} minutes ago`;\n        if (minutes === 1) return `1 minute ago`;\n        if (seconds > 1) return `${seconds} seconds ago`;\n        return `a few seconds ago`;\n    };\n    \n\n    // Set to track already processed task IDs to avoid duplicates\n    const processedTaskIds = useRef(new Set());\n\n    useEffect(() => {\n        const ws = new WebSocket('ws://localhost:8000/ws/notifications/');\n\n        ws.onopen = () => {\n            console.log(\"WebSocket is open now.\");\n        };\n\n        ws.onmessage = async function(event) {\n            console.log(\"Event received:\", event);\n            const data = JSON.parse(event.data);\n            console.log(\"Parsed data:\", data);\n\n            if (data.type === 'new_task_notification') {\n                console.log(\"Processing notification:\", data.notification);\n\n                const { task: taskId, created_at } = data.notification;\n\n                // Check if the task has already been processed\n                if (!processedTaskIds.current.has(taskId)) {\n                    processedTaskIds.current.add(taskId); // Mark task as processed\n\n                    // Fetch Task Details\n                    try {\n                        const response = await fetch(`http://localhost:8000/api/tasks/${taskId}`, {\n                            method: 'GET',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                        });\n                        if (!response.ok) {\n                            throw new Error('Network response was not ok');\n                        }\n                        const taskDetails = await response.json();\n                        console.log(\"Fetched Task Details:\", taskDetails);\n\n                        setNotificationDetails(prevDetails => [...prevDetails, taskDetails]);\n\n                        // Update notifications and increment counter\n                        setNotifications(prev => [data.notification, ...prev.filter(n => n.task !== taskId)]);\n                        setNewNotificationCount(prevCount => prevCount + 1);\n\n                        setSnackbarOpen(true);\n                    } catch (error) {\n                        console.error('Error fetching task details:', error);\n                    }\n                }\n            } else {\n                console.log(\"Unexpected message type:\", data.type);\n            }\n        };\n\n        ws.onclose = function(e) {\n            console.log('WebSocket closed unexpectedly');\n        };\n\n        ws.onerror = function(err) {\n            console.error('WebSocket encountered an error: ', err);\n        };\n\n        return () => {\n            ws.close();\n        };\n    }, []);\n\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setDropdownOpen(false);\n            }\n        }\n\n        if (dropdownOpen) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, [dropdownOpen]);\n\n    useEffect(() => {\n        const storedFirstName = localStorage.getItem('first_name') || '';\n        const storedLastName = localStorage.getItem('last_name') || '';\n        const storedColor = localStorage.getItem('color') || '#6c757d';\n\n        setFirstName(storedFirstName);\n        setLastName(storedLastName);\n        setColor(storedColor);\n\n        const firstInitial = storedFirstName.charAt(0).toUpperCase();\n        const lastInitial = storedLastName.charAt(0).toUpperCase();\n        setInitials(`${firstInitial}${lastInitial}`);\n    }, []);\n\n    const toggleMenu = () => setMenuOpen(!menuOpen);\n\n    const handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') return;\n        setSnackbarOpen(false);\n    };\n\n    const handleBellClick = () => {\n        setDropdownOpen(!dropdownOpen);\n        setNewNotificationCount(0);\n    };\n\n    const handleGoToBoard = () => {\n        setDropdownOpen(false);\n        setNotificationDetails([]);\n        setNotifications([]);\n        navigate('/board');\n    };\n\n    const handleLogout = () => {\n        // Logic for logout\n        console.log(\"Logged out\");\n    };\n\n    return (\n        <div className=\"main-container\">\n            <nav className={`navbar ${darkMode ? 'dark-mode' : ''}`} style={{ backgroundColor: '#003B46' }}>\n                <div className=\"navbar-container\">\n                    <Link to=\"/\" className=\"navbar-logo\">\n                        <img src=\"/images/task.png\" alt=\"Task Logo\" className=\"navbar-image\" />\n                        Task\n                    </Link>\n\n                    <div className=\"notification-icon\" onClick={handleBellClick}>\n                        <FontAwesomeIcon icon={faBell} className=\"navbar-icon\" />\n                        {newNotificationCount > 0 && (\n                            <span className=\"notification-count\">{newNotificationCount}</span>\n                        )}\n                        {dropdownOpen && (\n                            <div ref={dropdownRef} className=\"notification-dropdown\">\n                                <div className=\"dropdown-arrow\"></div>\n                                <Typography variant=\"h6\" className=\"dropdown-header\">\n                                    Notification\n                                </Typography>\n                                {notifications.length > 0 ? (\n    notifications.map((task, index) => {\n        const taskDetail = notificationDetails.find(detail => detail.id === task.task);\n        const notificationTime = timeAgo(task.timestamp); // Angenommen, `task.timestamp` enth√§lt den Erstellungszeitstempel\n\n        return (\n            <div key={index} className=\"notification-item\">\n                <div className=\"notification-content\">\n                    {/* Initialen des Kontakts links */}\n                    <div className=\"contact-initials-board\" style={{ backgroundColor: color }}>\n                        {initials}\n                    </div>\n\n                    {/* Task-Details rechts */}\n                    <div>\n                        <Typography variant=\"subtitle2\" className=\"notification-title\" style={{ fontWeight: 'bold' }}>\n                            {firstName} {lastName} assigned a new task.\n                        </Typography>\n                        {taskDetail ? (\n                            <Box className=\"notification-box\" sx={{ marginBottom: 2 }}>\n                                <Typography variant=\"subtitle2\" className=\"notification-title\">Title: {taskDetail.title || 'N/A'}</Typography>\n                                <Typography variant=\"subtitle2\" className=\"notification-title\">Description: {taskDetail.description || 'N/A'}</Typography>\n                                <Typography variant=\"body2\" style={{ fontStyle: 'italic', fontSize: '0.75rem', color: '#555' }}>\n                                    {notificationTime}\n                                </Typography>\n                            </Box>\n                        ) : (\n                            <Typography variant=\"body2\" className=\"text-dropdown\">\n                                Keine Aufgaben verf√ºgbar.\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n                {index < notifications.length - 1 }\n            </div>\n                                    );\n                                })\n                            ) : (\n                                <Typography variant=\"body2\" className=\"no-notifications\">\n                                    No new notifications\n                                </Typography>\n                            )}\n\n                                <div className=\"button\">\n                                    <button type=\"submit\" className=\"create-button\" onClick={handleGoToBoard}>View All</button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"logout-icon\" onClick={handleLogout}>\n                        <FontAwesomeIcon icon={faSignOutAlt} className=\"dark-mode-icon\" />\n                    </div>\n                    {isMobile && (\n                        <div className=\"menu-icon\" onClick={toggleMenu}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <MenuIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                </div>\n            </nav>\n\n            <Drawer\n                variant={isMobile ? \"temporary\" : \"permanent\"}\n                open={isMobile ? menuOpen : true}\n                onClose={toggleMenu}\n                className={isMobile ? \"mobile-drawer\" : \"drawer\"}\n                classes={{ paper: 'drawer-paper' }}\n                anchor=\"left\"\n                style={{ boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)' }}\n            >\n                <Box sx={{ padding: 2, textAlign: 'center' }}>\n                    <Typography variant=\"h6\" sx={{ mt: 1 }}>\n                        Welcome {firstName} {lastName}! <br />\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            <div className=\"profile-initials\" style={{ backgroundColor: color }}>\n                                {initials}\n                            </div>\n                        </Typography>\n                    </Typography>\n                </Box>\n                <Divider />\n                <List>\n                    {[\n                        { text: 'Summary', icon: faTableList, link: '/' },\n                        { text: 'Board', icon: faClipboard, link: '/board' },\n                        { text: 'Add Task', icon: faPenToSquare, link: '/task' },\n                        { text: 'Contacts', icon: faUser, link: '/contactList' },\n                        { text: 'Impressum', icon: faInfoCircle, link: '/impressum' },\n                    ].map((item, index) => (\n                        <ListItem button key={index} component={Link} to={item.link} onClick={item.onClick}>\n                            <ListItemIcon>\n                                <FontAwesomeIcon icon={item.icon} className=\"fa-icon\" />\n                            </ListItemIcon>\n                            <ListItemText primary={item.text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n\n            {/* Snackbar f√ºr Benachrichtigungen */}\n            <Snackbar\n                open={snackbarOpen}\n                autoHideDuration={6000}\n                onClose={handleSnackbarClose}\n            >\n                <Alert onClose={handleSnackbarClose} severity=\"info\" sx={{ width: '100%' }}>\n                    New Task available\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}