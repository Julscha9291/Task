{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Task.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nconst Task = ({\n  show,\n  onClose,\n  createTask,\n  editTask,\n  taskToEdit,\n  initialCategory\n}) => {\n  const navigate = useNavigate();\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(initialCategory || '');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n  const [users, setUsers] = useState([]);\n  const [usedColors, setUsedColors] = useState({});\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/users/').then(response => response.json()).then(data => setUsers(data)).catch(error => console.error('Fetch error:', error));\n  }, []);\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category || initialCategory || '');\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n      setSelectedContacts(taskToEdit.contacts || []);\n      const colors = {};\n      taskToEdit.contacts.forEach(contact => {\n        colors[contact.color] = true;\n      });\n      setUsedColors(colors);\n    } else {\n      setCategory(initialCategory || ''); // Fallback zu initialCategory bei Neuerstellung\n    }\n  }, [taskToEdit, initialCategory]);\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = users.find(user => user.id === selectedContactId);\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      setAssignedContacts([...assignedContacts, selectedContact]);\n      setSelectedContacts([...selectedContacts, selectedContact]);\n      setUsedColors({\n        ...usedColors,\n        [selectedContact.color]: true\n      });\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const {\n        color\n      } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({\n        ...usedColors,\n        [color]: false\n      });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory(initialCategory || '');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setUsedColors({});\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n    if (!title.trim()) {\n      errors = {\n        ...errors,\n        title: true\n      };\n    }\n    if (!description.trim()) {\n      errors = {\n        ...errors,\n        description: true\n      };\n    }\n    if (!category) {\n      errors = {\n        ...errors,\n        category: true\n      };\n    }\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    const taskData = {\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks: subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: assignedContacts.map(contact => ({\n        id: contact.id,\n        first_name: contact.first_name,\n        last_name: contact.last_name,\n        color: contact.color\n      }))\n    };\n    if (taskToEdit) {\n      fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => response.json()).then(data => {\n        handleClearAll();\n        onClose();\n        navigate('/board');\n      }).catch(error => console.error('Fetch error:', error));\n    } else {\n      fetch('http://localhost:8000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => response.json()).then(data => {\n        handleClearAll();\n        onClose();\n        navigate('/board');\n      }).catch(error => console.error('Fetch error:', error));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `task-container ${show ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: () => {\n      onClose();\n      navigate('/board');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-title-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, taskToEdit ? 'Edit Task' : 'Add Task'))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Enter a title\",\n    className: formErrors.title ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }), formErrors.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 32\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Enter a description\",\n    className: formErrors.description ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }), formErrors.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 38\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    className: formErrors.category ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Select task category\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 15\n    }\n  }, category.name))), formErrors.category && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 35\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 11\n    }\n  }, \"Assigned to\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, \"Select contacts to assign\"), users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.id,\n    value: user.id,\n    disabled: selectedContacts.some(c => c.id === user.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, user.first_name, \" \", user.last_name))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.id,\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, contact.first_name, \" \", contact.last_name, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"remove-contact-button\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, \"\\xD7\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(Datetime, {\n    value: dueDate,\n    onChange: setDueDate,\n    inputProps: {\n      placeholder: 'Select a due date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, \"Priority\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"priority-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSelectPriority('Low'),\n    className: `priority-button ${selectedPriority === 'Low' ? 'selected' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Low\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSelectPriority('Medium'),\n    className: `priority-button ${selectedPriority === 'Medium' ? 'selected' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleSelectPriority('High'),\n    className: `priority-button ${selectedPriority === 'High' ? 'selected' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, \"High\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtask-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    placeholder: \"Enter a subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, \"Add Subtask\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtask-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: subtask.completed,\n    onChange: () => {\n      const updatedSubtasks = [...subtasks];\n      updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n      setSubtasks(updatedSubtasks);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }), subtask.text)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, taskToEdit ? 'Save' : 'Create'))));\n};\nexport default Task;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","useNavigate","faTimes","Datetime","Task","show","onClose","createTask","editTask","taskToEdit","initialCategory","navigate","categories","id","name","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","formErrors","setFormErrors","users","setUsers","usedColors","setUsedColors","selectedContacts","setSelectedContacts","fetch","then","response","json","data","catch","error","console","due_date","Date","contacts","priority","colors","forEach","contact","color","handleAddSubtask","trim","text","completed","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","find","user","some","handleRemoveAssignedContact","contactId","removedContact","updatedContacts","filter","handleSelectPriority","handleClearAll","handleSubmit","e","preventDefault","errors","Object","keys","length","taskData","map","subtask","first_name","last_name","method","headers","body","JSON","stringify","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","placeholder","key","disabled","c","style","backgroundColor","inputProps","index","checked","updatedSubtasks"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\n\nconst Task = ({ show, onClose, createTask, editTask, taskToEdit, initialCategory }) => {\n  const navigate = useNavigate();\n\n  const categories = [\n    { id: 'todo', name: 'To Do' },\n    { id: 'inProgress', name: 'In Progress' },\n    { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n    { id: 'done', name: 'Done' }\n  ];\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(initialCategory || '');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n\n  const [users, setUsers] = useState([]);\n  const [usedColors, setUsedColors] = useState({});\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/api/users/')\n      .then(response => response.json())\n      .then(data => setUsers(data))\n      .catch(error => console.error('Fetch error:', error));\n  }, []);\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category || initialCategory || '');\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n      setSelectedContacts(taskToEdit.contacts || []);\n      \n      const colors = {};\n      taskToEdit.contacts.forEach(contact => {\n        colors[contact.color] = true;\n      });\n      setUsedColors(colors);\n    } else {\n      setCategory(initialCategory || ''); // Fallback zu initialCategory bei Neuerstellung\n    }\n  }, [taskToEdit, initialCategory]);\n\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n      setSubtaskText('');\n    }\n  };\n\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = users.find(user => user.id === selectedContactId);\n\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      setAssignedContacts([...assignedContacts, selectedContact]);\n      setSelectedContacts([...selectedContacts, selectedContact]);\n      setUsedColors({ ...usedColors, [selectedContact.color]: true });\n    }\n  };\n\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const { color } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({ ...usedColors, [color]: false });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory(initialCategory || '');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setUsedColors({});\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let errors = {};\n\n    if (!title.trim()) {\n      errors = { ...errors, title: true };\n    }\n    if (!description.trim()) {\n      errors = { ...errors, description: true };\n    }\n    if (!category) {\n      errors = { ...errors, category: true };\n    }\n\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n\n    const taskData = {\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks: subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: assignedContacts.map(contact => ({\n        id: contact.id,\n        first_name: contact.first_name,\n        last_name: contact.last_name,\n        color: contact.color\n      }))\n    };\n\n    if (taskToEdit) {\n      fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskData),\n      })\n      .then(response => response.json())\n      .then(data => {\n        handleClearAll();\n        onClose();\n        navigate('/board');\n      })\n      .catch(error => console.error('Fetch error:', error));\n    } else {\n      fetch('http://localhost:8000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskData),\n      })\n      .then(response => response.json())\n      .then(data => {\n        handleClearAll();\n        onClose();\n        navigate('/board');\n      })\n      .catch(error => console.error('Fetch error:', error));\n    }\n  };\n\n  return (\n    <div className={`task-container ${show ? 'show' : ''}`}>\n      <div className=\"popup-content\">\n        <button className=\"close-button\" onClick={() => { onClose(); navigate('/board'); }}>&times;</button>\n        <div className=\"task-title-popup\">\n          <h2>{taskToEdit ? 'Edit Task' : 'Add Task'}</h2>\n        </div>\n      </div>\n      <form className=\"task-form\" onSubmit={handleSubmit}>\n        <div className=\"form-left\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            placeholder=\"Enter a title\"\n            className={formErrors.title ? 'error' : ''}\n          />\n          {formErrors.title && <div className=\"error-text\">This field is required</div>}\n          <label>Description</label>\n          <textarea\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            placeholder=\"Enter a description\"\n            className={formErrors.description ? 'error' : ''}\n          ></textarea>\n          {formErrors.description && <div className=\"error-text\">This field is required</div>}\n          <label>Category</label>\n          <select\n            value={category}\n            onChange={e => setCategory(e.target.value)}\n            className={formErrors.category ? 'error' : ''}\n          >\n            <option value=\"\">Select task category</option>\n            {categories.map(category => (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n          {formErrors.category && <div className=\"error-text\">This field is required</div>}\n          <label>Assigned to</label>\n          <select onChange={handleAssignContact}>\n            <option value=\"\">Select contacts to assign</option>\n            {users.map(user => (\n              <option key={user.id} value={user.id} disabled={selectedContacts.some(c => c.id === user.id)}>\n                {user.first_name} {user.last_name}\n              </option>\n            ))}\n          </select>\n          <ul className=\"assigned-contacts\">\n            {assignedContacts.map(contact => (\n              <li key={contact.id} style={{ backgroundColor: contact.color }}>\n                {contact.first_name} {contact.last_name}\n                <button\n                  className=\"remove-contact-button\"\n                  onClick={() => handleRemoveAssignedContact(contact.id)}\n                >\n                  &times;\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-right\">\n          <label>Due Date</label>\n          <Datetime\n            value={dueDate}\n            onChange={setDueDate}\n            inputProps={{ placeholder: 'Select a due date' }}\n          />\n          <label>Priority</label>\n          <div className=\"priority-buttons\">\n            <button\n              type=\"button\"\n              onClick={() => handleSelectPriority('Low')}\n              className={`priority-button ${selectedPriority === 'Low' ? 'selected' : ''}`}\n            >\n              Low\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => handleSelectPriority('Medium')}\n              className={`priority-button ${selectedPriority === 'Medium' ? 'selected' : ''}`}\n            >\n              Medium\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => handleSelectPriority('High')}\n              className={`priority-button ${selectedPriority === 'High' ? 'selected' : ''}`}\n            >\n              High\n            </button>\n          </div>\n          <label>Subtasks</label>\n          <div className=\"subtask-input\">\n            <input\n              type=\"text\"\n              value={subtaskText}\n              onChange={e => setSubtaskText(e.target.value)}\n              placeholder=\"Enter a subtask\"\n            />\n            <button type=\"button\" onClick={handleAddSubtask}>\n              Add Subtask\n            </button>\n          </div>\n          <ul className=\"subtask-list\">\n            {subtasks.map((subtask, index) => (\n              <li key={index}>\n                <input\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() => {\n                    const updatedSubtasks = [...subtasks];\n                    updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n                    setSubtasks(updatedSubtasks);\n                  }}\n                />\n                {subtask.text}\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-footer\">\n          <button type=\"submit\">{taskToEdit ? 'Save' : 'Create'}</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,uCAAuC;AAC9C,OAAO,YAAY;AAEnB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EACrF,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,UAAU,GAAG,CACjB;IAAEC,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC7B;IAAED,EAAE,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAc,CAAC,EACzC;IAAED,EAAE,EAAE,kBAAkB;IAAEC,IAAI,EAAE;EAAoB,CAAC,EACrD;IAAED,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAO,CAAC,CAC7B;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAACY,eAAe,IAAI,EAAE,CAAC;EAC/D,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACiC,UAAU,EAAEC,aAAa,CAAC,GAAGlC,QAAQ,CAAC;IAC3CiB,KAAK,EAAE,KAAK;IACZE,WAAW,EAAE,KAAK;IAClBE,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdwC,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC;EACzD,CAAC,EAAE,EAAE,CAAC;EAEN9C,SAAS,CAAC,MAAM;IACd,IAAIU,UAAU,EAAE;MACdO,QAAQ,CAACP,UAAU,CAACM,KAAK,CAAC;MAC1BG,cAAc,CAACT,UAAU,CAACQ,WAAW,CAAC;MACtCG,WAAW,CAACX,UAAU,CAACU,QAAQ,IAAIT,eAAe,IAAI,EAAE,CAAC;MACzDY,UAAU,CAACb,UAAU,CAACsC,QAAQ,GAAG,IAAIC,IAAI,CAACvC,UAAU,CAACsC,QAAQ,CAAC,GAAG,IAAI,CAAC;MACtErB,WAAW,CAACjB,UAAU,CAACgB,QAAQ,IAAI,EAAE,CAAC;MACtCG,mBAAmB,CAACnB,UAAU,CAACwC,QAAQ,IAAI,EAAE,CAAC;MAC9CnB,mBAAmB,CAACrB,UAAU,CAACyC,QAAQ,IAAI,IAAI,CAAC;MAChDZ,mBAAmB,CAAC7B,UAAU,CAACwC,QAAQ,IAAI,EAAE,CAAC;MAE9C,MAAME,MAAM,GAAG,CAAC,CAAC;MACjB1C,UAAU,CAACwC,QAAQ,CAACG,OAAO,CAACC,OAAO,IAAI;QACrCF,MAAM,CAACE,OAAO,CAACC,KAAK,CAAC,GAAG,IAAI;MAC9B,CAAC,CAAC;MACFlB,aAAa,CAACe,MAAM,CAAC;IACvB,CAAC,MAAM;MACL/B,WAAW,CAACV,eAAe,IAAI,EAAE,CAAC,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,CAACD,UAAU,EAAEC,eAAe,CAAC,CAAC;EAEjC,MAAM6C,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIhC,WAAW,CAACiC,IAAI,CAAC,CAAC,EAAE;MACtB9B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEgC,IAAI,EAAElC,WAAW;QAAEmC,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC;MACnElC,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,MAAMmC,mBAAmB,GAAGC,KAAK,IAAI;IACnC,MAAMC,iBAAiB,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IACtD,MAAMC,eAAe,GAAGhC,KAAK,CAACiC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACtD,EAAE,KAAKgD,iBAAiB,CAAC;IAEzE,IAAII,eAAe,IAAI,CAACtC,gBAAgB,CAACyC,IAAI,CAACf,OAAO,IAAIA,OAAO,CAACxC,EAAE,KAAKoD,eAAe,CAACpD,EAAE,CAAC,EAAE;MAC3Fe,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAEsC,eAAe,CAAC,CAAC;MAC3D3B,mBAAmB,CAAC,CAAC,GAAGD,gBAAgB,EAAE4B,eAAe,CAAC,CAAC;MAC3D7B,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAE,CAAC8B,eAAe,CAACX,KAAK,GAAG;MAAK,CAAC,CAAC;IACjE;EACF,CAAC;EAED,MAAMe,2BAA2B,GAAGC,SAAS,IAAI;IAC/C,MAAMC,cAAc,GAAG5C,gBAAgB,CAACuC,IAAI,CAACb,OAAO,IAAIA,OAAO,CAACxC,EAAE,KAAKyD,SAAS,CAAC;IACjF,IAAIC,cAAc,EAAE;MAClB,MAAM;QAAEjB;MAAM,CAAC,GAAGiB,cAAc;MAChC,MAAMC,eAAe,GAAG7C,gBAAgB,CAAC8C,MAAM,CAACpB,OAAO,IAAIA,OAAO,CAACxC,EAAE,KAAKyD,SAAS,CAAC;MACpF1C,mBAAmB,CAAC4C,eAAe,CAAC;MACpCpC,aAAa,CAAC;QAAE,GAAGD,UAAU;QAAE,CAACmB,KAAK,GAAG;MAAM,CAAC,CAAC;MAChDhB,mBAAmB,CAACD,gBAAgB,CAACoC,MAAM,CAACpB,OAAO,IAAIA,OAAO,CAACxC,EAAE,KAAKyD,SAAS,CAAC,CAAC;IACnF;EACF,CAAC;EAED,MAAMI,oBAAoB,GAAGxB,QAAQ,IAAI;IACvCpB,mBAAmB,CAACoB,QAAQ,CAAC;EAC/B,CAAC;EAED,MAAMyB,cAAc,GAAGA,CAAA,KAAM;IAC3B3D,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;IAClBE,WAAW,CAACV,eAAe,IAAI,EAAE,CAAC;IAClCY,UAAU,CAAC,IAAI,CAAC;IAChBE,cAAc,CAAC,EAAE,CAAC;IAClBE,WAAW,CAAC,EAAE,CAAC;IACfE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,mBAAmB,CAAC,IAAI,CAAC;IACzBM,aAAa,CAAC,CAAC,CAAC,CAAC;IACjBJ,aAAa,CAAC;MACZjB,KAAK,EAAE,KAAK;MACZE,WAAW,EAAE,KAAK;MAClBE,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,MAAMyD,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,MAAM,GAAG,CAAC,CAAC;IAEf,IAAI,CAAChE,KAAK,CAACyC,IAAI,CAAC,CAAC,EAAE;MACjBuB,MAAM,GAAG;QAAE,GAAGA,MAAM;QAAEhE,KAAK,EAAE;MAAK,CAAC;IACrC;IACA,IAAI,CAACE,WAAW,CAACuC,IAAI,CAAC,CAAC,EAAE;MACvBuB,MAAM,GAAG;QAAE,GAAGA,MAAM;QAAE9D,WAAW,EAAE;MAAK,CAAC;IAC3C;IACA,IAAI,CAACE,QAAQ,EAAE;MACb4D,MAAM,GAAG;QAAE,GAAGA,MAAM;QAAE5D,QAAQ,EAAE;MAAK,CAAC;IACxC;IAEA,IAAI6D,MAAM,CAACC,IAAI,CAACF,MAAM,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;MAClClD,aAAa,CAAC+C,MAAM,CAAC;MACrB;IACF;IAEA,MAAMI,QAAQ,GAAG;MACfpE,KAAK;MACLE,WAAW;MACXE,QAAQ;MACR4B,QAAQ,EAAE1B,OAAO;MACjB6B,QAAQ,EAAErB,gBAAgB;MAC1BJ,QAAQ,EAAEA,QAAQ,CAAC2D,GAAG,CAACC,OAAO,KAAK;QACjC5B,IAAI,EAAE4B,OAAO,CAAC5B,IAAI;QAClBC,SAAS,EAAE2B,OAAO,CAAC3B;MACrB,CAAC,CAAC,CAAC;MACHT,QAAQ,EAAEtB,gBAAgB,CAACyD,GAAG,CAAC/B,OAAO,KAAK;QACzCxC,EAAE,EAAEwC,OAAO,CAACxC,EAAE;QACdyE,UAAU,EAAEjC,OAAO,CAACiC,UAAU;QAC9BC,SAAS,EAAElC,OAAO,CAACkC,SAAS;QAC5BjC,KAAK,EAAED,OAAO,CAACC;MACjB,CAAC,CAAC;IACJ,CAAC;IAED,IAAI7C,UAAU,EAAE;MACd8B,KAAK,CAAC,mCAAmC9B,UAAU,CAACI,EAAE,GAAG,EAAE;QACzD2E,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;MAC/B,CAAC,CAAC,CACD3C,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZgC,cAAc,CAAC,CAAC;QAChBrE,OAAO,CAAC,CAAC;QACTK,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,CAAC,CACDiC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC;IACvD,CAAC,MAAM;MACLN,KAAK,CAAC,kCAAkC,EAAE;QACxCiD,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;MAC/B,CAAC,CAAC,CACD3C,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACZgC,cAAc,CAAC,CAAC;QAChBrE,OAAO,CAAC,CAAC;QACTK,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,CAAC,CACDiC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC,CAAC;IACvD;EACF,CAAC;EAED,oBACEhD,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAE,kBAAkBzF,IAAI,GAAG,MAAM,GAAG,EAAE,EAAG;IAAA0F,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrDvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BvG,KAAA,CAAAgG,aAAA;IAAQC,SAAS,EAAC,cAAc;IAACO,OAAO,EAAEA,CAAA,KAAM;MAAE/F,OAAO,CAAC,CAAC;MAAEK,QAAQ,CAAC,QAAQ,CAAC;IAAE,CAAE;IAAAoF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAe,CAAC,eACpGvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK3F,UAAU,GAAG,WAAW,GAAG,UAAe,CAC5C,CACF,CAAC,eACNZ,KAAA,CAAAgG,aAAA;IAAMC,SAAS,EAAC,WAAW;IAACQ,QAAQ,EAAE1B,YAAa;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjDvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,OAAY,CAAC,eACpBvG,KAAA,CAAAgG,aAAA;IACEU,IAAI,EAAC,MAAM;IACXvC,KAAK,EAAEjD,KAAM;IACbyF,QAAQ,EAAE3B,CAAC,IAAI7D,QAAQ,CAAC6D,CAAC,CAACd,MAAM,CAACC,KAAK,CAAE;IACxCyC,WAAW,EAAC,eAAe;IAC3BX,SAAS,EAAE/D,UAAU,CAAChB,KAAK,GAAG,OAAO,GAAG,EAAG;IAAAgF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC5C,CAAC,EACDrE,UAAU,CAAChB,KAAK,iBAAIlB,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAA2B,CAAC,eAC7EvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,aAAkB,CAAC,eAC1BvG,KAAA,CAAAgG,aAAA;IACE7B,KAAK,EAAE/C,WAAY;IACnBuF,QAAQ,EAAE3B,CAAC,IAAI3D,cAAc,CAAC2D,CAAC,CAACd,MAAM,CAACC,KAAK,CAAE;IAC9CyC,WAAW,EAAC,qBAAqB;IACjCX,SAAS,EAAE/D,UAAU,CAACd,WAAW,GAAG,OAAO,GAAG,EAAG;IAAA8E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACxC,CAAC,EACXrE,UAAU,CAACd,WAAW,iBAAIpB,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAA2B,CAAC,eACnFvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBvG,KAAA,CAAAgG,aAAA;IACE7B,KAAK,EAAE7C,QAAS;IAChBqF,QAAQ,EAAE3B,CAAC,IAAIzD,WAAW,CAACyD,CAAC,CAACd,MAAM,CAACC,KAAK,CAAE;IAC3C8B,SAAS,EAAE/D,UAAU,CAACZ,QAAQ,GAAG,OAAO,GAAG,EAAG;IAAA4E,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE9CvG,KAAA,CAAAgG,aAAA;IAAQ7B,KAAK,EAAC,EAAE;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sBAA4B,CAAC,EAC7CxF,UAAU,CAACwE,GAAG,CAACjE,QAAQ,iBACtBtB,KAAA,CAAAgG,aAAA;IAAQa,GAAG,EAAEvF,QAAQ,CAACN,EAAG;IAACmD,KAAK,EAAE7C,QAAQ,CAACN,EAAG;IAAAkF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1CjF,QAAQ,CAACL,IACJ,CACT,CACK,CAAC,EACRiB,UAAU,CAACZ,QAAQ,iBAAItB,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAA2B,CAAC,eAChFvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,aAAkB,CAAC,eAC1BvG,KAAA,CAAAgG,aAAA;IAAQW,QAAQ,EAAE7C,mBAAoB;IAAAoC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpCvG,KAAA,CAAAgG,aAAA;IAAQ7B,KAAK,EAAC,EAAE;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2BAAiC,CAAC,EAClDnE,KAAK,CAACmD,GAAG,CAACjB,IAAI,iBACbtE,KAAA,CAAAgG,aAAA;IAAQa,GAAG,EAAEvC,IAAI,CAACtD,EAAG;IAACmD,KAAK,EAAEG,IAAI,CAACtD,EAAG;IAAC8F,QAAQ,EAAEtE,gBAAgB,CAAC+B,IAAI,CAACwC,CAAC,IAAIA,CAAC,CAAC/F,EAAE,KAAKsD,IAAI,CAACtD,EAAE,CAAE;IAAAkF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1FjC,IAAI,CAACmB,UAAU,EAAC,GAAC,EAACnB,IAAI,CAACoB,SAClB,CACT,CACK,CAAC,eACT1F,KAAA,CAAAgG,aAAA;IAAIC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9BzE,gBAAgB,CAACyD,GAAG,CAAC/B,OAAO,iBAC3BxD,KAAA,CAAAgG,aAAA;IAAIa,GAAG,EAAErD,OAAO,CAACxC,EAAG;IAACgG,KAAK,EAAE;MAAEC,eAAe,EAAEzD,OAAO,CAACC;IAAM,CAAE;IAAAyC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5D/C,OAAO,CAACiC,UAAU,EAAC,GAAC,EAACjC,OAAO,CAACkC,SAAS,eACvC1F,KAAA,CAAAgG,aAAA;IACEC,SAAS,EAAC,uBAAuB;IACjCO,OAAO,EAAEA,CAAA,KAAMhC,2BAA2B,CAAChB,OAAO,CAACxC,EAAE,CAAE;IAAAkF,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACxD,MAEO,CACN,CACL,CACC,CACD,CAAC,eACNvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBvG,KAAA,CAAAgG,aAAA,CAAC1F,QAAQ;IACP6D,KAAK,EAAE3C,OAAQ;IACfmF,QAAQ,EAAElF,UAAW;IACrByF,UAAU,EAAE;MAAEN,WAAW,EAAE;IAAoB,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClD,CAAC,eACFvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BvG,KAAA,CAAAgG,aAAA;IACEU,IAAI,EAAC,QAAQ;IACbF,OAAO,EAAEA,CAAA,KAAM3B,oBAAoB,CAAC,KAAK,CAAE;IAC3CoB,SAAS,EAAE,mBAAmBjE,gBAAgB,KAAK,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAkE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9E,KAEO,CAAC,eACTvG,KAAA,CAAAgG,aAAA;IACEU,IAAI,EAAC,QAAQ;IACbF,OAAO,EAAEA,CAAA,KAAM3B,oBAAoB,CAAC,QAAQ,CAAE;IAC9CoB,SAAS,EAAE,mBAAmBjE,gBAAgB,KAAK,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAkE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjF,QAEO,CAAC,eACTvG,KAAA,CAAAgG,aAAA;IACEU,IAAI,EAAC,QAAQ;IACbF,OAAO,EAAEA,CAAA,KAAM3B,oBAAoB,CAAC,MAAM,CAAE;IAC5CoB,SAAS,EAAE,mBAAmBjE,gBAAgB,KAAK,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;IAAAkE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/E,MAEO,CACL,CAAC,eACNvG,KAAA,CAAAgG,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO,UAAe,CAAC,eACvBvG,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5BvG,KAAA,CAAAgG,aAAA;IACEU,IAAI,EAAC,MAAM;IACXvC,KAAK,EAAEzC,WAAY;IACnBiF,QAAQ,EAAE3B,CAAC,IAAIrD,cAAc,CAACqD,CAAC,CAACd,MAAM,CAACC,KAAK,CAAE;IAC9CyC,WAAW,EAAC,iBAAiB;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC9B,CAAC,eACFvG,KAAA,CAAAgG,aAAA;IAAQU,IAAI,EAAC,QAAQ;IAACF,OAAO,EAAE9C,gBAAiB;IAAAwC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAEzC,CACL,CAAC,eACNvG,KAAA,CAAAgG,aAAA;IAAIC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACzB3E,QAAQ,CAAC2D,GAAG,CAAC,CAACC,OAAO,EAAE2B,KAAK,kBAC3BnH,KAAA,CAAAgG,aAAA;IAAIa,GAAG,EAAEM,KAAM;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACbvG,KAAA,CAAAgG,aAAA;IACEU,IAAI,EAAC,UAAU;IACfU,OAAO,EAAE5B,OAAO,CAAC3B,SAAU;IAC3B8C,QAAQ,EAAEA,CAAA,KAAM;MACd,MAAMU,eAAe,GAAG,CAAC,GAAGzF,QAAQ,CAAC;MACrCyF,eAAe,CAACF,KAAK,CAAC,CAACtD,SAAS,GAAG,CAACwD,eAAe,CAACF,KAAK,CAAC,CAACtD,SAAS;MACpEhC,WAAW,CAACwF,eAAe,CAAC;IAC9B,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,EACDf,OAAO,CAAC5B,IACP,CACL,CACC,CACD,CAAC,eACN5D,KAAA,CAAAgG,aAAA;IAAKC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1BvG,KAAA,CAAAgG,aAAA;IAAQU,IAAI,EAAC,QAAQ;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAE3F,UAAU,GAAG,MAAM,GAAG,QAAiB,CAC3D,CACD,CACH,CAAC;AAEV,CAAC;AAED,eAAeL,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}