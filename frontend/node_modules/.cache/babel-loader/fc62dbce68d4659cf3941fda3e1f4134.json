{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/TaskDetailsPopup.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './TaskDetailsPopup.css';\nconst TaskDetailsPopup = ({\n  task,\n  onClose,\n  onEdit,\n  onDelete\n}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  useEffect(() => {\n    if (task) {\n      setTitle(task.title);\n      setDescription(task.description);\n      setCategory(task.category);\n      setDueDate(task.due_date ? new Date(task.due_date) : null);\n      setSubtasks(task.subtasks || []);\n      setAssignedContacts(task.contacts || []);\n      setSelectedPriority(task.priority || null);\n    }\n  }, [task]);\n  const formatDate = dateString => {\n    if (!dateString) {\n      return ''; // Oder einen Standardwert zurückgeben, je nach Anwendungsfall\n    }\n    const date = new Date(dateString);\n\n    // Überprüfe, ob das Datum gültig ist\n    if (isNaN(date.getTime())) {\n      return ''; // Oder einen Standardwert zurückgeben, falls das Datum ungültig ist\n    }\n    return date.toLocaleDateString();\n  };\n  const mapCategoryName = category => {\n    switch (category) {\n      case 'inProgress':\n        return 'in Progress';\n      case 'awaitingFeedback':\n        return 'awaiting Feedback';\n      default:\n        return category;\n    }\n  };\n  const handleEditClick = () => {\n    onEdit(task);\n  };\n  const handleDeleteClick = () => {\n    onDelete(task.id);\n  };\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleToggleSubtask = index => {\n    const newSubtasks = [...subtasks];\n    newSubtasks[index].completed = !newSubtasks[index].completed;\n    setSubtasks(newSubtasks);\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = getRandomColor();\n      setAssignedContacts([...assignedContacts, {\n        ...selectedContact,\n        color\n      }]);\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n    setAssignedContacts(updatedContacts);\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const editedTask = {\n      ...task,\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks,\n      contacts: assignedContacts\n    };\n    onEdit(editedTask);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-details-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-title-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, task ? task.title : 'Task Title'), /*#__PURE__*/React.createElement(\"button\", {\n    className: `priority-button-popup ${(selectedPriority === null || selectedPriority === void 0 ? void 0 : selectedPriority.toLowerCase()) || 'low'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, selectedPriority || 'Low')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 12\n    }\n  }, \"Description:\"), \" \", task ? task.description : 'Description'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }\n  }, \"Category:\"), \" \", task ? mapCategoryName(task.category) : 'Category'), task && task.due_date && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 38\n    }\n  }, \"Due Date:\"), \" \", formatDate(task.due_date)), task && task.subtasks.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 16\n    }\n  }, \"Subtasks:\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, task.subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: subtask.completed ? 'completed' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, subtask.text)))), task && task.contacts.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 16\n    }\n  }, \"Assigned Contacts:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, task.contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n    key: contact.id,\n    className: \"contact-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, contact.name.split(' ').map(part => part.charAt(0)).join('').toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, contact.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    className: \"edit-icon\",\n    onClick: handleEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrash,\n    className: \"delete-icon\",\n    onClick: handleDeleteClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Enter a title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Enter a description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Select task category\"), categories.map(cat => /*#__PURE__*/React.createElement(\"option\", {\n    key: cat.id,\n    value: cat.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, cat.name))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Assigned Contacts\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"Select contacts to assign\"), dummyContacts.map(contact => /*#__PURE__*/React.createElement(\"option\", {\n    key: contact.id,\n    value: contact.id,\n    disabled: assignedContacts.some(c => c.id === contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, contact.name))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, contact.name.split(\" \").map(part => part.charAt(0)).join(\"\").toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, contact.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"remove-contact\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(Datetime, {\n    value: dueDate,\n    onChange: date => setDueDate(date),\n    inputProps: {\n      placeholder: \"Select due date\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, \"Priority\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"priority-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, priorities.map(priority => /*#__PURE__*/React.createElement(\"button\", {\n    key: priority,\n    type: \"button\",\n    className: `priority-button ${selectedPriority === priority ? \"active\" : \"\"}`,\n    onClick: () => handleSelectPriority(priority),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, priority))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtasks-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    placeholder: \"Enter subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"add-subtask\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Add Subtask\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtasks-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    onClick: () => handleToggleSubtask(index),\n    className: subtask.completed ? \"completed\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, subtask.text))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, \"Save Changes\")));\n};\nexport default TaskDetailsPopup;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faEdit","faTrash","Datetime","TaskDetailsPopup","task","onClose","onEdit","onDelete","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","categories","id","name","due_date","Date","contacts","priority","formatDate","dateString","date","isNaN","getTime","toLocaleDateString","mapCategoryName","handleEditClick","handleDeleteClick","handleAddSubtask","trim","text","completed","handleToggleSubtask","index","newSubtasks","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","dummyContacts","find","contact","some","color","getRandomColor","handleRemoveAssignedContact","contactId","updatedContacts","filter","handleSelectPriority","handleSubmit","e","preventDefault","editedTask","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLowerCase","length","map","subtask","key","style","backgroundColor","split","part","charAt","join","toUpperCase","icon","onSubmit","type","onChange","placeholder","cat","disabled","c","faTimes","inputProps","priorities"],"sources":["/Users/julian/Coding/Task/frontend/src/components/TaskDetailsPopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './TaskDetailsPopup.css';\n\nconst TaskDetailsPopup = ({ task, onClose, onEdit, onDelete }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n\n  const categories = [\n    { id: 'todo', name: 'To Do' },\n    { id: 'inProgress', name: 'In Progress' },\n    { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n    { id: 'done', name: 'Done' }\n  ];\n\n  useEffect(() => {\n    if (task) {\n      setTitle(task.title);\n      setDescription(task.description);\n      setCategory(task.category);\n      setDueDate(task.due_date ? new Date(task.due_date) : null);\n      setSubtasks(task.subtasks || []);\n      setAssignedContacts(task.contacts || []);\n      setSelectedPriority(task.priority || null);\n    }\n  }, [task]);\n\n  const formatDate = (dateString) => {\n    if (!dateString) {\n      return ''; // Oder einen Standardwert zurückgeben, je nach Anwendungsfall\n    }\n\n    const date = new Date(dateString);\n\n    // Überprüfe, ob das Datum gültig ist\n    if (isNaN(date.getTime())) {\n      return ''; // Oder einen Standardwert zurückgeben, falls das Datum ungültig ist\n    }\n\n    return date.toLocaleDateString();\n  };\n\n  const mapCategoryName = (category) => {\n    switch (category) {\n      case 'inProgress':\n        return 'in Progress';\n      case 'awaitingFeedback':\n        return 'awaiting Feedback';\n      default:\n        return category;\n    }\n  };\n\n  const handleEditClick = () => {\n    onEdit(task);\n  };\n\n  const handleDeleteClick = () => {\n    onDelete(task.id);\n  };\n\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n      setSubtaskText('');\n    }\n  };\n\n  const handleToggleSubtask = (index) => {\n    const newSubtasks = [...subtasks];\n    newSubtasks[index].completed = !newSubtasks[index].completed;\n    setSubtasks(newSubtasks);\n  };\n\n  const handleAssignContact = (event) => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = getRandomColor();\n      setAssignedContacts([...assignedContacts, { ...selectedContact, color }]);\n    }\n  };\n\n  const handleRemoveAssignedContact = (contactId) => {\n    const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n    setAssignedContacts(updatedContacts);\n  };\n\n  const handleSelectPriority = (priority) => {\n    setSelectedPriority(priority);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const editedTask = {\n      ...task,\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks,\n      contacts: assignedContacts\n    };\n\n    onEdit(editedTask);\n  };\n\n  return (\n    <div className=\"task-details-popup\">\n      <div className=\"popup-content\">\n        <button className=\"close-button\" onClick={onClose}>&times;</button>\n        <div className=\"task-title-popup\">\n          <h2>{task ? task.title : 'Task Title'}</h2>\n          <button className={`priority-button-popup ${selectedPriority?.toLowerCase() || 'low'}`}>\n            {selectedPriority || 'Low'}\n          </button>\n        </div>\n        <p><strong>Description:</strong> {task ? task.description : 'Description'}</p>\n        <p><strong>Category:</strong> {task ? mapCategoryName(task.category) : 'Category'}</p>\n        {task && task.due_date && <p><strong>Due Date:</strong> {formatDate(task.due_date)}</p>}\n        {task && task.subtasks.length > 0 &&\n          <div>\n            <p><strong>Subtasks:</strong></p>\n            <ul>\n              {task.subtasks.map((subtask, index) => (\n                <li key={index} className={subtask.completed ? 'completed' : ''}>\n                  {subtask.text}\n                </li>\n              ))}\n            </ul>\n          </div>\n        }\n        {task && task.contacts.length > 0 &&\n          <div>\n            <p><strong>Assigned Contacts:</strong></p>\n            <div className=\"assigned-contacts\">\n              {task.contacts.map(contact => (\n                <div key={contact.id} className=\"contact-info\">\n                  <div className=\"contact-initials\" style={{ backgroundColor: contact.color }}>\n                    {contact.name.split(' ').map(part => part.charAt(0)).join('').toUpperCase()}\n                  </div>\n                  <span>{contact.name}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        }\n        <div className=\"icon-container\">\n          <FontAwesomeIcon icon={faEdit} className=\"edit-icon\" onClick={handleEditClick} />\n          <FontAwesomeIcon icon={faTrash} className=\"delete-icon\" onClick={handleDeleteClick} />\n        </div>\n      </div>\n      <form className=\"task-form\" onSubmit={handleSubmit}>\n        <div className=\"form-left\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            placeholder=\"Enter a title\"\n          />\n          <label>Description</label>\n          <textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Enter a description\"\n          />\n          <label>Category</label>\n          <select\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <option value=\"\">Select task category</option>\n            {categories.map((cat) => (\n              <option key={cat.id} value={cat.id}>\n                {cat.name}\n              </option>\n            ))}\n          </select>\n          <label>Assigned Contacts</label>\n          <select onChange={handleAssignContact}>\n            <option value=\"\">Select contacts to assign</option>\n            {dummyContacts.map((contact) => (\n              <option\n                key={contact.id}\n                value={contact.id}\n                disabled={assignedContacts.some((c) => c.id === contact.id)}\n              >\n                {contact.name}\n              </option>\n            ))}\n          </select>\n          <ul className=\"assigned-contacts\">\n            {assignedContacts.map((contact) => (\n              <li key={contact.id}>\n                <div className=\"contact-info\">\n                  <div\n                    className=\"contact-initials\"\n                    style={{ backgroundColor: contact.color }}\n                  >\n                    {contact.name\n                      .split(\" \")\n                      .map((part) => part.charAt(0))\n                      .join(\"\")\n                      .toUpperCase()}\n                  </div>\n                  <span>{contact.name}</span>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"remove-contact\"\n                  onClick={() => handleRemoveAssignedContact(contact.id)}\n                >\n                  <FontAwesomeIcon icon={faTimes} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-right\">\n          <label>Due Date</label>\n          <Datetime\n            value={dueDate}\n            onChange={(date) => setDueDate(date)}\n            inputProps={{ placeholder: \"Select due date\" }}\n          />\n          <label>Priority</label>\n          <div className=\"priority-buttons\">\n            {priorities.map((priority) => (\n              <button\n                key={priority}\n                type=\"button\"\n                className={`priority-button ${selectedPriority === priority ? \"active\" : \"\"}`}\n                onClick={() => handleSelectPriority(priority)}\n              >\n                {priority}\n              </button>\n            ))}\n          </div>\n          <label>Subtasks</label>\n          <div className=\"subtasks-container\">\n            <input\n              type=\"text\"\n              value={subtaskText}\n              onChange={(e) => setSubtaskText(e.target.value)}\n              placeholder=\"Enter subtask\"\n            />\n            <button\n              type=\"button\"\n              className=\"add-subtask\"\n              onClick={handleAddSubtask}\n            >\n              Add Subtask\n            </button>\n            <ul className=\"subtasks-list\">\n              {subtasks.map((subtask, index) => (\n                <li key={index} onClick={() => handleToggleSubtask(index)} className={subtask.completed ? \"completed\" : \"\"}>\n                  {subtask.text}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"submit-button\">\n          Save Changes\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TaskDetailsPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}