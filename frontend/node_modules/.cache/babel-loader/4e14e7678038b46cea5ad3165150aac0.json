{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Task.js\";\n// src/components/Task.js\nimport React, { useState } from 'react';\nimport axiosInstance from '../api/axiosConfig';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nconst Task = ({\n  show,\n  onClose\n}) => {\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const dummyContacts = [{\n    id: 1,\n    name: 'John Doe'\n  }, {\n    id: 2,\n    name: 'Jane Smith'\n  }, {\n    id: 3,\n    name: 'Michael Johnson'\n  }, {\n    id: 4,\n    name: 'Emily Davis'\n  }, {\n    id: 5,\n    name: 'David Brown'\n  }];\n  const [usedColors, setUsedColors] = useState({});\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  const getRandomColor = () => {\n    const colors = ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8'];\n    const availableColors = colors.filter(color => !usedColors[color]);\n    if (availableColors.length === 0) {\n      return '#6c757d';\n    }\n    const randomIndex = Math.floor(Math.random() * availableColors.length);\n    return availableColors[randomIndex];\n  };\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleToggleSubtask = index => {\n    const newSubtasks = subtasks.map((subtask, i) => i === index ? {\n      ...subtask,\n      completed: !subtask.completed\n    } : subtask);\n    setSubtasks(newSubtasks);\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n    if (selectedContact && !selectedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = getRandomColor();\n      setAssignedContacts([...assignedContacts, {\n        ...selectedContact,\n        color\n      }]);\n      setUsedColors({\n        ...usedColors,\n        [color]: true\n      });\n      setSelectedContacts([...selectedContacts, selectedContact]);\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const {\n        color\n      } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({\n        ...usedColors,\n        [color]: false\n      });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedContacts([]);\n    setSelectedPriority(null);\n    setUsedColors({});\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (title && description && category) {\n      const newTask = {\n        title,\n        description,\n        category,\n        due_date: dueDate,\n        priority: selectedPriority\n      };\n      try {\n        const response = await axiosInstance.post('/tasks/', newTask);\n        console.log(response.data); // Debugging: Ausgabe der Antwort\n        handleClearAll();\n        onClose();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `task-container ${show ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Add Task\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close-button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Enter a title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Enter a description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Select task category\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, category.name))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"Assigned to\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, \"Select contacts to assign\"), dummyContacts.map(contact => /*#__PURE__*/React.createElement(\"option\", {\n    key: contact.id,\n    value: contact.id,\n    disabled: selectedContacts.some(c => c.id === contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, contact.name))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, contact.name.split(' ').map(part => part.charAt(0)).join('').toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, contact.name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"remove-contact\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Due Date\"), /*#__PURE__*/React.createElement(Datetime, {\n    value: dueDate,\n    onChange: date => setDueDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Priority\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"priority-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button high ${selectedPriority === 'high' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('high'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"High\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('medium'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('low'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"Low\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    placeholder: \"Enter a subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtask-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: subtask.completed ? 'completed' : '',\n    onClick: () => handleToggleSubtask(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, subtask.text)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-button\",\n    onClick: handleClearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"create-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 21\n    }\n  }, \"Create Task\"))));\n};\nexport default Task;","map":{"version":3,"names":["React","useState","axiosInstance","FontAwesomeIcon","faTimes","Datetime","Task","show","onClose","categories","id","name","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","dummyContacts","usedColors","setUsedColors","selectedContacts","setSelectedContacts","getRandomColor","colors","availableColors","filter","color","length","randomIndex","Math","floor","random","handleAddSubtask","trim","text","completed","handleToggleSubtask","index","newSubtasks","map","subtask","i","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","find","contact","some","handleRemoveAssignedContact","contactId","removedContact","updatedContacts","handleSelectPriority","priority","handleClearAll","handleSubmit","e","preventDefault","newTask","due_date","response","post","console","log","data","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","icon","onSubmit","onChange","placeholder","key","disabled","c","style","backgroundColor","split","part","charAt","join","toUpperCase","date"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Task.js"],"sourcesContent":["// src/components/Task.js\nimport React, { useState } from 'react';\nimport axiosInstance from '../api/axiosConfig';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\n\nconst Task = ({ show, onClose }) => {\n    const categories = [\n        { id: 'todo', name: 'To Do' },\n        { id: 'inProgress', name: 'In Progress' },\n        { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n        { id: 'done', name: 'Done' }\n    ];\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [dueDate, setDueDate] = useState(null);\n    const [subtaskText, setSubtaskText] = useState('');\n    const [subtasks, setSubtasks] = useState([]);\n    const [assignedContacts, setAssignedContacts] = useState([]);\n    const [selectedPriority, setSelectedPriority] = useState(null);\n\n    const dummyContacts = [\n        { id: 1, name: 'John Doe' },\n        { id: 2, name: 'Jane Smith' },\n        { id: 3, name: 'Michael Johnson' },\n        { id: 4, name: 'Emily Davis' },\n        { id: 5, name: 'David Brown' }\n    ];\n\n    const [usedColors, setUsedColors] = useState({});\n    const [selectedContacts, setSelectedContacts] = useState([]);\n\n    const getRandomColor = () => {\n        const colors = ['#007bff', '#28a745', '#dc3545', '#ffc107', '#17a2b8'];\n        const availableColors = colors.filter(color => !usedColors[color]);\n        if (availableColors.length === 0) {\n            return '#6c757d';\n        }\n        const randomIndex = Math.floor(Math.random() * availableColors.length);\n        return availableColors[randomIndex];\n    };\n\n    const handleAddSubtask = () => {\n        if (subtaskText.trim()) {\n            setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n            setSubtaskText('');\n        }\n    };\n\n    const handleToggleSubtask = index => {\n        const newSubtasks = subtasks.map((subtask, i) =>\n            i === index ? { ...subtask, completed: !subtask.completed } : subtask\n        );\n        setSubtasks(newSubtasks);\n    };\n\n    const handleAssignContact = event => {\n        const selectedContactId = parseInt(event.target.value);\n        const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n\n        if (selectedContact && !selectedContacts.some(contact => contact.id === selectedContact.id)) {\n            const color = getRandomColor();\n            setAssignedContacts([...assignedContacts, { ...selectedContact, color }]);\n            setUsedColors({ ...usedColors, [color]: true });\n            setSelectedContacts([...selectedContacts, selectedContact]);\n        }\n    };\n\n    const handleRemoveAssignedContact = contactId => {\n        const removedContact = assignedContacts.find(contact => contact.id === contactId);\n        if (removedContact) {\n            const { color } = removedContact;\n            const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n            setAssignedContacts(updatedContacts);\n            setUsedColors({ ...usedColors, [color]: false });\n            setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n        }\n    };\n\n    const handleSelectPriority = priority => {\n        setSelectedPriority(priority);\n    };\n\n    const handleClearAll = () => {\n        setTitle('');\n        setDescription('');\n        setCategory('');\n        setDueDate(null);\n        setSubtaskText('');\n        setSubtasks([]);\n        setAssignedContacts([]);\n        setSelectedContacts([]);\n        setSelectedPriority(null);\n        setUsedColors({});\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (title && description && category) {\n            const newTask = {\n                title,\n                description,\n                category,\n                due_date: dueDate,\n                priority: selectedPriority,\n            };\n            try {\n                const response = await axiosInstance.post('/tasks/', newTask);\n                console.log(response.data); // Debugging: Ausgabe der Antwort\n                handleClearAll();\n                onClose();\n            } catch (error) {\n                console.error(error);\n            }\n        }\n    };\n\n    return (\n        <div className={`task-container ${show ? 'show' : ''}`}>\n            <div className=\"task-header\">\n                <h2>Add Task</h2>\n                <button type=\"button\" className=\"close-button\" onClick={onClose}>\n                    <FontAwesomeIcon icon={faTimes} />\n                </button>\n            </div>\n            <form className=\"task-form\" onSubmit={handleSubmit}>\n                <div className=\"form-left\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                        placeholder=\"Enter a title\"\n                    />\n                    <label>Description</label>\n                    <textarea\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                        placeholder=\"Enter a description\"\n                    ></textarea>\n                    <label>Category</label>\n                    <select\n                        value={category}\n                        onChange={e => setCategory(e.target.value)}\n                    >\n                        <option value=\"\">Select task category</option>\n                        {categories.map(category => (\n                            <option key={category.id} value={category.id}>\n                                {category.name}\n                            </option>\n                        ))}\n                    </select>\n                    <label>Assigned to</label>\n                    <select onChange={handleAssignContact}>\n                        <option value=\"\">Select contacts to assign</option>\n                        {dummyContacts.map(contact => (\n                            <option key={contact.id} value={contact.id} disabled={selectedContacts.some(c => c.id === contact.id)}>\n                                {contact.name}\n                            </option>\n                        ))}\n                    </select>\n                    <ul className=\"assigned-contacts\">\n                        {assignedContacts.map(contact => (\n                            <li key={contact.id}>\n                                <div className=\"contact-info\">\n                                    <div\n                                        className=\"contact-initials\"\n                                        style={{ backgroundColor: contact.color }}\n                                    >\n                                        {contact.name\n                                            .split(' ')\n                                            .map(part => part.charAt(0))\n                                            .join('')\n                                            .toUpperCase()}\n                                    </div>\n                                    <span>{contact.name}</span>\n                                </div>\n                                <button\n                                    type=\"button\"\n                                    className=\"remove-contact\"\n                                    onClick={() => handleRemoveAssignedContact(contact.id)}\n                                >\n                                    <FontAwesomeIcon icon={faTimes} />\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"form-right\">\n                    <label>Due Date</label>\n                    <Datetime\n                        value={dueDate}\n                        onChange={date => setDueDate(date)}\n                    />\n                    <label>Priority</label>\n                    <div className=\"priority-buttons\">\n                        <button\n                            type=\"button\"\n                            className={`prio-button high ${selectedPriority === 'high' ? 'selected' : ''}`}\n                            onClick={() => handleSelectPriority('high')}\n                        >\n                            High\n                        </button>\n                        <button\n                            type=\"button\"\n                            className={`prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`}\n                            onClick={() => handleSelectPriority('medium')}\n                        >\n                            Medium\n                        </button>\n                        <button\n                            type=\"button\"\n                            className={`prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`}\n                            onClick={() => handleSelectPriority('low')}\n                        >\n                            Low\n                        </button>\n                    </div>\n                    <label>Subtasks</label>\n                    <div className=\"subtasks\">\n                        <input\n                            type=\"text\"\n                            value={subtaskText}\n                            onChange={e => setSubtaskText(e.target.value)}\n                            placeholder=\"Enter a subtask\"\n                        />\n                        <button type=\"button\" onClick={handleAddSubtask}>\n                            Add\n                        </button>\n                    </div>\n                    <ul className=\"subtask-list\">\n                        {subtasks.map((subtask, index) => (\n                            <li\n                                key={index}\n                                className={subtask.completed ? 'completed' : ''}\n                                onClick={() => handleToggleSubtask(index)}\n                            >\n                                {subtask.text}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"form-footer\">\n                    <button type=\"button\" className=\"clear-button\" onClick={handleClearAll}>\n                        Clear\n                    </button>\n                    <button type=\"submit\" className=\"create-button\">\n                        Create Task\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}