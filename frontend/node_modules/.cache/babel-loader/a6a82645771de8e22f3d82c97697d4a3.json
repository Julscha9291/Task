{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Board.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\nconst Board = () => {\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    awaitingFeedback: [],\n    done: []\n  });\n  const [showTask, setShowTask] = useState(false);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/tasks/');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo'),\n        inProgress: data.filter(task => task.category === 'inProgress'),\n        awaitingFeedback: data.filter(task => task.category === 'awaitingFeedback'),\n        done: data.filter(task => task.category === 'done')\n      };\n      setTasks(formattedTasks);\n    } catch (error) {\n      console.error('Error fetching tasks:', error.message);\n      try {\n        const errorText = await error.text();\n        console.error('Error response text:', errorText);\n      } catch (err) {\n        console.error('Unable to read error response text');\n      }\n    }\n  };\n  const toggleTask = () => {\n    setShowTask(!showTask);\n  };\n  const createTask = (title, content, category) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      contacts: []\n    };\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [category]: [newTask, ...prevTasks[category]]\n    }));\n    setShowTask(false);\n  };\n  const renderTasks = taskList => {\n    return taskList.map(task => {\n      var _task$priority;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: task.id,\n        className: \"task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, task.title, /*#__PURE__*/React.createElement(\"button\", {\n        className: `priority-button ${((_task$priority = task.priority) === null || _task$priority === void 0 ? void 0 : _task$priority.toLowerCase()) || 'low'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, task.priority || 'Low')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"assigned-contacts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, task.contacts && task.contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n        key: contact.id,\n        className: \"contact-initials\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, contact.name.split(' ').map(part => part.charAt(0)).join('').toUpperCase()))));\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kanban-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, ['todo', 'inProgress', 'awaitingFeedback', 'done'].map(category => /*#__PURE__*/React.createElement(\"div\", {\n    key: category,\n    className: \"board-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-button\",\n    onClick: toggleTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    className: \"navbar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"column-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, category.replace(/([A-Z])/g, ' $1')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, renderTasks(tasks[category])))), /*#__PURE__*/React.createElement(Task, {\n    show: showTask,\n    onClose: toggleTask,\n    createTask: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Board;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","Task","Board","tasks","setTasks","todo","inProgress","awaitingFeedback","done","showTask","setShowTask","fetchTasks","response","fetch","ok","Error","status","data","json","formattedTasks","filter","task","category","error","console","message","errorText","text","err","toggleTask","createTask","title","content","newTask","id","Date","now","contacts","prevTasks","renderTasks","taskList","map","_task$priority","createElement","key","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","priority","toLowerCase","description","contact","name","split","part","charAt","join","toUpperCase","onClick","icon","replace","show","onClose"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\n\nconst Board = () => {\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    awaitingFeedback: [],\n    done: [],\n  });\n\n  const [showTask, setShowTask] = useState(false);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/tasks/');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo'),\n        inProgress: data.filter(task => task.category === 'inProgress'),\n        awaitingFeedback: data.filter(task => task.category === 'awaitingFeedback'),\n        done: data.filter(task => task.category === 'done'),\n      };\n      setTasks(formattedTasks);\n    } catch (error) {\n      console.error('Error fetching tasks:', error.message);\n      try {\n        const errorText = await error.text();\n        console.error('Error response text:', errorText);\n      } catch (err) {\n        console.error('Unable to read error response text');\n      }\n    }\n  };\n\n  const toggleTask = () => {\n    setShowTask(!showTask);\n  };\n\n  const createTask = (title, content, category) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      contacts: [],\n    };\n\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [category]: [newTask, ...prevTasks[category]],\n    }));\n    setShowTask(false);\n  };\n\n  const renderTasks = (taskList) => {\n    return taskList.map(task => (\n      <li key={task.id} className=\"task\">\n        <div className=\"task-title\">\n          {task.title}\n          <button className={`priority-button ${task.priority?.toLowerCase() || 'low'}`}>\n            {task.priority || 'Low'}\n          </button>\n        </div>\n        <div className=\"task-content\">{task.description}</div>\n        <div className=\"assigned-contacts\">\n          {task.contacts && task.contacts.map(contact => (\n            <div key={contact.id} className=\"contact-initials\" >\n                                        {contact.name\n                                            .split(' ')\n                                            .map(part => part.charAt(0))\n                                            .join('')\n                                            .toUpperCase()}\n            </div>\n          ))}\n        </div>\n      </li>\n    ));\n  };\n\n  return (\n    <div className=\"kanban-board\">\n      {['todo', 'inProgress', 'awaitingFeedback', 'done'].map(category => (\n        <div key={category} className=\"board-column\">\n          <div className=\"add-button\" onClick={toggleTask}>\n            <FontAwesomeIcon icon={faPlus} className=\"navbar-icon\" />\n            <p className=\"add-text\">Add</p>\n          </div>\n          <h3 className=\"column-title\">{category.replace(/([A-Z])/g, ' $1')}</h3>\n          <ul className=\"task-list\">\n            {renderTasks(tasks[category])}\n          </ul>\n        </div>\n      ))}\n      <Task show={showTask} onClose={toggleTask} createTask={createTask} />\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}