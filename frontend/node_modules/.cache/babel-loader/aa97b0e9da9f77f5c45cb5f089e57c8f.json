{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/TaskDetailsPopup.js\";\nimport React from 'react';\nimport './TaskDetailsPopup.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Task from './Task';\nconst TaskDetailsPopup = ({\n  task,\n  onClose,\n  onEdit,\n  onDelete\n}) => {\n  var _task$priority;\n  if (!task) return null;\n  const formatDate = dateString => {\n    if (!dateString) {\n      return ''; // Oder einen Standardwert zurückgeben, je nach Anwendungsfall\n    }\n    const date = new Date(dateString);\n\n    // Überprüfe, ob das Datum gültig ist\n    if (isNaN(date.getTime())) {\n      return ''; // Oder einen Standardwert zurückgeben, falls das Datum ungültig ist\n    }\n    return date.toLocaleDateString();\n  };\n  const mapCategoryName = category => {\n    switch (category) {\n      case 'inProgress':\n        return 'in Progress';\n      case 'awaitingFeedback':\n        return 'awaiting Feedback';\n      default:\n        return category;\n    }\n  };\n  const handleEditClick = () => {\n    onEdit(task);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-details-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-title-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, task.title), /*#__PURE__*/React.createElement(\"button\", {\n    className: `priority-button-popup ${((_task$priority = task.priority) === null || _task$priority === void 0 ? void 0 : _task$priority.toLowerCase()) || 'low'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, task.priority || 'Low')), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }\n  }, \"Description:\"), \" \", task.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Category:\"), \" \", mapCategoryName(task.category)), task.due_date && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 30\n    }\n  }, \"Due Date:\"), \" \", formatDate(task.due_date)), task.subtasks.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtask-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }\n  }, \"Subtasks:\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtask-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, task.subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: subtask.completed ? 'completed' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, subtask.text)))), task.contacts.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }\n  }, \"Assigned Contacts:\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, task.contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n    key: contact.id,\n    className: \"contact-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, contact.name.split(' ').map(part => part.charAt(0)).join('').toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, contact.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEdit,\n    className: \"edit-icon\",\n    onClick: handleEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrash,\n    className: \"delete-icon\",\n    onClick: () => onDelete(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default TaskDetailsPopup;","map":{"version":3,"names":["React","FontAwesomeIcon","faEdit","faTrash","Task","TaskDetailsPopup","task","onClose","onEdit","onDelete","_task$priority","formatDate","dateString","date","Date","isNaN","getTime","toLocaleDateString","mapCategoryName","category","handleEditClick","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","priority","toLowerCase","description","due_date","subtasks","length","map","subtask","index","key","completed","text","contacts","contact","id","style","backgroundColor","color","name","split","part","charAt","join","toUpperCase","icon"],"sources":["/Users/julian/Coding/Task/frontend/src/components/TaskDetailsPopup.js"],"sourcesContent":["import React from 'react';\nimport './TaskDetailsPopup.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport Task from './Task';\n\nconst TaskDetailsPopup = ({ task, onClose, onEdit, onDelete }) => {\n  if (!task) return null;\n\n  const formatDate = (dateString) => {\n    if (!dateString) {\n      return ''; // Oder einen Standardwert zurückgeben, je nach Anwendungsfall\n    }\n\n    const date = new Date(dateString);\n\n    // Überprüfe, ob das Datum gültig ist\n    if (isNaN(date.getTime())) {\n      return ''; // Oder einen Standardwert zurückgeben, falls das Datum ungültig ist\n    }\n\n    return date.toLocaleDateString();\n  };\n\n  const mapCategoryName = (category) => {\n    switch (category) {\n      case 'inProgress':\n        return 'in Progress';\n      case 'awaitingFeedback':\n        return 'awaiting Feedback';\n      default:\n        return category;\n    }\n  };\n\n  const handleEditClick = () => {\n    onEdit(task);\n  };\n\n  return (\n    <div className=\"task-details-popup\">\n      <div className=\"popup-content\">\n        <button className=\"close-button\" onClick={onClose}>&times;</button>\n        <div className=\"task-title-popup\">\n          <h2>{task.title}</h2>\n          <button className={`priority-button-popup ${task.priority?.toLowerCase() || 'low'}`}>\n            {task.priority || 'Low'}\n          </button>\n        </div>\n        <p><strong>Description:</strong> {task.description}</p>\n        <p>\n          <strong>Category:</strong> {mapCategoryName(task.category)}\n        </p>\n        {task.due_date && <p><strong>Due Date:</strong> {formatDate(task.due_date)}</p>}\n        {task.subtasks.length > 0 && (\n         <div className=\"subtask-input\">\n            <p><strong>Subtasks:</strong></p>\n            <ul className=\"subtask-list\">\n              {task.subtasks.map((subtask, index) => (\n                <li key={index} className={subtask.completed ? 'completed' : ''}>\n                  {subtask.text}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {task.contacts.length > 0 && (\n          <div>\n            <p><strong>Assigned Contacts:</strong></p>\n            <div className=\"assigned-contacts\">\n              {task.contacts.map(contact => (\n                <div key={contact.id} className=\"contact-info\">\n                  <div className=\"contact-initials\" style={{ backgroundColor: contact.color }}>\n                    {contact.name\n                      .split(' ')\n                      .map(part => part.charAt(0))\n                      .join('')\n                      .toUpperCase()}\n                  </div>\n                  <span>{contact.name}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        <div className=\"icon-container\">\n          <FontAwesomeIcon icon={faEdit} className=\"edit-icon\" onClick={handleEditClick} />\n          <FontAwesomeIcon icon={faTrash} className=\"delete-icon\" onClick={() => onDelete(task.id)} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDetailsPopup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}