{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Task.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nconst Task = ({\n  show,\n  onClose,\n  createTask,\n  editTask,\n  taskToEdit\n}) => {\n  const navigate = useNavigate();\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n  const [users, setUsers] = useState([]);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/users/').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.indexOf('application/json') !== -1) {\n        return response.json();\n      } else {\n        throw new Error('Received non-JSON response');\n      }\n    }).then(data => {\n      setUsers(data); // Set users state with received JSON data\n    }).catch(error => {\n      console.error('Fetch error:', error);\n    });\n  }, []);\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category);\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n      setSelectedContacts(taskToEdit.contacts || []);\n    }\n  }, [taskToEdit]);\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = users.find(user => user.id === selectedContactId);\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      const color = selectedContact.color;\n      setAssignedContacts([...assignedContacts, {\n        ...selectedContact,\n        color\n      }]);\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n    setAssignedContacts(updatedContacts);\n    setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n    if (!title.trim()) {\n      errors = {\n        ...errors,\n        title: true\n      };\n    }\n    if (!description.trim()) {\n      errors = {\n        ...errors,\n        description: true\n      };\n    }\n    if (!category) {\n      errors = {\n        ...errors,\n        category: true\n      };\n    }\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    const taskData = {\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks: subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: assignedContacts.map(contact => ({\n        id: contact.id,\n        first_name: contact.first_name,\n        last_name: contact.last_name,\n        color: contact.color\n      }))\n    };\n    const invalidContacts = taskData.contacts.filter(contact => !contact.id);\n    if (invalidContacts.length > 0) {\n      console.error('Invalid contacts detected:', invalidContacts);\n      return;\n    }\n    console.log('Task data to send:', taskData);\n    if (taskToEdit) {\n      fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(errorData => {\n            console.error('Error response:', errorData);\n            throw new Error(`HTTP error! status: ${response.status}`);\n          });\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Updated task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board');\n        window.location.reload();\n      }).catch(error => {\n        console.error('Fetch error:', error);\n      });\n    } else {\n      fetch('http://localhost:8000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(errorData => {\n            console.error('Error response:', errorData);\n            throw new Error(`HTTP error! status: ${response.status}`);\n          });\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Created task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board');\n        window.location.reload();\n      }).catch(error => {\n        console.error('Fetch error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `task-container ${show ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: () => {\n      onClose();\n      navigate('/board');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-title-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, taskToEdit ? 'Edit Task' : 'Add Task'))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Enter a title\",\n    className: formErrors.title ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }), formErrors.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 42\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Enter a description\",\n    className: formErrors.description ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }), formErrors.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 48\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    className: formErrors.category ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, \"Select task category\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, category.name))), formErrors.category && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 45\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, \"Assigned to\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, \"Select contacts to assign\"), users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.id,\n    value: user.id,\n    disabled: selectedContacts.some(c => c.id === user.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, user.first_name, \" \", user.last_name))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 37\n    }\n  }, contact.first_name.charAt(0).toUpperCase(), contact.last_name.charAt(0).toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 37\n    }\n  }, contact.first_name, \" \", contact.last_name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"remove-contact\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  }, \"Due date\"), /*#__PURE__*/React.createElement(Datetime, {\n    value: dueDate,\n    onChange: date => setDueDate(date),\n    dateFormat: \"DD/MM/YYYY\",\n    timeFormat: false,\n    inputProps: {\n      placeholder: 'Select due date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }, \"Prio\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prio-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('urgent'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, \"Urgent\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('medium'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('low'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, \"Low\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtask-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    placeholder: \"Add new subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtask-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 21\n    }\n  }, subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: subtask.completed ? 'completed' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: subtask.completed,\n    onChange: () => {\n      const updatedSubtasks = [...subtasks];\n      updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n      setSubtasks(updatedSubtasks);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 33\n    }\n  }, subtask.text))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-button\",\n    onClick: handleClearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 21\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"create-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 21\n    }\n  }, taskToEdit ? 'Update Task' : 'Create Task'))));\n};\nexport default Task;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","useNavigate","faTimes","Datetime","Task","show","onClose","createTask","editTask","taskToEdit","navigate","categories","id","name","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","formErrors","setFormErrors","users","setUsers","selectedContacts","setSelectedContacts","fetch","then","response","ok","Error","status","contentType","headers","get","indexOf","json","data","catch","error","console","due_date","Date","contacts","priority","handleAddSubtask","trim","text","completed","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","find","user","some","contact","color","handleRemoveAssignedContact","contactId","updatedContacts","filter","handleSelectPriority","handleClearAll","handleSubmit","e","preventDefault","errors","Object","keys","length","taskData","map","subtask","first_name","last_name","invalidContacts","log","method","body","JSON","stringify","errorData","window","location","reload","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","placeholder","key","disabled","c","style","backgroundColor","charAt","toUpperCase","icon","date","dateFormat","timeFormat","inputProps","index","checked","updatedSubtasks"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\n\nconst Task = ({ show, onClose, createTask, editTask, taskToEdit }) => {\n    const navigate = useNavigate();\n\n    const categories = [\n        { id: 'todo', name: 'To Do' },\n        { id: 'inProgress', name: 'In Progress' },\n        { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n        { id: 'done', name: 'Done' }\n    ];\n\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [dueDate, setDueDate] = useState(null);\n    const [subtaskText, setSubtaskText] = useState('');\n    const [subtasks, setSubtasks] = useState([]);\n    const [assignedContacts, setAssignedContacts] = useState([]);\n    const [selectedPriority, setSelectedPriority] = useState(null);\n    const [formErrors, setFormErrors] = useState({\n        title: false,\n        description: false,\n        category: false\n    });\n\n    const [users, setUsers] = useState([]);\n    const [selectedContacts, setSelectedContacts] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:8000/api/users/')\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                const contentType = response.headers.get('content-type');\n                if (contentType && contentType.indexOf('application/json') !== -1) {\n                    return response.json();\n                } else {\n                    throw new Error('Received non-JSON response');\n                }\n            })\n            .then(data => {\n                setUsers(data); // Set users state with received JSON data\n            })\n            .catch(error => {\n                console.error('Fetch error:', error);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (taskToEdit) {\n            setTitle(taskToEdit.title);\n            setDescription(taskToEdit.description);\n            setCategory(taskToEdit.category);\n            setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n            setSubtasks(taskToEdit.subtasks || []);\n            setAssignedContacts(taskToEdit.contacts || []);\n            setSelectedPriority(taskToEdit.priority || null);\n            setSelectedContacts(taskToEdit.contacts || []);\n        }\n    }, [taskToEdit]);\n\n    const handleAddSubtask = () => {\n        if (subtaskText.trim()) {\n            setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n            setSubtaskText('');\n        }\n    };\n\n    const handleAssignContact = event => {\n        const selectedContactId = parseInt(event.target.value);\n        const selectedContact = users.find(user => user.id === selectedContactId);\n\n        if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n            const color = selectedContact.color;\n            setAssignedContacts([...assignedContacts, { ...selectedContact, color }]);\n        }\n    };\n\n    const handleRemoveAssignedContact = contactId => {\n        const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n        setAssignedContacts(updatedContacts);\n        setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    };\n\n    const handleSelectPriority = priority => {\n        setSelectedPriority(priority);\n    };\n\n    const handleClearAll = () => {\n        setTitle('');\n        setDescription('');\n        setCategory('');\n        setDueDate(null);\n        setSubtaskText('');\n        setSubtasks([]);\n        setAssignedContacts([]);\n        setSelectedPriority(null);\n        setFormErrors({\n            title: false,\n            description: false,\n            category: false\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let errors = {};\n\n        if (!title.trim()) {\n            errors = { ...errors, title: true };\n        }\n        if (!description.trim()) {\n            errors = { ...errors, description: true };\n        }\n        if (!category) {\n            errors = { ...errors, category: true };\n        }\n\n        if (Object.keys(errors).length > 0) {\n            setFormErrors(errors);\n            return;\n        }\n\n        const taskData = {\n            title,\n            description,\n            category,\n            due_date: dueDate,\n            priority: selectedPriority,\n            subtasks: subtasks.map(subtask => ({\n                text: subtask.text,\n                completed: subtask.completed\n            })),\n            contacts: assignedContacts.map(contact => ({\n                id: contact.id,\n                first_name: contact.first_name,\n                last_name: contact.last_name,\n                color: contact.color\n            }))\n        };\n\n        const invalidContacts = taskData.contacts.filter(contact => !contact.id);\n        if (invalidContacts.length > 0) {\n            console.error('Invalid contacts detected:', invalidContacts);\n            return;\n        }\n\n        console.log('Task data to send:', taskData);\n\n        if (taskToEdit) {\n            fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(taskData),\n            })\n            .then(response => {\n                if (!response.ok) {\n                    return response.json().then(errorData => {\n                        console.error('Error response:', errorData);\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    });\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log('Updated task:', data);\n                handleClearAll();\n                onClose();\n                navigate('/board');\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.error('Fetch error:', error);\n            });\n        } else {\n            fetch('http://localhost:8000/api/tasks/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(taskData),\n            })\n            .then(response => {\n                if (!response.ok) {\n                    return response.json().then(errorData => {\n                        console.error('Error response:', errorData);\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    });\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log('Created task:', data);\n                handleClearAll();\n                onClose();\n                navigate('/board');\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.error('Fetch error:', error);\n            });\n        }\n    };\n\n    return (\n        <div className={`task-container ${show ? 'show' : ''}`}>\n            <div className=\"popup-content\">\n                <button className=\"close-button\" onClick={() => { onClose(); navigate('/board'); }}>&times;</button>\n                <div className=\"task-title-popup\">\n                    <h2>{taskToEdit ? 'Edit Task' : 'Add Task'}</h2>\n                </div>\n            </div>\n            <form className=\"task-form\" onSubmit={handleSubmit}>\n                <div className=\"form-left\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        value={title}\n                        onChange={e => setTitle(e.target.value)}\n                        placeholder=\"Enter a title\"\n                        className={formErrors.title ? 'error' : ''}\n                    />\n                    {formErrors.title && <div className=\"error-text\">This field is required</div>}\n                    <label>Description</label>\n                    <textarea\n                        value={description}\n                        onChange={e => setDescription(e.target.value)}\n                        placeholder=\"Enter a description\"\n                        className={formErrors.description ? 'error' : ''}\n                    ></textarea>\n                    {formErrors.description && <div className=\"error-text\">This field is required</div>}\n                    <label>Category</label>\n                    <select\n                        value={category}\n                        onChange={e => setCategory(e.target.value)}\n                        className={formErrors.category ? 'error' : ''}\n                    >\n                        <option value=\"\">Select task category</option>\n                        {categories.map(category => (\n                            <option key={category.id} value={category.id}>\n                                {category.name}\n                            </option>\n                        ))}\n                    </select>\n                    {formErrors.category && <div className=\"error-text\">This field is required</div>}\n                    <label>Assigned to</label>\n                    <select onChange={handleAssignContact}>\n                        <option value=\"\">Select contacts to assign</option>\n                        {users.map(user => (\n                            <option key={user.id} value={user.id} disabled={selectedContacts.some(c => c.id === user.id)}>\n                                {user.first_name} {user.last_name}\n                            </option>\n                        ))}\n                    </select>\n                    <ul className=\"assigned-contacts\">\n                        {assignedContacts.map(contact => (\n                            <li key={contact.id}>\n                                <div className=\"contact-info\">\n                                    <div\n                                        className=\"contact-initials\"\n                                        style={{ backgroundColor: contact.color }}\n                                    >\n                                        {contact.first_name.charAt(0).toUpperCase()}\n                                        {contact.last_name.charAt(0).toUpperCase()}\n                                    </div>\n                                    <span>{contact.first_name} {contact.last_name}</span>\n                                </div>\n                                <button\n                                    type=\"button\"\n                                    className=\"remove-contact\"\n                                    onClick={() => handleRemoveAssignedContact(contact.id)}\n                                >\n                                    <FontAwesomeIcon icon={faTimes} />\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"form-right\">\n                    <label>Due date</label>\n                    <Datetime\n                        value={dueDate}\n                        onChange={date => setDueDate(date)}\n                        dateFormat=\"DD/MM/YYYY\"\n                        timeFormat={false}\n                        inputProps={{ placeholder: 'Select due date' }}\n                    />\n                    <label>Prio</label>\n                    <div className=\"prio-buttons\">\n                        <button\n                            type=\"button\"\n                            className={`prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`}\n                            onClick={() => handleSelectPriority('urgent')}\n                        >\n                            Urgent\n                        </button>\n                        <button\n                            type=\"button\"\n                            className={`prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`}\n                            onClick={() => handleSelectPriority('medium')}\n                        >\n                            Medium\n                        </button>\n                        <button\n                            type=\"button\"\n                            className={`prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`}\n                            onClick={() => handleSelectPriority('low')}\n                        >\n                            Low\n                        </button>\n                    </div>\n                    <label>Subtasks</label>\n                    <div className=\"subtask-input\">\n                        <input\n                            type=\"text\"\n                            value={subtaskText}\n                            onChange={e => setSubtaskText(e.target.value)}\n                            placeholder=\"Add new subtask\"\n                        />\n                        <button type=\"button\" onClick={handleAddSubtask}>\n                            Add\n                        </button>\n                    </div>\n                    <ul className=\"subtask-list\">\n                        {subtasks.map((subtask, index) => (\n                            <li key={index} className={subtask.completed ? 'completed' : ''}>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={subtask.completed}\n                                    onChange={() => {\n                                        const updatedSubtasks = [...subtasks];\n                                        updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n                                        setSubtasks(updatedSubtasks);\n                                    }}\n                                />\n                                <span>{subtask.text}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                <div className=\"form-footer\">\n                    <button type=\"button\" className=\"clear-button\" onClick={handleClearAll}>\n                        Clear\n                    </button>\n                    <button type=\"submit\" className=\"create-button\">\n                        {taskToEdit ? 'Update Task' : 'Create Task'}\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}