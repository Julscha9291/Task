{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Task.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nconst Task = ({\n  show,\n  onClose,\n  createTask,\n  editTask,\n  taskToEdit\n}) => {\n  const navigate = useNavigate();\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n  const dummyContacts = [{\n    id: 1,\n    first_name: 'John',\n    last_name: 'Doe',\n    color: '#007bff'\n  }, {\n    id: 2,\n    first_name: 'Jane',\n    last_name: 'Smith',\n    color: '#28a745'\n  }, {\n    id: 3,\n    first_name: 'Michael',\n    last_name: 'Johnson',\n    color: '#dc3545'\n  }, {\n    id: 4,\n    first_name: 'Emily',\n    last_name: 'Davis',\n    color: '#ffc107'\n  }, {\n    id: 5,\n    first_name: 'David',\n    last_name: 'Brown',\n    color: '#17a2b8'\n  }];\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category);\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n    }\n  }, [taskToEdit]);\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      setAssignedContacts([...assignedContacts, selectedContact]);\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n    setAssignedContacts(updatedContacts);\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n    if (!title.trim()) {\n      errors = {\n        ...errors,\n        title: true\n      };\n    }\n    if (!description.trim()) {\n      errors = {\n        ...errors,\n        description: true\n      };\n    }\n    if (!category) {\n      errors = {\n        ...errors,\n        category: true\n      };\n    }\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    const taskData = {\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks: subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: assignedContacts.map(contact => ({\n        first_name: contact.first_name,\n        last_name: contact.last_name,\n        color: contact.color\n      }))\n    };\n    if (taskToEdit) {\n      // Edit existing task\n      fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Updated task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board'); // Redirect to the board\n        window.location.reload();\n      }).catch(error => {\n        console.error('Fetch error:', error);\n      });\n    } else {\n      // Create new task\n      fetch('http://localhost:8000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Created task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board'); // Redirect to the board\n        window.location.reload();\n      }).catch(error => {\n        console.error('Fetch error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `task-container ${show ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: () => {\n      onClose();\n      navigate('/board');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-title-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, taskToEdit ? 'Edit Task' : 'Add Task'))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Enter a title\",\n    className: formErrors.title ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }), formErrors.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 32\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Enter a description\",\n    className: formErrors.description ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }), formErrors.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 38\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    className: formErrors.category ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Select task category\"), categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n    key: category.id,\n    value: category.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, category.name))), formErrors.category && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 35\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"Assigned to\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Select contacts to assign\"), dummyContacts.map(contact => /*#__PURE__*/React.createElement(\"option\", {\n    key: contact.id,\n    value: contact.id,\n    disabled: assignedContacts.some(c => c.id === contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, contact.first_name, \" \", contact.last_name))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 19\n    }\n  }, contact.first_name.charAt(0).toUpperCase(), contact.last_name.charAt(0).toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, contact.first_name, \" \", contact.last_name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"remove-contact\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, \"Due date\"), /*#__PURE__*/React.createElement(Datetime, {\n    value: dueDate,\n    onChange: date => setDueDate(date),\n    dateFormat: \"DD/MM/YYYY\",\n    timeFormat: false,\n    inputProps: {\n      placeholder: 'Select due date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, \"Prio\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prio-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('urgent'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, \"Urgent\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('medium'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('low'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"Low\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 11\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtask-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    placeholder: \"Add new subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtask-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: subtask.completed ? 'completed' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: subtask.completed,\n    onChange: () => {\n      const updatedSubtasks = [...subtasks];\n      updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n      setSubtasks(updatedSubtasks);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }, subtask.text))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-button\",\n    onClick: handleClearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"create-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, taskToEdit ? 'Update Task' : 'Create Task'))));\n};\nexport default Task;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","useNavigate","faTimes","Datetime","Task","show","onClose","createTask","editTask","taskToEdit","navigate","categories","id","name","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","formErrors","setFormErrors","dummyContacts","first_name","last_name","color","due_date","Date","contacts","priority","handleAddSubtask","trim","text","completed","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","find","contact","some","handleRemoveAssignedContact","contactId","updatedContacts","filter","handleSelectPriority","handleClearAll","handleSubmit","e","preventDefault","errors","Object","keys","length","taskData","map","subtask","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","data","console","log","window","location","reload","catch","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","placeholder","key","disabled","c","style","backgroundColor","charAt","toUpperCase","icon","date","dateFormat","timeFormat","inputProps","index","checked","updatedSubtasks"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\n\nconst Task = ({ show, onClose, createTask, editTask, taskToEdit }) => {\n  const navigate = useNavigate();\n\n  const categories = [\n    { id: 'todo', name: 'To Do' },\n    { id: 'inProgress', name: 'In Progress' },\n    { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n    { id: 'done', name: 'Done' }\n  ];\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n\n  const dummyContacts = [\n    { id: 1, first_name: 'John', last_name: 'Doe', color: '#007bff' },\n    { id: 2, first_name: 'Jane', last_name: 'Smith', color: '#28a745' },\n    { id: 3, first_name: 'Michael', last_name: 'Johnson', color: '#dc3545' },\n    { id: 4, first_name: 'Emily', last_name: 'Davis', color: '#ffc107' },\n    { id: 5, first_name: 'David', last_name: 'Brown', color: '#17a2b8' }\n  ];\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category);\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n    }\n  }, [taskToEdit]);\n\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n      setSubtaskText('');\n    }\n  };\n\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = dummyContacts.find(contact => contact.id === selectedContactId);\n\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      setAssignedContacts([...assignedContacts, selectedContact]);\n    }\n  };\n\n  const handleRemoveAssignedContact = contactId => {\n    const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n    setAssignedContacts(updatedContacts);\n  };\n\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let errors = {};\n\n    if (!title.trim()) {\n      errors = { ...errors, title: true };\n    }\n    if (!description.trim()) {\n      errors = { ...errors, description: true };\n    }\n    if (!category) {\n      errors = { ...errors, category: true };\n    }\n\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n\n    const taskData = {\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks: subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: assignedContacts.map(contact => ({\n        first_name: contact.first_name,\n        last_name: contact.last_name,\n        color: contact.color\n      }))\n    };\n\n    if (taskToEdit) {\n      // Edit existing task\n      fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskData),\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Updated task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board'); // Redirect to the board\n        window.location.reload()\n      })\n      .catch((error) => {\n        console.error('Fetch error:', error);\n      });\n    } else {\n      // Create new task\n      fetch('http://localhost:8000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskData),\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Created task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board'); // Redirect to the board\n        window.location.reload()\n      })\n      .catch((error) => {\n        console.error('Fetch error:', error);\n      });\n    }\n  };\n\n  return (\n    <div className={`task-container ${show ? 'show' : ''}`}>\n      <div className=\"popup-content\">\n        <button className=\"close-button\" onClick={() => { onClose(); navigate('/board'); }}>&times;</button>\n        <div className=\"task-title-popup\">\n          <h2>{taskToEdit ? 'Edit Task' : 'Add Task'}</h2>\n        </div>\n      </div>\n      <form className=\"task-form\" onSubmit={handleSubmit}>\n        <div className=\"form-left\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            placeholder=\"Enter a title\"\n            className={formErrors.title ? 'error' : ''}\n          />\n          {formErrors.title && <div className=\"error-text\">This field is required</div>}\n          <label>Description</label>\n          <textarea\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            placeholder=\"Enter a description\"\n            className={formErrors.description ? 'error' : ''}\n          ></textarea>\n          {formErrors.description && <div className=\"error-text\">This field is required</div>}\n          <label>Category</label>\n          <select\n            value={category}\n            onChange={e => setCategory(e.target.value)}\n            className={formErrors.category ? 'error' : ''}\n          >\n            <option value=\"\">Select task category</option>\n            {categories.map(category => (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n          {formErrors.category && <div className=\"error-text\">This field is required</div>}\n          <label>Assigned to</label>\n          <select onChange={handleAssignContact}>\n            <option value=\"\">Select contacts to assign</option>\n            {dummyContacts.map(contact => (\n              <option key={contact.id} value={contact.id} disabled={assignedContacts.some(c => c.id === contact.id)}>\n                {contact.first_name} {contact.last_name}\n              </option>\n            ))}\n          </select>\n          <ul className=\"assigned-contacts\">\n            {assignedContacts.map(contact => (\n              <li key={contact.id}>\n                <div className=\"contact-info\">\n                  <div\n                    className=\"contact-initials\"\n                    style={{ backgroundColor: contact.color }}\n                  >\n                    {contact.first_name.charAt(0).toUpperCase()}\n                    {contact.last_name.charAt(0).toUpperCase()}\n                  </div>\n                  <span>{contact.first_name} {contact.last_name}</span>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"remove-contact\"\n                  onClick={() => handleRemoveAssignedContact(contact.id)}\n                >\n                  <FontAwesomeIcon icon={faTimes} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-right\">\n          <label>Due date</label>\n          <Datetime\n            value={dueDate}\n            onChange={date => setDueDate(date)}\n            dateFormat=\"DD/MM/YYYY\"\n            timeFormat={false}\n            inputProps={{ placeholder: 'Select due date' }}\n          />\n          <label>Prio</label>\n          <div className=\"prio-buttons\">\n            <button\n              type=\"button\"\n              className={`prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('urgent')}\n            >\n              Urgent\n            </button>\n            <button\n              type=\"button\"\n              className={`prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('medium')}\n            >\n              Medium\n            </button>\n            <button\n              type=\"button\"\n              className={`prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('low')}\n            >\n              Low\n            </button>\n          </div>\n          <label>Subtasks</label>\n          <div className=\"subtask-input\">\n            <input\n              type=\"text\"\n              value={subtaskText}\n              onChange={e => setSubtaskText(e.target.value)}\n              placeholder=\"Add new subtask\"\n            />\n            <button type=\"button\" onClick={handleAddSubtask}>\n              Add\n            </button>\n          </div>\n          <ul className=\"subtask-list\">\n            {subtasks.map((subtask, index) => (\n              <li key={index} className={subtask.completed ? 'completed' : ''}>\n                <input\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() => {\n                    const updatedSubtasks = [...subtasks];\n                    updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n                    setSubtasks(updatedSubtasks);\n                  }}\n                />\n                <span>{subtask.text}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-footer\">\n          <button type=\"button\" className=\"clear-button\" onClick={handleClearAll}>\n            Clear\n          </button>\n          <button type=\"submit\" className=\"create-button\">\n            {taskToEdit ? 'Update Task' : 'Create Task'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}