{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Task.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nimport PropTypes from 'prop-types';\nconst Task = ({\n  show,\n  onClose,\n  createTask,\n  editTask,\n  taskToEdit,\n  initialCategory\n}) => {\n  const navigate = useNavigate();\n  const categories = [{\n    id: 'todo',\n    name: 'To Do'\n  }, {\n    id: 'inProgress',\n    name: 'In Progress'\n  }, {\n    id: 'awaitingFeedback',\n    name: 'Awaiting Feedback'\n  }, {\n    id: 'done',\n    name: 'Done'\n  }];\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(initialCategory || '');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n  const [users, setUsers] = useState([]);\n  const [usedColors, setUsedColors] = useState({});\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/users/').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const contentType = response.headers.get('content-type');\n      if (contentType && contentType.indexOf('application/json') !== -1) {\n        return response.json();\n      } else {\n        throw new Error('Received non-JSON response');\n      }\n    }).then(data => {\n      console.log('Fetched users:', data); // Log the fetched users\n      setUsers(data); // Set users state with received JSON data\n    }).catch(error => {\n      console.error('Fetch error:', error);\n    });\n  }, []);\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category || ''); // Handle undefined category\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n    } else {\n      setCategory(initialCategory || ''); // Set category to an empty string if undefined\n    }\n  }, [taskToEdit, initialCategory]);\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, {\n        text: subtaskText,\n        completed: false\n      }]);\n      setSubtaskText('');\n    }\n  };\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = users.find(user => user.id === selectedContactId);\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      setAssignedContacts([...assignedContacts, selectedContact]);\n      setSelectedContacts([...selectedContacts, selectedContact]);\n      setUsedColors({\n        ...usedColors,\n        [selectedContact.color]: true\n      });\n      console.log('Assigned contact color:', selectedContact.color); // Log the color of the assigned contact\n    }\n  };\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const {\n        color\n      } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({\n        ...usedColors,\n        [color]: false\n      });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setUsedColors({});\n    setFormErrors({\n      title: false,\n      description: false,\n      category: false\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errors = {};\n    if (!title.trim()) {\n      errors = {\n        ...errors,\n        title: true\n      };\n    }\n    if (!description.trim()) {\n      errors = {\n        ...errors,\n        description: true\n      };\n    }\n    if (!category) {\n      errors = {\n        ...errors,\n        category: true\n      };\n    }\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n    const taskData = {\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks: subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: assignedContacts.map(contact => ({\n        id: contact.id,\n        // ID des Kontakts\n        first_name: contact.first_name,\n        last_name: contact.last_name,\n        color: contact.color\n      }))\n    };\n\n    // Check for invalid contact IDs\n    const invalidContacts = taskData.contacts.filter(contact => !contact.id);\n    if (invalidContacts.length > 0) {\n      console.error('Invalid contacts detected:', invalidContacts);\n      return; // Prevent form submission\n    }\n    console.log('Task data to send:', taskData);\n    if (taskToEdit) {\n      fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(errorData => {\n            console.error('Error response:', errorData);\n            throw new Error(`HTTP error! status: ${response.status}`);\n          });\n        }\n        return response.json();\n      }).then(data => {\n        console.log('Updated task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board'); // Redirect to the board\n        // window.location.reload();\n      }).catch(error => {\n        console.error('Fetch error:', error);\n      });\n    } else {\n      fetch('http://localhost:8000/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      }).then(response => {\n        if (!response.ok) {\n          return response.json().then(errorData => {\n            console.error('Error response:', errorData);\n            throw new Error(`HTTP error! status: ${response.status}`);\n          });\n        }\n        return response.json();\n      }).then(data => {\n        // window.location.reload();\n        console.log('Created task:', data);\n        handleClearAll();\n        onClose();\n        navigate('/board'); // Redirect to the board\n      }).catch(error => {\n        console.error('Fetch error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `task-container ${show ? 'show' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-button\",\n    onClick: () => {\n      onClose();\n      navigate('/board');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-title-popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, taskToEdit ? 'Edit Task' : 'Add Task'))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    placeholder: \"Enter a title\",\n    className: formErrors.title ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }), formErrors.title && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 32\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Enter a description\",\n    className: formErrors.description ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }), formErrors.description && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 38\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    className: formErrors.category ? 'error' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, \"Select task category\"), categories.map(cat => /*#__PURE__*/React.createElement(\"option\", {\n    key: cat.id,\n    value: cat.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, cat.name))), formErrors.category && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 35\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, \"Assigned to\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleAssignContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }, \"Select contacts to assign\"), users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.id,\n    value: user.id,\n    disabled: selectedContacts.some(c => c.id === user.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, user.first_name, \" \", user.last_name))), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 11\n    }\n  }, assignedContacts.map(contact => /*#__PURE__*/React.createElement(\"li\", {\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-info-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }\n  }, contact.first_name.charAt(0).toUpperCase(), contact.last_name.charAt(0).toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, contact.first_name, \" \", contact.last_name)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"remove-contact\",\n    onClick: () => handleRemoveAssignedContact(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTimes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, \"Due date\"), /*#__PURE__*/React.createElement(Datetime, {\n    value: dueDate,\n    onChange: date => setDueDate(date),\n    dateFormat: \"DD/MM/YYYY\",\n    timeFormat: false,\n    inputProps: {\n      placeholder: 'Select due date'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  }, \"Prio\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"prio-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('urgent'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }, \"Urgent\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('medium'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Medium\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: `prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`,\n    onClick: () => handleSelectPriority('low'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, \"Low\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, \"Subtasks\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"subtask-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: subtaskText,\n    onChange: e => setSubtaskText(e.target.value),\n    placeholder: \"Add new subtask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-button-add\",\n    onClick: handleAddSubtask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"subtask-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, subtasks.map((subtask, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: subtask.completed ? 'completed' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: subtask.completed,\n    onChange: () => {\n      const updatedSubtasks = [...subtasks];\n      updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n      setSubtasks(updatedSubtasks);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, subtask.text))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"clear-button\",\n    onClick: handleClearAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"create-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, taskToEdit ? 'Update Task' : 'Create Task'))));\n};\nTask.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  createTask: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n  taskToEdit: PropTypes.object,\n  initialCategory: PropTypes.string\n};\nexport default Task;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","useNavigate","faTimes","Datetime","PropTypes","Task","show","onClose","createTask","editTask","taskToEdit","initialCategory","navigate","categories","id","name","title","setTitle","description","setDescription","category","setCategory","dueDate","setDueDate","subtaskText","setSubtaskText","subtasks","setSubtasks","assignedContacts","setAssignedContacts","selectedPriority","setSelectedPriority","formErrors","setFormErrors","users","setUsers","usedColors","setUsedColors","selectedContacts","setSelectedContacts","fetch","then","response","ok","Error","status","contentType","headers","get","indexOf","json","data","console","log","catch","error","due_date","Date","contacts","priority","handleAddSubtask","trim","text","completed","handleAssignContact","event","selectedContactId","parseInt","target","value","selectedContact","find","user","some","contact","color","handleRemoveAssignedContact","contactId","removedContact","updatedContacts","filter","handleSelectPriority","handleClearAll","handleSubmit","e","preventDefault","errors","Object","keys","length","taskData","map","subtask","first_name","last_name","invalidContacts","method","body","JSON","stringify","errorData","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","placeholder","cat","key","disabled","c","style","backgroundColor","charAt","toUpperCase","icon","date","dateFormat","timeFormat","inputProps","index","checked","updatedSubtasks","propTypes","bool","isRequired","func","object","string"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport './Task.css';\nimport PropTypes from 'prop-types';\n\nconst Task = ({ show, onClose, createTask, editTask, taskToEdit, initialCategory }) => {\n  const navigate = useNavigate();\n\n  const categories = [\n    { id: 'todo', name: 'To Do' },\n    { id: 'inProgress', name: 'In Progress' },\n    { id: 'awaitingFeedback', name: 'Awaiting Feedback' },\n    { id: 'done', name: 'Done' }\n  ];\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(initialCategory || '');\n  const [dueDate, setDueDate] = useState(null);\n  const [subtaskText, setSubtaskText] = useState('');\n  const [subtasks, setSubtasks] = useState([]);\n  const [assignedContacts, setAssignedContacts] = useState([]);\n  const [selectedPriority, setSelectedPriority] = useState(null);\n  const [formErrors, setFormErrors] = useState({\n    title: false,\n    description: false,\n    category: false\n  });\n\n  const [users, setUsers] = useState([]);\n  const [usedColors, setUsedColors] = useState({});\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8000/api/users/')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.indexOf('application/json') !== -1) {\n          return response.json();\n        } else {\n          throw new Error('Received non-JSON response');\n        }\n      })\n      .then(data => {\n        console.log('Fetched users:', data); // Log the fetched users\n        setUsers(data); // Set users state with received JSON data\n      })\n      .catch(error => {\n        console.error('Fetch error:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setTitle(taskToEdit.title);\n      setDescription(taskToEdit.description);\n      setCategory(taskToEdit.category || ''); // Handle undefined category\n      setDueDate(taskToEdit.due_date ? new Date(taskToEdit.due_date) : null);\n      setSubtasks(taskToEdit.subtasks || []);\n      setAssignedContacts(taskToEdit.contacts || []);\n      setSelectedPriority(taskToEdit.priority || null);\n    } else {\n      setCategory(initialCategory || ''); // Set category to an empty string if undefined\n    }\n  }, [taskToEdit, initialCategory]);\n  \n  \n\n  const handleAddSubtask = () => {\n    if (subtaskText.trim()) {\n      setSubtasks([...subtasks, { text: subtaskText, completed: false }]);\n      setSubtaskText('');\n    }\n  };\n\n  const handleAssignContact = event => {\n    const selectedContactId = parseInt(event.target.value);\n    const selectedContact = users.find(user => user.id === selectedContactId);\n\n    if (selectedContact && !assignedContacts.some(contact => contact.id === selectedContact.id)) {\n      setAssignedContacts([...assignedContacts, selectedContact]);\n      setSelectedContacts([...selectedContacts, selectedContact]);\n      setUsedColors({ ...usedColors, [selectedContact.color]: true });\n      console.log('Assigned contact color:', selectedContact.color); // Log the color of the assigned contact\n    }\n  };\n\n  const handleRemoveAssignedContact = contactId => {\n    const removedContact = assignedContacts.find(contact => contact.id === contactId);\n    if (removedContact) {\n      const { color } = removedContact;\n      const updatedContacts = assignedContacts.filter(contact => contact.id !== contactId);\n      setAssignedContacts(updatedContacts);\n      setUsedColors({ ...usedColors, [color]: false });\n      setSelectedContacts(selectedContacts.filter(contact => contact.id !== contactId));\n    }\n  };\n\n  const handleSelectPriority = priority => {\n    setSelectedPriority(priority);\n  };\n\n  const handleClearAll = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setDueDate(null);\n    setSubtaskText('');\n    setSubtasks([]);\n    setAssignedContacts([]);\n    setSelectedPriority(null);\n    setUsedColors({});\n    setFormErrors({\n        title: false,\n        description: false,\n        category: false\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let errors = {};\n\n    if (!title.trim()) {\n      errors = { ...errors, title: true };\n    }\n    if (!description.trim()) {\n      errors = { ...errors, description: true };\n    }\n    if (!category) {\n      errors = { ...errors, category: true };\n    }\n\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors);\n      return;\n    }\n\n    const taskData = {\n      title,\n      description,\n      category,\n      due_date: dueDate,\n      priority: selectedPriority,\n      subtasks: subtasks.map(subtask => ({\n          text: subtask.text,\n          completed: subtask.completed\n      })),\n      contacts: assignedContacts.map(contact => ({\n        id: contact.id,  // ID des Kontakts\n        first_name: contact.first_name,\n        last_name: contact.last_name,\n        color: contact.color\n      }))\n    };\n\n    // Check for invalid contact IDs\n    const invalidContacts = taskData.contacts.filter(contact => !contact.id);\n    if (invalidContacts.length > 0) {\n      console.error('Invalid contacts detected:', invalidContacts);\n      return; // Prevent form submission\n    }\n\n    console.log('Task data to send:', taskData);\n\n    if (taskToEdit) {\n      fetch(`http://localhost:8000/api/tasks/${taskToEdit.id}/`, {\n          method: 'PUT',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(taskData),\n      })\n      .then(response => {\n          if (!response.ok) {\n              return response.json().then(errorData => {\n                  console.error('Error response:', errorData);\n                  throw new Error(`HTTP error! status: ${response.status}`);\n              });\n          }\n          return response.json();\n      })\n      .then(data => {\n          console.log('Updated task:', data);\n          handleClearAll();\n          onClose();\n          navigate('/board'); // Redirect to the board\n         // window.location.reload();\n      })\n      .catch((error) => {\n          console.error('Fetch error:', error);\n      });\n    } else {\n      fetch('http://localhost:8000/api/tasks/', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(taskData),\n      })\n      .then(response => {\n          if (!response.ok) {\n              return response.json().then(errorData => {\n                  console.error('Error response:', errorData);\n                  throw new Error(`HTTP error! status: ${response.status}`);\n              });\n          }\n          return response.json();\n      })\n      .then(data => {\n         // window.location.reload();\n          console.log('Created task:', data);\n          handleClearAll();\n          onClose();\n          navigate('/board'); // Redirect to the board\n         \n      })\n      .catch((error) => {\n          console.error('Fetch error:', error);\n      });\n    }\n  };\n\n  return (\n    <div className={`task-container ${show ? 'show' : ''}`}>\n      <div className=\"popup-content\">\n        <button className=\"close-button\" onClick={() => { onClose(); navigate('/board'); }}>&times;</button>\n        <div className=\"task-title-popup\">\n          <h2>{taskToEdit ? 'Edit Task' : 'Add Task'}</h2>\n        </div>\n      </div>\n      <form className=\"task-form\" onSubmit={handleSubmit}>\n        <div className=\"form-left\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            placeholder=\"Enter a title\"\n            className={formErrors.title ? 'error' : ''}\n          />\n          {formErrors.title && <div className=\"error-text\">This field is required</div>}\n          <label>Description</label>\n          <textarea\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            placeholder=\"Enter a description\"\n            className={formErrors.description ? 'error' : ''}\n          ></textarea>\n          {formErrors.description && <div className=\"error-text\">This field is required</div>}\n          <label>Category</label>\n          <select\n              value={category}\n              onChange={e => setCategory(e.target.value)}\n              className={formErrors.category ? 'error' : ''}\n            >\n              <option value=\"\">Select task category</option>\n              {categories.map(cat => (\n                <option key={cat.id} value={cat.id}>\n                  {cat.name}\n                </option>\n              ))}\n            </select>\n          {formErrors.category && <div className=\"error-text\">This field is required</div>}\n          <label>Assigned to</label>\n          <select onChange={handleAssignContact}>\n            <option value=\"\">Select contacts to assign</option>\n            {users.map(user => (\n              <option key={user.id} value={user.id} disabled={selectedContacts.some(c => c.id === user.id)}>\n                {user.first_name} {user.last_name}\n              </option>\n            ))}\n          </select>\n          <ul className=\"assigned-contacts\">\n            {assignedContacts.map(contact => (\n              <li key={contact.id}>\n                <div className=\"contact-info-task\">\n                  <div\n                    className=\"contact-initials\"\n                    style={{ backgroundColor: contact.color  }}\n                  >\n                    {contact.first_name.charAt(0).toUpperCase()}\n                    {contact.last_name.charAt(0).toUpperCase()}\n                  </div>\n                  <span>{contact.first_name} {contact.last_name}</span>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"remove-contact\"\n                  onClick={() => handleRemoveAssignedContact(contact.id)}\n                >\n                  <FontAwesomeIcon icon={faTimes} />\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-right\">\n          <label>Due date</label>\n          <Datetime\n            value={dueDate}\n            onChange={date => setDueDate(date)}\n            dateFormat=\"DD/MM/YYYY\"\n            timeFormat={false}\n            inputProps={{ placeholder: 'Select due date' }}\n          />\n          <label>Prio</label>\n          <div className=\"prio-buttons\">\n            <button\n              type=\"button\"\n              className={`prio-button urgent ${selectedPriority === 'urgent' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('urgent')}\n            >\n              Urgent\n            </button>\n            <button\n              type=\"button\"\n              className={`prio-button medium ${selectedPriority === 'medium' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('medium')}\n            >\n              Medium\n            </button>\n            <button\n              type=\"button\"\n              className={`prio-button low ${selectedPriority === 'low' ? 'selected' : ''}`}\n              onClick={() => handleSelectPriority('low')}\n            >\n              Low\n            </button>\n          </div>\n          <label>Subtasks</label>\n          <div className=\"subtask-input\">\n            <input\n              type=\"text\"\n              value={subtaskText}\n              onChange={e => setSubtaskText(e.target.value)}\n              placeholder=\"Add new subtask\"\n            />\n            <button type=\"button\" className=\"clear-button-add\" onClick={handleAddSubtask}>\n              Add\n            </button>\n          </div>\n          <ul className=\"subtask-list\">\n            {subtasks.map((subtask, index) => (\n              <li key={index} className={subtask.completed ? 'completed' : ''}>\n                <input\n                  type=\"checkbox\"\n                  checked={subtask.completed}\n                  onChange={() => {\n                    const updatedSubtasks = [...subtasks];\n                    updatedSubtasks[index].completed = !updatedSubtasks[index].completed;\n                    setSubtasks(updatedSubtasks);\n                  }}\n                />\n                <span>{subtask.text}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"form-footer\">\n          <button type=\"button\" className=\"clear-button\" onClick={handleClearAll}>\n            Clear\n          </button>\n          <button type=\"submit\" className=\"create-button\">\n            {taskToEdit ? 'Update Task' : 'Create Task'}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n\nTask.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  createTask: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n  taskToEdit: PropTypes.object,\n  initialCategory: PropTypes.string,\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}