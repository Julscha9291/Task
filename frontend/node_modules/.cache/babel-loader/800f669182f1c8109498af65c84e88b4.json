{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Board.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\nimport TaskDetailsPopup from './TaskDetailsPopup';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\nconst Board = () => {\n  const navigate = useNavigate();\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    awaitingFeedback: [],\n    done: []\n  });\n  const [showTask, setShowTask] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const [category, setCategory] = useState('');\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}api/tasks/`);\n      if (!response.ok) {\n        throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo'),\n        inProgress: data.filter(task => task.category === 'inProgress'),\n        awaitingFeedback: data.filter(task => task.category === 'awaitingFeedback'),\n        done: data.filter(task => task.category === 'done')\n      };\n      setTasks(formattedTasks);\n    } catch (error) {}\n  };\n  const toggleTask = (category = '') => {\n    navigate('/task');\n    setShowTask(!showTask);\n    if (category.trim() === '') {\n      return;\n    }\n    setCategory(category);\n  };\n  const createTask = async taskData => {\n    try {\n      const response = await fetch('https://task.julianschaepermeier.com/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(taskData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      await fetchTasks(); // Aktualisiere die Aufgabenliste\n      setShowTask(false);\n    } catch (error) {}\n  };\n  const openTaskDetails = task => {\n    setSelectedTask(task);\n    setIsEdit(false);\n  };\n  const closeTaskDetails = () => {\n    setSelectedTask(null);\n    setShowTask(false);\n    setIsEdit(false);\n  };\n  const handleEditTask = editedTask => {\n    const taskData = {\n      title: editedTask.title,\n      description: editedTask.description,\n      category: editedTask.category,\n      due_date: editedTask.due_date,\n      priority: editedTask.priority,\n      subtasks: editedTask.subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: editedTask.contacts.map(contact => ({\n        id: contact.id,\n        name: contact.name\n      }))\n    };\n    fetch(`${process.env.REACT_APP_API_URL}api/tasks/${editedTask.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(taskData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setTasks(prevTasks => {\n        const updatedTasks = {\n          ...prevTasks\n        };\n        updatedTasks[data.category] = updatedTasks[data.category].map(task => task.id === data.id ? data : task);\n        return updatedTasks;\n      });\n      setSelectedTask(null);\n      setIsEdit(false);\n    }).catch(error => {});\n  };\n  const handleDeleteTask = taskId => {\n    fetch(`${process.env.REACT_APP_API_URL}api/tasks/${taskId}/`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n      }\n      setTasks(prevTasks => {\n        const updatedTasks = {\n          ...prevTasks\n        };\n        for (const category in updatedTasks) {\n          updatedTasks[category] = updatedTasks[category].filter(task => task.id !== taskId);\n        }\n        return updatedTasks;\n      });\n      setSelectedTask(null);\n    }).catch(error => {});\n  };\n  const renderTasks = taskList => {\n    return taskList.map((task, index) => /*#__PURE__*/React.createElement(Draggable, {\n      key: task.id,\n      draggableId: task.id.toString(),\n      index: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, provided => {\n      var _task$priority;\n      return /*#__PURE__*/React.createElement(\"li\", Object.assign({\n        className: \"task\",\n        onClick: () => openTaskDetails(task),\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, task.title, /*#__PURE__*/React.createElement(\"button\", {\n        className: `priority-button ${((_task$priority = task.priority) === null || _task$priority === void 0 ? void 0 : _task$priority.toLowerCase()) || 'low'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, task.priority || 'Low')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"assigned-contacts-board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, task.contacts && task.contacts.slice(0, 3).map(contact => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contact-initials-board\",\n        style: {\n          backgroundColor: contact.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 8\n        }\n      }, contact.first_name && contact.last_name ? `${contact.first_name.charAt(0).toUpperCase()}${contact.last_name.charAt(0).toUpperCase()}` : '')), task.contacts.length > 3 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"contact-initials\",\n        style: {\n          backgroundColor: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }\n      }, \"+\", task.contacts.length - 3)), task.subtasks.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtask-progress\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }\n      }, `${task.subtasks.filter(subtask => subtask.completed).length}/${task.subtasks.length}`, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtask-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"subtask-progress-fill\",\n        style: {\n          width: `${task.subtasks.filter(subtask => subtask.completed).length / task.subtasks.length * 100}%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 19\n        }\n      }))));\n    }));\n  };\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const start = tasks[source.droppableId];\n    const finish = tasks[destination.droppableId];\n    if (start === finish) {\n      const newTaskIds = Array.from(start);\n      const [movedTask] = newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, movedTask);\n      const newTasks = {\n        ...tasks,\n        [source.droppableId]: newTaskIds\n      };\n      setTasks(newTasks);\n      return;\n    }\n    const startTaskIds = Array.from(start);\n    const [movedTask] = startTaskIds.splice(source.index, 1);\n    const finishTaskIds = Array.from(finish);\n    finishTaskIds.splice(destination.index, 0, movedTask);\n    const newTasks = {\n      ...tasks,\n      [source.droppableId]: startTaskIds,\n      [destination.droppableId]: finishTaskIds\n    };\n    setTasks(newTasks);\n    const updatedTaskData = {\n      category: destination.droppableId\n    };\n    fetch(`${process.env.REACT_APP_API_URL}/api/tasks/${draggableId}/`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTaskData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(err => {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        });\n      }\n      return response.json();\n    }).then(data => {}).catch(error => {});\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 8\n    }\n  }, \"Board Tasks\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"new-task-button\",\n    onClick: () => toggleTask(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    className: \"navbar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, \"Add new Task\")), /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kanban-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }, Object.keys(tasks).map(category => /*#__PURE__*/React.createElement(Droppable, {\n    key: category,\n    droppableId: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, provided => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"board-column\",\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"column-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, category.replace(/([A-Z])/g, ' $1')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, renderTasks(tasks[category]), provided.placeholder))))), /*#__PURE__*/React.createElement(TaskDetailsPopup, {\n    task: selectedTask,\n    onClose: closeTaskDetails,\n    onEdit: () => setIsEdit(true),\n    onDelete: handleDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Task, {\n    show: showTask || isEdit,\n    onClose: closeTaskDetails,\n    createTask: createTask,\n    editTask: handleEditTask,\n    taskToEdit: isEdit ? selectedTask : null,\n    initialCategory: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  })));\n};\nexport default Board;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","Task","TaskDetailsPopup","DragDropContext","Droppable","Draggable","useNavigate","Board","navigate","tasks","setTasks","todo","inProgress","awaitingFeedback","done","showTask","setShowTask","selectedTask","setSelectedTask","isEdit","setIsEdit","category","setCategory","fetchTasks","response","fetch","process","env","REACT_APP_API_URL","ok","Error","status","data","json","formattedTasks","filter","task","error","toggleTask","trim","createTask","taskData","method","headers","body","JSON","stringify","openTaskDetails","closeTaskDetails","handleEditTask","editedTask","title","description","due_date","priority","subtasks","map","subtask","text","completed","contacts","contact","id","name","then","prevTasks","updatedTasks","catch","handleDeleteTask","taskId","renderTasks","taskList","index","createElement","key","draggableId","toString","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","provided","_task$priority","Object","assign","className","onClick","ref","innerRef","draggableProps","dragHandleProps","toLowerCase","slice","style","backgroundColor","color","first_name","last_name","charAt","toUpperCase","length","width","onDragEnd","result","destination","source","droppableId","start","finish","newTaskIds","Array","from","movedTask","splice","newTasks","startTaskIds","finishTaskIds","updatedTaskData","err","icon","keys","droppableProps","replace","placeholder","onClose","onEdit","onDelete","show","editTask","taskToEdit","initialCategory"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\nimport TaskDetailsPopup from './TaskDetailsPopup';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useNavigate } from 'react-router-dom';\n\nconst Board = () => {\n  const navigate = useNavigate();\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    awaitingFeedback: [],\n    done: [],\n  });\n\n  const [showTask, setShowTask] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isEdit, setIsEdit] = useState(false);\n  const [category, setCategory] = useState(''); \n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}api/tasks/`);\n      if (!response.ok) {\n        throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo'),\n        inProgress: data.filter(task => task.category === 'inProgress'),\n        awaitingFeedback: data.filter(task => task.category === 'awaitingFeedback'),\n        done: data.filter(task => task.category === 'done'),\n      };\n      setTasks(formattedTasks);\n    } catch (error) {\n    }\n  };\n\n  const toggleTask = (category = '') => {\n    navigate('/task');\n    setShowTask(!showTask);\n    if (category.trim() === '') {\n      return;\n    }\n    setCategory(category); \n  };\n  \n  \n  const createTask = async (taskData) => {\n    try {\n      const response = await fetch('https://task.julianschaepermeier.com/api/tasks/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(taskData),\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      await fetchTasks(); // Aktualisiere die Aufgabenliste\n      setShowTask(false);\n    } catch (error) {\n    }\n  };\n  \n  const openTaskDetails = (task) => {\n    setSelectedTask(task);\n    setIsEdit(false);\n  };\n\n  const closeTaskDetails = () => {\n    setSelectedTask(null);\n    setShowTask(false);\n    setIsEdit(false);\n  };\n\n  const handleEditTask = (editedTask) => {\n    const taskData = {\n      title: editedTask.title,\n      description: editedTask.description,\n      category: editedTask.category,\n      due_date: editedTask.due_date,\n      priority: editedTask.priority,\n      subtasks: editedTask.subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed,\n      })),\n      contacts: editedTask.contacts.map(contact => ({\n        id: contact.id,\n        name: contact.name\n      }))\n    };\n  \n    fetch(`${process.env.REACT_APP_API_URL}api/tasks/${editedTask.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(taskData),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      setTasks(prevTasks => {\n        const updatedTasks = { ...prevTasks };\n        updatedTasks[data.category] = updatedTasks[data.category].map(task => \n          task.id === data.id ? data : task\n        );\n        return updatedTasks;\n      });\n      setSelectedTask(null);\n      setIsEdit(false);\n    })\n    .catch((error) => {\n    });\n  };\n\n  const handleDeleteTask = (taskId) => {\n    fetch(`${process.env.REACT_APP_API_URL}api/tasks/${taskId}/`, {\n      method: 'DELETE',\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n      }\n      setTasks(prevTasks => {\n        const updatedTasks = { ...prevTasks };\n        for (const category in updatedTasks) {\n          updatedTasks[category] = updatedTasks[category].filter(task => task.id !== taskId);\n        }\n        return updatedTasks;\n      });\n      setSelectedTask(null);\n    })\n    .catch(error => {\n    });\n  };\n  \n\n  const renderTasks = (taskList) => {\n    return taskList.map((task, index) => (\n      <Draggable key={task.id} draggableId={task.id.toString()} index={index}>\n        {(provided) => (\n          <li\n            className=\"task\"\n            onClick={() => openTaskDetails(task)}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <div className=\"task-title\">\n              {task.title}\n              <button className={`priority-button ${task.priority?.toLowerCase() || 'low'}`}>\n                {task.priority || 'Low'}\n              </button>\n            </div>\n            <div className=\"task-content\">{task.description}</div>\n            <div className=\"assigned-contacts-board\">\n              {task.contacts && task.contacts.slice(0, 3).map(contact => (\n       <div className=\"contact-initials-board\" style={{ backgroundColor: contact.color }}>\n       {contact.first_name && contact.last_name\n         ? `${contact.first_name.charAt(0).toUpperCase()}${contact.last_name.charAt(0).toUpperCase()}`\n         : ''}\n     </div>\n              ))}\n              {task.contacts.length > 3 && (\n                <div className=\"contact-initials\" style={{ backgroundColor: 'grey' }}>\n                  +{task.contacts.length - 3}\n                </div>\n              )}\n            </div>\n            {task.subtasks.length > 0 && (\n              <div className=\"subtask-progress\">\n                {`${task.subtasks.filter(subtask => subtask.completed).length}/${task.subtasks.length}`}\n                <div className=\"subtask-bar\">\n                  <div className=\"subtask-progress-fill\" style={{ width: `${(task.subtasks.filter(subtask => subtask.completed).length / task.subtasks.length) * 100}%` }}></div>\n                </div>\n              </div>\n            )}\n          </li>\n        )}\n      </Draggable>\n    ));\n  };\n\n  const onDragEnd = (result) => {\n    const { destination, source, draggableId } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    const start = tasks[source.droppableId];\n    const finish = tasks[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskIds = Array.from(start);\n      const [movedTask] = newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, movedTask);\n\n      const newTasks = {\n        ...tasks,\n        [source.droppableId]: newTaskIds,\n      };\n\n      setTasks(newTasks);\n      return;\n    }\n\n    const startTaskIds = Array.from(start);\n    const [movedTask] = startTaskIds.splice(source.index, 1);\n    const finishTaskIds = Array.from(finish);\n    finishTaskIds.splice(destination.index, 0, movedTask);\n\n    const newTasks = {\n      ...tasks,\n      [source.droppableId]: startTaskIds,\n      [destination.droppableId]: finishTaskIds,\n    };\n\n    setTasks(newTasks);\n\n    const updatedTaskData = {\n      category: destination.droppableId,\n    };\n\n    fetch(`${process.env.REACT_APP_API_URL}/api/tasks/${draggableId}/`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedTaskData),\n    })\n    .then(response => {\n      if (!response.ok) {\n        return response.json().then(err => {\n          throw new Error(`HTTP-Fehler! Status: ${response.status}`);\n        });\n      }\n      return response.json();\n    })\n    .then(data => {\n    })\n    .catch((error) => {\n    });\n  };\n\n  return (\n    <div className=\"board-container\">\n       <div className=\"header-board\">\n        Board Tasks\n      </div>\n\n    <button className=\"new-task-button\" onClick={() => toggleTask('')}>\n      <FontAwesomeIcon icon={faPlus} className=\"navbar-icon\" />\n      <p className=\"add-text\">Add new Task</p>\n    </button>\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"kanban-board\">\n        {Object.keys(tasks).map(category => (\n          <Droppable key={category} droppableId={category}>\n            {(provided) => (\n              <div className=\"board-column\" ref={provided.innerRef} {...provided.droppableProps}>\n              <h3 className=\"column-title\">{category.replace(/([A-Z])/g, ' $1')}</h3>\n              <ul className=\"task-list\">\n                  {renderTasks(tasks[category])}\n                  {provided.placeholder}\n              </ul>\n          </div>\n            )}\n          </Droppable>\n        ))}\n      </div>\n      <TaskDetailsPopup task={selectedTask} onClose={closeTaskDetails} onEdit={() => setIsEdit(true)} onDelete={handleDeleteTask} />\n      <Task \n        show={showTask || isEdit} \n        onClose={closeTaskDetails} \n        createTask={createTask} \n        editTask={handleEditTask} \n        taskToEdit={isEdit ? selectedTask : null} \n        initialCategory={category}  \n/>\n\n      </DragDropContext>\n      </div>\n  );\n};\n\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}