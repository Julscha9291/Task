{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Board.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\nconst Board = () => {\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    awaitingFeedback: [],\n    done: []\n  });\n  const [showTask, setShowTask] = useState(false);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('/api/tasks/'); // assuming the endpoint is /api/tasks/\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo').sort((a, b) => new Date(b.id) - new Date(a.id)),\n        inProgress: data.filter(task => task.category === 'inProgress').sort((a, b) => new Date(b.id) - new Date(a.id)),\n        awaitingFeedback: data.filter(task => task.category === 'awaitingFeedback').sort((a, b) => new Date(b.id) - new Date(a.id)),\n        done: data.filter(task => task.category === 'done').sort((a, b) => new Date(b.id) - new Date(a.id))\n      };\n      setTasks(formattedTasks);\n    } catch (error) {\n      console.error('Error fetching tasks:', error.message);\n      // Log the error response text if available\n      try {\n        const errorText = await error.text();\n        console.error('Error response text:', errorText);\n      } catch (err) {\n        console.error('Unable to read error response text');\n      }\n    }\n  };\n  const toggleTask = () => {\n    setShowTask(!showTask);\n  };\n  const createTask = (title, content, category) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      contacts: []\n    };\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [category]: [newTask, ...prevTasks[category]] // Add new task at the beginning of the list\n    }));\n    setShowTask(false); // Close the Task dialog after creating a task\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kanban-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, Object.keys(tasks).map(category => /*#__PURE__*/React.createElement(\"div\", {\n    key: category,\n    className: \"board-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-button\",\n    onClick: toggleTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    className: \"navbar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"column-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, category.replace(/([A-Z])/g, ' $1')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, tasks[category].map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    className: \"task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, task.title, /*#__PURE__*/React.createElement(\"button\", {\n    className: `priority-button ${task.priority.toLowerCase()}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, task.priority)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"task-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"assigned-contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, task.contacts && task.contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n    key: contact.id,\n    className: \"contact-initial\",\n    style: {\n      backgroundColor: contact.color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, contact.name[0])))))))), /*#__PURE__*/React.createElement(Task, {\n    show: showTask,\n    onClose: toggleTask,\n    createTask: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Board;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","Task","Board","tasks","setTasks","todo","inProgress","awaitingFeedback","done","showTask","setShowTask","fetchTasks","response","fetch","ok","Error","status","data","json","formattedTasks","filter","task","category","sort","a","b","Date","id","error","console","message","errorText","text","err","toggleTask","createTask","title","content","newTask","now","contacts","prevTasks","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","onClick","icon","replace","priority","toLowerCase","description","contact","style","backgroundColor","color","name","show","onClose"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\n\nconst Board = () => {\n  const [tasks, setTasks] = useState({\n    todo: [],\n    inProgress: [],\n    awaitingFeedback: [],\n    done: [],\n  });\n\n  const [showTask, setShowTask] = useState(false);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('/api/tasks/'); // assuming the endpoint is /api/tasks/\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo').sort((a, b) => new Date(b.id) - new Date(a.id)),\n        inProgress: data.filter(task => task.category === 'inProgress').sort((a, b) => new Date(b.id) - new Date(a.id)),\n        awaitingFeedback: data.filter(task => task.category === 'awaitingFeedback').sort((a, b) => new Date(b.id) - new Date(a.id)),\n        done: data.filter(task => task.category === 'done').sort((a, b) => new Date(b.id) - new Date(a.id)),\n      };\n      setTasks(formattedTasks);\n    } catch (error) {\n      console.error('Error fetching tasks:', error.message);\n      // Log the error response text if available\n      try {\n        const errorText = await error.text();\n        console.error('Error response text:', errorText);\n      } catch (err) {\n        console.error('Unable to read error response text');\n      }\n    }\n  };\n\n  const toggleTask = () => {\n    setShowTask(!showTask);\n  };\n\n  const createTask = (title, content, category) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      contacts: [],\n    };\n\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [category]: [newTask, ...prevTasks[category]], // Add new task at the beginning of the list\n    }));\n    setShowTask(false);  // Close the Task dialog after creating a task\n  };\n\n  return (\n    <div className=\"kanban-board\">\n      {Object.keys(tasks).map((category) => (\n        <div key={category} className=\"board-column\">\n          <div className=\"add-button\" onClick={toggleTask}>\n            <FontAwesomeIcon icon={faPlus} className=\"navbar-icon\" />\n            <p className=\"add-text\">Add</p>\n          </div>\n          <h3 className=\"column-title\">{category.replace(/([A-Z])/g, ' $1')}</h3>\n          <ul className=\"task-list\">\n            {tasks[category].map(task => (\n              <li key={task.id} className=\"task\">\n                <div className=\"task-title\">\n                  {task.title}\n                  <button className={`priority-button ${task.priority.toLowerCase()}`}>{task.priority}</button>\n                </div>\n                <div className=\"task-content\">{task.description}</div>\n                <div className=\"assigned-contacts\">\n                  {task.contacts && task.contacts.map(contact => (\n                    <div key={contact.id} className=\"contact-initial\" style={{ backgroundColor: contact.color }}>\n                      {contact.name[0]}\n                    </div>\n                  ))}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n      <Task show={showTask} onClose={toggleTask} createTask={createTask} />\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}