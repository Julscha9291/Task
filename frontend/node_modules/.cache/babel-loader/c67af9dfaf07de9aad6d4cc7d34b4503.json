{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Board.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\nimport TaskDetailsPopup from './TaskDetailsPopup';\nconst Board = ({\n  onClose,\n  handleClearAll\n}) => {\n  const [tasks, setTasks] = useState({\n    todo: [],\n    'In Progress': [],\n    'awaiting Feedback': [],\n    done: []\n  });\n  const [showTask, setShowTask] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/tasks/');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo'),\n        'In Progress': data.filter(task => task.category === 'inProgress'),\n        'awaiting Feedback': data.filter(task => task.category === 'awaitingFeedback'),\n        done: data.filter(task => task.category === 'done')\n      };\n      setTasks(formattedTasks);\n    } catch (error) {\n      console.error('Error fetching tasks:', error.message);\n    }\n  };\n  const toggleTask = () => {\n    setShowTask(!showTask);\n  };\n  const createTask = (title, content, category) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      contacts: []\n    };\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [category]: [newTask, ...prevTasks[category]]\n    }));\n    setShowTask(false);\n  };\n  const openTaskDetails = task => {\n    setSelectedTask(task);\n  };\n  const closeTaskDetails = () => {\n    setSelectedTask(null);\n  };\n  const handleEditTask = editedTask => {\n    const taskData = {\n      title: editedTask.title,\n      description: editedTask.description,\n      category: editedTask.category,\n      due_date: editedTask.due_date,\n      priority: editedTask.priority,\n      subtasks: editedTask.subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed\n      })),\n      contacts: editedTask.contacts.map(contact => ({\n        id: contact.id,\n        name: contact.name\n      }))\n    };\n    fetch(`http://localhost:8000/api/tasks/${editedTask.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(taskData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Updated task:', data);\n      // Update the state to reflect the edited task\n      const updatedTasksData = updatedTasks(tasks, editedTask);\n      setTasks(updatedTasksData);\n    }).catch(error => {\n      console.error('Fetch error:', error);\n      // Console log the detailed error message from the server response\n      if (error.response) {\n        error.response.json().then(data => console.error(data));\n      } else {\n        console.error('No detailed error message available.');\n      }\n    });\n  };\n  const handleDeleteTask = taskId => {\n    // Implement delete logic here\n    console.log('Delete task with ID:', taskId);\n  };\n  const updatedTasks = (tasks, editedTask) => {\n    // Überprüfe, ob die tasks oder editedTask null oder undefiniert sind\n    if (!tasks || !editedTask) {\n      return tasks;\n    }\n\n    // Kopiere die tasks, um sie nicht direkt zu verändern\n    const updatedTasks = {\n      ...tasks\n    };\n\n    // Finde die Kategorie des bearbeiteten Tasks\n    const categoryTasks = updatedTasks[editedTask.category];\n\n    // Falls die Kategorie nicht existiert, gibt es nichts zu aktualisieren\n    if (!categoryTasks) {\n      return tasks;\n    }\n\n    // Finde den bearbeiteten Task in der Kategorie und aktualisiere ihn\n    const updatedCategoryTasks = categoryTasks.map(task => task.id === editedTask.id ? editedTask : task);\n\n    // Aktualisiere die Kategorie in den gesamten Aufgaben\n    updatedTasks[editedTask.category] = updatedCategoryTasks;\n    return updatedTasks;\n  };\n  const renderTasks = taskList => {\n    return taskList.map(task => {\n      var _task$priority;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: task.id,\n        className: \"task\",\n        onClick: () => openTaskDetails(task),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      }, task.title, /*#__PURE__*/React.createElement(\"button\", {\n        className: `priority-button ${((_task$priority = task.priority) === null || _task$priority === void 0 ? void 0 : _task$priority.toLowerCase()) || 'low'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, task.priority || 'Low')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }, task.description), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"assigned-contacts-board\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, task.contacts && task.contacts.map(contact => /*#__PURE__*/React.createElement(\"div\", {\n        key: contact.id,\n        className: \"contact-initials\",\n        style: {\n          backgroundColor: contact.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, contact.name.split(' ').map(part => part.charAt(0)).join('').toUpperCase()))));\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kanban-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, ['todo', 'In Progress', 'awaiting Feedback', 'done'].map(category => /*#__PURE__*/React.createElement(\"div\", {\n    key: category,\n    className: \"board-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-button\",\n    onClick: toggleTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    className: \"navbar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"add-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"column-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, category.replace(/([A-Z])/g, ' $1')), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"task-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, renderTasks(tasks[category])))), /*#__PURE__*/React.createElement(TaskDetailsPopup, {\n    task: selectedTask,\n    onClose: closeTaskDetails,\n    onEdit: handleEditTask,\n    onDelete: handleDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Task, {\n    show: showTask,\n    onClose: toggleTask,\n    createTask: createTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Board;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlus","Task","TaskDetailsPopup","Board","onClose","handleClearAll","tasks","setTasks","todo","done","showTask","setShowTask","selectedTask","setSelectedTask","fetchTasks","response","fetch","ok","Error","status","data","json","formattedTasks","filter","task","category","error","console","message","toggleTask","createTask","title","content","newTask","id","Date","now","contacts","prevTasks","openTaskDetails","closeTaskDetails","handleEditTask","editedTask","taskData","description","due_date","priority","subtasks","map","subtask","text","completed","contact","name","method","headers","body","JSON","stringify","then","log","updatedTasksData","updatedTasks","catch","handleDeleteTask","taskId","categoryTasks","updatedCategoryTasks","renderTasks","taskList","_task$priority","createElement","key","className","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","style","backgroundColor","color","split","part","charAt","join","toUpperCase","icon","replace","onEdit","onDelete","show"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Board.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './Board.css';\nimport Task from './Task';\nimport TaskDetailsPopup from './TaskDetailsPopup';\n\nconst Board = ({ onClose, handleClearAll })  => {\n  const [tasks, setTasks] = useState({\n    todo: [],\n    'In Progress': [],\n    'awaiting Feedback': [],\n    done: [],\n  });\n\n  const [showTask, setShowTask] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/tasks/');\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      const formattedTasks = {\n        todo: data.filter(task => task.category === 'todo'),\n        'In Progress': data.filter(task => task.category === 'inProgress'),\n        'awaiting Feedback': data.filter(task => task.category === 'awaitingFeedback'),\n        done: data.filter(task => task.category === 'done'),\n      };\n      setTasks(formattedTasks);\n    } catch (error) {\n      console.error('Error fetching tasks:', error.message);\n    }\n  };\n\n  const toggleTask = () => {\n    setShowTask(!showTask);\n  };\n\n  const createTask = (title, content, category) => {\n    const newTask = {\n      id: Date.now(),\n      title,\n      content,\n      category,\n      contacts: [],\n    };\n\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [category]: [newTask, ...prevTasks[category]],\n    }));\n    setShowTask(false);\n  };\n\n  const openTaskDetails = (task) => {\n    setSelectedTask(task);\n  };\n\n  const closeTaskDetails = () => {\n    setSelectedTask(null);\n  };\n\n  const handleEditTask = (editedTask) => {\n    const taskData = {\n      title: editedTask.title,\n      description: editedTask.description,\n      category: editedTask.category,\n      due_date: editedTask.due_date,\n      priority: editedTask.priority,\n      subtasks: editedTask.subtasks.map(subtask => ({\n        text: subtask.text,\n        completed: subtask.completed,\n      })),\n      contacts: editedTask.contacts.map(contact => ({\n        id: contact.id,\n        name: contact.name\n      }))\n    };\n  \n    fetch(`http://localhost:8000/api/tasks/${editedTask.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(taskData),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log('Updated task:', data);\n      // Update the state to reflect the edited task\n      const updatedTasksData = updatedTasks(tasks, editedTask);\n      setTasks(updatedTasksData);\n\n    })\n    .catch((error) => {\n      console.error('Fetch error:', error);\n      // Console log the detailed error message from the server response\n      if (error.response) {\n        error.response.json().then(data => console.error(data));\n      } else {\n        console.error('No detailed error message available.');\n      }\n    });\n  };\n\n  const handleDeleteTask = (taskId) => {\n    // Implement delete logic here\n    console.log('Delete task with ID:', taskId);\n  };\n\n  const updatedTasks = (tasks, editedTask) => {\n    // Überprüfe, ob die tasks oder editedTask null oder undefiniert sind\n    if (!tasks || !editedTask) {\n      return tasks;\n    }\n  \n    // Kopiere die tasks, um sie nicht direkt zu verändern\n    const updatedTasks = { ...tasks };\n  \n    // Finde die Kategorie des bearbeiteten Tasks\n    const categoryTasks = updatedTasks[editedTask.category];\n  \n    // Falls die Kategorie nicht existiert, gibt es nichts zu aktualisieren\n    if (!categoryTasks) {\n      return tasks;\n    }\n  \n    // Finde den bearbeiteten Task in der Kategorie und aktualisiere ihn\n    const updatedCategoryTasks = categoryTasks.map(task =>\n      task.id === editedTask.id ? editedTask : task\n    );\n  \n    // Aktualisiere die Kategorie in den gesamten Aufgaben\n    updatedTasks[editedTask.category] = updatedCategoryTasks;\n  \n    return updatedTasks;\n  };\n  \n\n  const renderTasks = (taskList) => {\n    return taskList.map(task => (\n      <li key={task.id} className=\"task\" onClick={() => openTaskDetails(task)}>\n        <div className=\"task-title\">\n          {task.title}\n          <button className={`priority-button ${task.priority?.toLowerCase() || 'low'}`}>\n            {task.priority || 'Low'}\n          </button>\n        </div>\n        <div className=\"task-content\">{task.description}</div>\n        <div className=\"assigned-contacts-board\">\n          {task.contacts && task.contacts.map(contact => (\n            <div key={contact.id} className=\"contact-initials\" style={{ backgroundColor: contact.color }}>\n              {contact.name\n                .split(' ')\n                .map(part => part.charAt(0))\n                .join('')\n                .toUpperCase()}\n            </div>\n          ))}\n        </div>\n      </li>\n    ));\n  };\n\n  return (\n    <div className=\"kanban-board\">\n      {['todo', 'In Progress', 'awaiting Feedback', 'done'].map(category => (\n        <div key={category} className=\"board-column\">\n          <div className=\"add-button\" onClick={toggleTask}>\n            <FontAwesomeIcon icon={faPlus} className=\"navbar-icon\" />\n            <p className=\"add-text\">Add</p>\n          </div>\n          <h3 className=\"column-title\">{category.replace(/([A-Z])/g, ' $1')}</h3>\n          <ul className=\"task-list\">\n            {renderTasks(tasks[category])}\n          </ul>\n        </div>\n      ))}\n      <TaskDetailsPopup task={selectedTask} onClose={closeTaskDetails} onEdit={handleEditTask} onDelete={handleDeleteTask} />\n      <Task show={showTask} onClose={toggleTask} createTask={createTask} />\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}