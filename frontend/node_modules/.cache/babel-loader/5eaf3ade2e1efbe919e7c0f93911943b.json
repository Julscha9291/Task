{"ast":null,"code":"var _jsxFileName = \"/Users/julian/Coding/Task/frontend/src/components/Navbar.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTableList, faPenToSquare, faBell, faUser, faClipboard, faSignOutAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, IconButton, Divider, Typography, Box, useMediaQuery, Snackbar, Alert } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport './Navbar.css';\nimport { Link, useNavigate } from 'react-router-dom';\nconst Navbar = ({\n  darkMode,\n  toggleDarkMode\n}) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [color, setColor] = useState('#6c757d');\n  const [initials, setInitials] = useState('');\n  const isMobile = useMediaQuery('(max-width:1024px)');\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [newNotificationCount, setNewNotificationCount] = useState(0);\n  const [notificationDetails, setNotificationDetails] = useState([]);\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // Set to track already processed task IDs to avoid duplicates\n  const processedTaskIds = new Set();\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8000/ws/notifications/');\n    ws.onopen = () => {\n      console.log(\"WebSocket is open now.\");\n    };\n    ws.onmessage = async function (event) {\n      console.log(\"Event received:\", event);\n      const data = JSON.parse(event.data);\n      console.log(\"Parsed data:\", data);\n      if (data.type === 'new_task_notification') {\n        console.log(\"Processing notification:\", data.notification);\n        const {\n          task: taskId\n        } = data.notification;\n\n        // Check if the task has already been processed\n        if (!processedTaskIds.has(taskId)) {\n          processedTaskIds.add(taskId); // Mark task as processed\n\n          // Fetch Task Details\n          try {\n            const response = await fetch(`http://localhost:8000/api/tasks/${taskId}`, {\n              method: 'GET',\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            const taskDetails = await response.json();\n            console.log(\"Fetched Task Details:\", taskDetails);\n            setNotificationDetails(prevDetails => [...prevDetails, taskDetails]);\n\n            // Update notifications and increment counter\n            setNotifications(prev => [data.notification, ...prev]);\n            setNewNotificationCount(prevCount => prevCount + 1);\n            setSnackbarOpen(true);\n          } catch (error) {\n            console.error('Error fetching task details:', error);\n          }\n        }\n      } else {\n        console.log(\"Unexpected message type:\", data.type);\n      }\n    };\n    ws.onclose = () => console.log('WebSocket closed unexpectedly');\n    ws.onerror = err => console.error('WebSocket encountered an error: ', err);\n    return () => ws.close();\n  }, []);\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setDropdownOpen(false);\n      }\n    }\n    if (dropdownOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    } else {\n      document.removeEventListener('mousedown', handleClickOutside);\n    }\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, [dropdownOpen]);\n  useEffect(() => {\n    const storedFirstName = localStorage.getItem('first_name') || '';\n    const storedLastName = localStorage.getItem('last_name') || '';\n    const storedColor = localStorage.getItem('color') || '#6c757d';\n    setFirstName(storedFirstName);\n    setLastName(storedLastName);\n    setColor(storedColor);\n    const firstInitial = storedFirstName.charAt(0).toUpperCase();\n    const lastInitial = storedLastName.charAt(0).toUpperCase();\n    setInitials(`${firstInitial}${lastInitial}`);\n  }, []);\n  const toggleMenu = () => setMenuOpen(!menuOpen);\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setSnackbarOpen(false);\n  };\n  const handleBellClick = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNewNotificationCount(0);\n  };\n  const handleGoToBoard = () => {\n    setDropdownOpen(false);\n    setNotificationDetails([]);\n    setNotifications([]);\n    navigate('/board');\n  };\n  const handleLogout = () => {\n    // Logic for logout\n    console.log(\"Logged out\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: `navbar ${darkMode ? 'dark-mode' : ''}`,\n    style: {\n      backgroundColor: '#003B46'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navbar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"navbar-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/images/task.png\",\n    alt: \"Task Logo\",\n    className: \"navbar-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }), \"Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-icon\",\n    onClick: handleBellClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faBell,\n    className: \"navbar-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }), newNotificationCount > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"notification-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, newNotificationCount), dropdownOpen && /*#__PURE__*/React.createElement(\"div\", {\n    ref: dropdownRef,\n    className: \"notification-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: \"dropdown-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, \"Notification\"), notifications.length > 0 ? notifications.map((task, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"notification-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contact-initials-board\",\n    style: {\n      backgroundColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 49\n    }\n  }, initials), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: \"notification-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 53\n    }\n  }, firstName, \" \", lastName, \" assigned a new task.\"), notificationDetails.length > 0 ? notificationDetails.map((task, index) => /*#__PURE__*/React.createElement(Box, {\n    key: index,\n    className: \"notification-box\",\n    sx: {\n      marginBottom: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 65\n    }\n  }, \"Name: \", task.title || 'N/A'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 65\n    }\n  }, \"Description: \", task.description || 'N/A'))) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: \"text-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 57\n    }\n  }, \"Keine Aufgaben verf\\xFCgbar.\"))), index < notifications.length - 1 && /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 82\n    }\n  }))) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    className: \"no-notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 37\n    }\n  }, \"No new notifications\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"create-button\",\n    onClick: handleGoToBoard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 37\n    }\n  }, \"View All\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logout-icon\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSignOutAlt,\n    className: \"dark-mode-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  })), isMobile && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-icon\",\n    onClick: toggleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Drawer, {\n    variant: isMobile ? \"temporary\" : \"permanent\",\n    open: isMobile ? menuOpen : true,\n    onClose: toggleMenu,\n    className: isMobile ? \"mobile-drawer\" : \"drawer\",\n    classes: {\n      paper: 'drawer-paper'\n    },\n    anchor: \"left\",\n    style: {\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      padding: 2,\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    sx: {\n      mt: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, \"Welcome \", firstName, \" \", lastName, \"! \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 57\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-initials\",\n    style: {\n      backgroundColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, initials)))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, [{\n    text: 'Summary',\n    icon: faTableList,\n    link: '/'\n  }, {\n    text: 'Board',\n    icon: faClipboard,\n    link: '/board'\n  }, {\n    text: 'Add Task',\n    icon: faPenToSquare,\n    link: '/task'\n  }, {\n    text: 'Contacts',\n    icon: faUser,\n    link: '/contactList'\n  }, {\n    text: 'Impressum',\n    icon: faInfoCircle,\n    link: '/impressum'\n  }].map((item, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: index,\n    component: Link,\n    to: item.link,\n    onClick: item.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: item.icon,\n    className: \"fa-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbarOpen,\n    autoHideDuration: 6000,\n    onClose: handleSnackbarClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleSnackbarClose,\n    severity: \"info\",\n    sx: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, \"New Task available\")));\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faTableList","faPenToSquare","faBell","faUser","faClipboard","faSignOutAlt","faInfoCircle","Drawer","List","ListItem","ListItemIcon","ListItemText","IconButton","Divider","Typography","Box","useMediaQuery","Snackbar","Alert","MenuIcon","Link","useNavigate","Navbar","darkMode","toggleDarkMode","menuOpen","setMenuOpen","firstName","setFirstName","lastName","setLastName","color","setColor","initials","setInitials","isMobile","navigate","notifications","setNotifications","newNotificationCount","setNewNotificationCount","notificationDetails","setNotificationDetails","dropdownOpen","setDropdownOpen","snackbarOpen","setSnackbarOpen","dropdownRef","processedTaskIds","Set","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","notification","task","taskId","has","add","response","fetch","method","headers","ok","Error","taskDetails","json","prevDetails","prev","prevCount","error","onclose","onerror","err","close","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","storedFirstName","localStorage","getItem","storedLastName","storedColor","firstInitial","charAt","toUpperCase","lastInitial","toggleMenu","handleSnackbarClose","reason","handleBellClick","handleGoToBoard","handleLogout","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","to","src","alt","onClick","icon","ref","variant","length","map","index","key","sx","marginBottom","title","description","edge","open","onClose","classes","paper","anchor","boxShadow","padding","textAlign","mt","text","link","item","button","component","primary","autoHideDuration","severity","width"],"sources":["/Users/julian/Coding/Task/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTableList, faPenToSquare, faBell, faUser, faClipboard, faSignOutAlt, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, IconButton, Divider, Typography, Box, useMediaQuery, Snackbar, Alert } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport './Navbar.css';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Navbar = ({ darkMode, toggleDarkMode }) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [color, setColor] = useState('#6c757d');\n    const [initials, setInitials] = useState('');\n    const isMobile = useMediaQuery('(max-width:1024px)');\n    const navigate = useNavigate();\n    const [notifications, setNotifications] = useState([]);\n    const [newNotificationCount, setNewNotificationCount] = useState(0);\n    const [notificationDetails, setNotificationDetails] = useState([]);\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [snackbarOpen, setSnackbarOpen] = useState(false);\n\n    const dropdownRef = useRef(null);\n\n       // Set to track already processed task IDs to avoid duplicates\n       const processedTaskIds = new Set();\n\n    useEffect(() => {\n        const ws = new WebSocket('ws://localhost:8000/ws/notifications/');\n\n        ws.onopen = () => {\n            console.log(\"WebSocket is open now.\");\n        };\n\n        ws.onmessage = async function(event) {\n            console.log(\"Event received:\", event);\n            const data = JSON.parse(event.data);\n            console.log(\"Parsed data:\", data);\n        \n            if (data.type === 'new_task_notification') {\n                console.log(\"Processing notification:\", data.notification);\n        \n                const { task: taskId } = data.notification;\n                \n                // Check if the task has already been processed\n                if (!processedTaskIds.has(taskId)) {\n                    processedTaskIds.add(taskId); // Mark task as processed\n                    \n                    // Fetch Task Details\n                    try {\n                        const response = await fetch(`http://localhost:8000/api/tasks/${taskId}`, {\n                            method: 'GET',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                        });\n                        if (!response.ok) {\n                            throw new Error('Network response was not ok');\n                        }\n                        const taskDetails = await response.json();\n                        console.log(\"Fetched Task Details:\", taskDetails);\n                        \n                        setNotificationDetails(prevDetails => [...prevDetails, taskDetails]);\n                        \n                        // Update notifications and increment counter\n                        setNotifications(prev => [data.notification, ...prev]);\n                        setNewNotificationCount(prevCount => prevCount + 1);\n                        \n                        setSnackbarOpen(true);\n                    } catch (error) {\n                        console.error('Error fetching task details:', error);\n                    }\n                }\n            } else {\n                console.log(\"Unexpected message type:\", data.type);\n            }\n        };\n\n        ws.onclose = () => console.log('WebSocket closed unexpectedly');\n        ws.onerror = err => console.error('WebSocket encountered an error: ', err);\n\n        return () => ws.close();\n    }, []);\n\n    useEffect(() => {\n        function handleClickOutside(event) {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setDropdownOpen(false);\n            }\n        }\n\n        if (dropdownOpen) {\n            document.addEventListener('mousedown', handleClickOutside);\n        } else {\n            document.removeEventListener('mousedown', handleClickOutside);\n        }\n\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, [dropdownOpen]);\n\n    useEffect(() => {\n        const storedFirstName = localStorage.getItem('first_name') || '';\n        const storedLastName = localStorage.getItem('last_name') || '';\n        const storedColor = localStorage.getItem('color') || '#6c757d';\n\n        setFirstName(storedFirstName);\n        setLastName(storedLastName);\n        setColor(storedColor);\n\n        const firstInitial = storedFirstName.charAt(0).toUpperCase();\n        const lastInitial = storedLastName.charAt(0).toUpperCase();\n        setInitials(`${firstInitial}${lastInitial}`);\n    }, []);\n\n    const toggleMenu = () => setMenuOpen(!menuOpen);\n\n    const handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') return;\n        setSnackbarOpen(false);\n    };\n\n    const handleBellClick = () => {\n        setDropdownOpen(!dropdownOpen);\n        setNewNotificationCount(0);\n    };\n\n    const handleGoToBoard = () => {\n        setDropdownOpen(false);\n        setNotificationDetails([]);\n        setNotifications([]);\n        navigate('/board');\n    };\n\n    const handleLogout = () => {\n        // Logic for logout\n        console.log(\"Logged out\");\n    };\n\n    return (\n        <div className=\"main-container\">\n            <nav className={`navbar ${darkMode ? 'dark-mode' : ''}`} style={{ backgroundColor: '#003B46' }}>\n                <div className=\"navbar-container\">\n                    <Link to=\"/\" className=\"navbar-logo\">\n                        <img src=\"/images/task.png\" alt=\"Task Logo\" className=\"navbar-image\" />\n                        Task\n                    </Link>\n    \n                    <div className=\"notification-icon\" onClick={handleBellClick}>\n                        <FontAwesomeIcon icon={faBell} className=\"navbar-icon\" />\n                        {newNotificationCount > 0 && (\n                            <span className=\"notification-count\">{newNotificationCount}</span>\n                        )}\n                        {dropdownOpen && (\n                            <div ref={dropdownRef} className=\"notification-dropdown\">\n                                <div className=\"dropdown-arrow\"></div>\n                                <Typography variant=\"h6\" className=\"dropdown-header\">\n                                    Notification\n                                </Typography>\n                                {notifications.length > 0 ? (\n                                    notifications.map((task, index) => (\n                                        <div key={index} className=\"notification-item\">\n                                            <div className=\"notification-content\">\n                                                <div className=\"contact-initials-board\" style={{ backgroundColor: color }}>\n                                                    {initials}\n                                                </div>\n                                          \n                                                <div>\n                                                    <Typography variant=\"subtitle2\" className=\"notification-title\">\n                                                        {firstName} {lastName} assigned a new task.\n                                                    </Typography>\n                                                    {notificationDetails.length > 0 ? (\n                                                        notificationDetails.map((task, index) => (\n                                                            <Box key={index} className=\"notification-box\" sx={{ marginBottom: 2 }}>\n                                                                <Typography variant=\"subtitle1\">Name: {task.title || 'N/A'}</Typography>\n                                                                <Typography variant=\"subtitle1\">Description: {task.description || 'N/A'}</Typography>\n                                                            </Box>\n                                                        ))\n                                                    ) : (\n                                                        <Typography variant=\"body2\" className=\"text-dropdown\">\n                                                            Keine Aufgaben verfügbar.\n                                                        </Typography>\n                                                    )}\n                                                </div>\n                                            </div>\n                                            {index < notifications.length - 1 && <Divider />}\n                                        </div>\n                                    ))\n                                ) : (\n                                    <Typography variant=\"body2\" className=\"no-notifications\">\n                                        No new notifications\n                                    </Typography>\n                                )}\n\n                                <div className=\"button\">\n                                    <button type=\"submit\" className=\"create-button\" onClick={handleGoToBoard}>View All</button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n    \n                    <div className=\"logout-icon\" onClick={handleLogout}>\n                        <FontAwesomeIcon icon={faSignOutAlt} className=\"dark-mode-icon\" />\n                    </div>\n                    {isMobile && (\n                        <div className=\"menu-icon\" onClick={toggleMenu}>\n                            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                                <MenuIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                </div>\n            </nav>\n\n            <Drawer\n                variant={isMobile ? \"temporary\" : \"permanent\"}\n                open={isMobile ? menuOpen : true}\n                onClose={toggleMenu}\n                className={isMobile ? \"mobile-drawer\" : \"drawer\"}\n                classes={{ paper: 'drawer-paper' }}\n                anchor=\"left\"\n                style={{ boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)' }}\n            >\n                <Box sx={{ padding: 2, textAlign: 'center' }}>\n                    <Typography variant=\"h6\" sx={{ mt: 1 }}>\n                        Welcome {firstName} {lastName}! <br />\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                            <div className=\"profile-initials\" style={{ backgroundColor: color }}>\n                                {initials}\n                            </div>\n                        </Typography>\n                    </Typography>\n                </Box>\n                <Divider />\n                <List>\n                    {[\n                        { text: 'Summary', icon: faTableList, link: '/' },\n                        { text: 'Board', icon: faClipboard, link: '/board' },\n                        { text: 'Add Task', icon: faPenToSquare, link: '/task' },\n                        { text: 'Contacts', icon: faUser, link: '/contactList' },\n                        { text: 'Impressum', icon: faInfoCircle, link: '/impressum' },\n                    ].map((item, index) => (\n                        <ListItem button key={index} component={Link} to={item.link} onClick={item.onClick}>\n                            <ListItemIcon>\n                                <FontAwesomeIcon icon={item.icon} className=\"fa-icon\" />\n                            </ListItemIcon>\n                            <ListItemText primary={item.text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n    \n            {/* Snackbar für Benachrichtigungen */}\n            <Snackbar\n                open={snackbarOpen}\n                autoHideDuration={6000}\n                onClose={handleSnackbarClose}\n            >\n                <Alert onClose={handleSnackbarClose} severity=\"info\" sx={{ width: '100%' }}>\n                    New Task available\n                </Alert>\n            </Snackbar>\n        </div>\n    );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}